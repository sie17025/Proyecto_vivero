Microchip MPLAB XC8 Compiler V2.10 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.10\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\T_Rasp.X.production.sym \
  --cmf=dist/default/production\T_Rasp.X.production.cmf -z -Q16F887 \
  -oC:\Users\ANDRES~1\AppData\Local\Temp\shas.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/T_Rasp.X.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\ANDRES~1\AppData\Local\Temp\shas.o \
  dist/default/production\T_Rasp.X.production.o 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\ANDRES~1\AppData\Local\Temp\shas.o
                end_init                              C        C        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2     400E       0
dist/default/production\T_Rasp.X.production.o
                cinit                                 F        F       11        8       0
                intentry                              4        4        8        8       0
                text16                              537      537        7      94C       0
                text15                              51F      51F        9      94C       0
                text14                              53E      53E        6      94C       0
                text13                              309      309       69        8       0
                text12                              4F7      4F7       16      94C       0
                text11                              530      530        7      94C       0
                text10                              43A      43A       3B        8       0
                text9                               4C6      4C6       1A      94C       0
                text8                               4E0      4E0       17      94C       0
                text7                               50D      50D       12      94C       0
                text6                               3B8      3B8       46        8       0
                text5                               256      256       B3        8       0
                text4                               372      372       46        8       0
                text3                               3FE      3FE       3C        8       0
                text2                               16C      16C       EA        8       0
                text1                               4A6      4A6       20      94C       0
                maintext                             20       20      14C        8       0
                cstackBANK0                          20       20       25       20       1
                cstackCOMMON                         70       70        5       70       1
                clrtext                             528      528        8      94C       0
                bssBANK0                             45       45       12       20       1
                bssCOMMON                            75       75        4       70       1
                strings                             475      475       31      8EA       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              C        C        3         0
                cinit                                 F        F       11         0
                intentry                              4        4        8         0
                reset_vec                             0        0        3         0
                text16                              537      537        7         0
                text15                              51F      51F        9         0
                text14                              53E      53E        6         0
                text13                              309      309       69         0
                text12                              4F7      4F7       16         0
                text11                              530      530        7         0
                text10                              43A      43A       3B         0
                text9                               4C6      4C6       1A         0
                text8                               4E0      4E0       17         0
                text7                               50D      50D       12         0
                text6                               3B8      3B8       46         0
                text5                               256      256       B3         0
                text4                               372      372       46         0
                text3                               3FE      3FE       3C         0
                text2                               16C      16C       EA         0
                text1                               4A6      4A6       20         0
                maintext                             20       20      14C         0
                clrtext                             528      528        8         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             475      475       31         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        5         1
                bssCOMMON                            75       75        4         1

        CLASS   BANK0          
                cstackBANK0                          20       20       25         1
                bssBANK0                             45       45       12         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  000471  000475         8       0  CODE        2
                cstackBANK0                    000020  000037  000057        20       1  BANK0       1
                cstackCOMMON                   000070  000009  000079        70       1  COMMON      1
                strings                        000475  000031  0004A6       8EA       0  STRING      2
                text1                          0004A6  00009E  000544       94C       0  CODE        2
                config                         002007  000002  002009      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0057-006F             19           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         0544-1FFF            800
        COMMON           0079-007D              5           1
        CONST            0003-0003              1           2
                         0544-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         0544-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0057-006F             19           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         0544-1FFF           1ABC
        STRING           0003-0003              1           2
                         0544-1FFF            100

                                  Symbol Table

?___lwdiv                 cstackBANK0  0020
?___lwmod                 cstackBANK0  0028
?_sprintf                 cstackBANK0  002E
_ANSEL                    (abs)        0188
_ANSELH                   (abs)        0189
_BAUDCTLbits              (abs)        0187
_INTCONbits               (abs)        000B
_PIE1bits                 (abs)        008C
_PIR1bits                 (abs)        000C
_PORTA                    (abs)        0005
_PORTB                    (abs)        0006
_PORTD                    (abs)        0008
_RCIF                     (abs)        0065
_RCREG                    (abs)        001A
_RCSTAbits                (abs)        0018
_RD0                      (abs)        0040
_RD1                      (abs)        0041
_SPBRG                    (abs)        0099
_SPBRGH                   (abs)        009A
_SSPBUF                   (abs)        0013
_SSPCON                   (abs)        0014
_SSPIF                    (abs)        0063
_SSPSTAT                  (abs)        0094
_SSPSTATbits              (abs)        0094
_TRISA                    (abs)        0085
_TRISAbits                (abs)        0085
_TRISB                    (abs)        0086
_TRISC                    (abs)        0087
_TRISD                    (abs)        0088
_TXREG                    (abs)        0019
_TXSTAbits                (abs)        0098
__CFG_BOR4V$BOR40V        (abs)        0000
__CFG_BOREN$OFF           (abs)        0000
__CFG_CP$OFF              (abs)        0000
__CFG_CPD$OFF             (abs)        0000
__CFG_FCMEN$OFF           (abs)        0000
__CFG_FOSC$INTRC_NOCLKOUT (abs)        0000
__CFG_IESO$OFF            (abs)        0000
__CFG_LVP$OFF             (abs)        0000
__CFG_MCLRE$OFF           (abs)        0000
__CFG_PWRTE$OFF           (abs)        0000
__CFG_WDTE$OFF            (abs)        0000
__CFG_WRT$OFF             (abs)        0000
__Habs1                   abs1         0000
__Hbank0                  bank0        0000
__Hbank1                  bank1        0000
__Hbank2                  bank2        0000
__Hbank3                  bank3        0000
__HbssBANK0               bssBANK0     0000
__HbssCOMMON              bssCOMMON    0000
__Hcinit                  cinit        0020
__Hclrtext                clrtext      0000
__Hcode                   code         0000
__Hcommon                 common       0000
__Hconfig                 config       2009
__HcstackBANK0            cstackBANK0  0000
__HcstackCOMMON           cstackCOMMON 0000
__Heeprom_data            eeprom_data  0000
__Hend_init               end_init     000F
__Hfunctab                functab      0000
__Hidloc                  idloc        0000
__Hinit                   init         000C
__Hintentry               intentry     000C
__Hmaintext               maintext     0000
__Hpowerup                powerup      0000
__Hram                    ram          0000
__Hreset_vec              reset_vec    0003
__Hsfr0                   sfr0         0000
__Hsfr1                   sfr1         0000
__Hsfr2                   sfr2         0000
__Hsfr3                   sfr3         0000
__Hspace_0                (abs)        2009
__Hspace_1                (abs)        0079
__Hspace_2                (abs)        0000
__Hspace_3                (abs)        0000
__Hstack                  stack        0000
__Hstrings                strings      0000
__Htext                   text         0000
__Labs1                   abs1         0000
__Lbank0                  bank0        0000
__Lbank1                  bank1        0000
__Lbank2                  bank2        0000
__Lbank3                  bank3        0000
__LbssBANK0               bssBANK0     0000
__LbssCOMMON              bssCOMMON    0000
__Lcinit                  cinit        000F
__Lclrtext                clrtext      0000
__Lcode                   code         0000
__Lcommon                 common       0000
__Lconfig                 config       2007
__LcstackBANK0            cstackBANK0  0000
__LcstackCOMMON           cstackCOMMON 0000
__Leeprom_data            eeprom_data  0000
__Lend_init               end_init     000C
__Lfunctab                functab      0000
__Lidloc                  idloc        0000
__Linit                   init         000C
__Lintentry               intentry     0004
__Lmaintext               maintext     0000
__Lpowerup                powerup      0000
__Lram                    ram          0000
__Lreset_vec              reset_vec    0000
__Lsfr0                   sfr0         0000
__Lsfr1                   sfr1         0000
__Lsfr2                   sfr2         0000
__Lsfr3                   sfr3         0000
__Lspace_0                (abs)        0000
__Lspace_1                (abs)        0000
__Lspace_2                (abs)        0000
__Lspace_3                (abs)        0000
__Lstack                  stack        0000
__Lstrings                strings      0000
__Ltext                   text         0000
__S0                      (abs)        2009
__S1                      (abs)        0079
__S2                      (abs)        0000
__S3                      (abs)        0000
___int_sp                 stack        0000
___latbits                (abs)        0002
___lwdiv                  text4        0372
___lwdiv@counter          cstackBANK0  0025
___lwdiv@dividend         cstackBANK0  0022
___lwdiv@divisor          cstackBANK0  0020
___lwdiv@quotient         cstackBANK0  0026
___lwmod                  text3        03FE
___lwmod@counter          cstackBANK0  002D
___lwmod@dividend         cstackBANK0  002A
___lwmod@divisor          cstackBANK0  0028
___sp                     stack        0000
___stackhi                (abs)        0000
___stacklo                (abs)        0000
__end_of___lwdiv          text4        03B8
__end_of___lwmod          text3        043A
__end_of__initialization  cinit        001C
__end_of__stringtab       strings      0485
__end_of_clcLCD           text11       0537
__end_of_cmdLCD           text12       050D
__end_of_dpowers          strings      048F
__end_of_initLCD          text10       0475
__end_of_isr              text13       0372
__end_of_main             maintext     016C
__end_of_setCursorLCD     text9        04E0
__end_of_setup            text5        0309
__end_of_spiInit          text8        04F7
__end_of_spiRead          text15       0528
__end_of_spiReceiveWait   text16       053E
__end_of_spiWrite         text14       0544
__end_of_sprintf          text2        0256
__end_of_writeCharLCD     text7        051F
__end_of_writeIntLCD      text1        04C6
__end_of_writeStrLCD      text6        03FE
__initialization          cinit        000F
__pbssBANK0               bssBANK0     0045
__pbssCOMMON              bssCOMMON    0075
__pcstackBANK0            cstackBANK0  0020
__pcstackCOMMON           cstackCOMMON 0070
__pintentry               intentry     0004
__pmaintext               maintext     0020
__pstrings                strings      0475
__ptext1                  text1        04A6
__ptext10                 text10       043A
__ptext11                 text11       0530
__ptext12                 text12       04F7
__ptext13                 text13       0309
__ptext14                 text14       053E
__ptext15                 text15       051F
__ptext16                 text16       0537
__ptext2                  text2        016C
__ptext3                  text3        03FE
__ptext4                  text4        0372
__ptext5                  text5        0256
__ptext6                  text6        03B8
__ptext7                  text7        050D
__ptext8                  text8        04E0
__ptext9                  text9        04C6
__size_of___lwdiv         (abs)        0000
__size_of___lwmod         (abs)        0000
__size_of_clcLCD          (abs)        0000
__size_of_cmdLCD          (abs)        0000
__size_of_initLCD         (abs)        0000
__size_of_isr             (abs)        0000
__size_of_main            (abs)        0000
__size_of_setCursorLCD    (abs)        0000
__size_of_setup           (abs)        0000
__size_of_spiInit         (abs)        0000
__size_of_spiRead         (abs)        0000
__size_of_spiReceiveWait  (abs)        0000
__size_of_spiWrite        (abs)        0000
__size_of_sprintf         (abs)        0000
__size_of_writeCharLCD    (abs)        0000
__size_of_writeIntLCD     (abs)        0000
__size_of_writeStrLCD     (abs)        0000
__stringbase              strings      0484
__stringtab               strings      0475
_caudal                   bssBANK0     004B
_clcLCD                   text11       0530
_cmdLCD                   text12       04F7
_cursor                   bssCOMMON    0078
_dpowers                  strings      0485
_escoger                  bssCOMMON    0075
_hum                      bssBANK0     0045
_initLCD                  text10       043A
_isr                      text13       0309
_luz                      bssBANK0     0047
_main                     maintext     0020
_prox                     bssBANK0     0049
_setCursorLCD             text9        04C6
_setup                    text5        0256
_spiInit                  text8        04E0
_spiRead                  text15       051F
_spiReceiveWait           text16       0537
_spiWrite                 text14       053E
_sprintf                  text2        016C
_temp                     bssBANK0     004D
_writeCharLCD             text7        050D
_writeIntLCD              text1        04A6
_writeStrLCD              text6        03B8
btemp                     (abs)        007E
clear_ram0                clrtext      0528
cmdLCD@cmd                cstackBANK0  0022
end_of_initialization     cinit        001C
interrupt_function        intentry     0004
intlevel0                 functab      0000
intlevel1                 functab      0000
intlevel2                 functab      0000
intlevel3                 functab      0000
intlevel4                 functab      0000
intlevel5                 functab      0000
reset_vec                 reset_vec    0000
saved_w                   (abs)        007E
setCursorLCD@x            cstackBANK0  0023
setCursorLCD@y            cstackBANK0  0025
spiInit@sClockIdle        cstackBANK0  0021
spiInit@sDataSample       cstackBANK0  0020
spiInit@sTransmitEdge     cstackBANK0  0022
spiInit@sType             cstackBANK0  0023
spiWrite@dat              cstackCOMMON 0070
sprintf@ap                cstackBANK0  0034
sprintf@c                 cstackBANK0  003A
sprintf@f                 cstackBANK0  002E
sprintf@flag              cstackBANK0  0035
sprintf@prec              cstackBANK0  0036
sprintf@sp                cstackBANK0  0039
sprintf@val               cstackBANK0  0037
start                     init         000C
start_initialization      cinit        000F
writeCharLCD@character    cstackBANK0  0021
writeIntLCD@buffer        cstackBANK0  003E
writeIntLCD@numero        cstackBANK0  0042
writeStrLCD@cont          cstackBANK0  0027
writeStrLCD@string        cstackBANK0  0022
wtemp0                    (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 76 in file "main_rasp.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels required when called:    6
 This function calls:
		_setCursorLCD
		_setup
		_writeIntLCD
		_writeStrLCD
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _writeIntLCD *****************
 Defined at:
		line 66 in file "LCD.c"
 Parameters:    Size  Location     Type
  numero          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  numero          1   34[BANK0 ] unsigned char 
  buffer          4   30[BANK0 ] unsigned char [4]
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       5       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_sprintf
		_writeStrLCD
 This function is called by:
		_main
		_writeFloat
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
 Parameters:    Size  Location     Type
  sp              1    wreg     PTR unsigned char 
		 -> writeIntLCD@buffer(4), 
  f               1   14[BANK0 ] PTR const unsigned char 
		 -> STR_10(3), 
 Auto vars:     Size  Location     Type
  sp              1   25[BANK0 ] PTR unsigned char 
		 -> writeIntLCD@buffer(4), 
  tmpval          4    0        struct .
  val             2   23[BANK0 ] unsigned int 
  cp              2    0        PTR const unsigned char 
  len             2    0        unsigned int 
  c               1   26[BANK0 ] unsigned char 
  prec            1   22[BANK0 ] char 
  flag            1   21[BANK0 ] unsigned char 
  ap              1   20[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), 
 Return value:  Size  Location     Type
                  2   14[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       3       0       0       0
      Locals:         0       7       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0      13       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___lwdiv
		___lwmod
 This function is called by:
		_writeIntLCD
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
 Parameters:    Size  Location     Type
  divisor         2    8[BANK0 ] unsigned int 
  dividend        2   10[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1   13[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    8[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    0[BANK0 ] unsigned int 
  dividend        2    2[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    6[BANK0 ] unsigned int 
  counter         1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function _setup *****************
 Defined at:
		line 148 in file "main_rasp.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_clcLCD
		_initLCD
		_setCursorLCD
		_spiInit
		_writeStrLCD
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _writeStrLCD *****************
 Defined at:
		line 30 in file "LCD.c"
 Parameters:    Size  Location     Type
  string          2    2[BANK0 ] PTR unsigned char 
		 -> writeIntLCD@buffer(4), STR_9(3), STR_8(4), STR_7(3), 
		 -> STR_6(4), STR_5(2), STR_4(4), STR_3(4), 
		 -> STR_2(4), STR_1(4), 
 Auto vars:     Size  Location     Type
  cont            2    7[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_writeCharLCD
 This function is called by:
		_main
		_setup
		_writeIntLCD
 This function uses a non-reentrant model


 *************** function _writeCharLCD *****************
 Defined at:
		line 37 in file "LCD.c"
 Parameters:    Size  Location     Type
  character       1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  character       1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_writeStrLCD
		_writeFloat
 This function uses a non-reentrant model


 *************** function _spiInit *****************
 Defined at:
		line 15 in file "SPI.c"
 Parameters:    Size  Location     Type
  sType           1    wreg     enum E1293
  sDataSample     1    0[BANK0 ] enum E1301
  sClockIdle      1    1[BANK0 ] enum E1305
  sTransmitEdg    1    2[BANK0 ] enum E1309
 Auto vars:     Size  Location     Type
  sType           1    3[BANK0 ] enum E1293
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       3       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _setCursorLCD *****************
 Defined at:
		line 17 in file "LCD.c"
 Parameters:    Size  Location     Type
  y               1    wreg     unsigned char 
  x               1    3[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  y               1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_cmdLCD
 This function is called by:
		_main
		_setup
		_writeFloat
 This function uses a non-reentrant model


 *************** function _initLCD *****************
 Defined at:
		line 45 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_cmdLCD
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _clcLCD *****************
 Defined at:
		line 26 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_cmdLCD
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _cmdLCD *****************
 Defined at:
		line 58 in file "LCD.c"
 Parameters:    Size  Location     Type
  cmd             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  cmd             1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_setCursorLCD
		_clcLCD
		_initLCD
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 48 in file "main_rasp.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          4       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_spiRead
		_spiWrite
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _spiWrite *****************
 Defined at:
		line 37 in file "SPI.c"
 Parameters:    Size  Location     Type
  dat             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  dat             1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_isr
 This function uses a non-reentrant model


 *************** function _spiRead *****************
 Defined at:
		line 50 in file "SPI.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_spiReceiveWait
 This function is called by:
		_isr
 This function uses a non-reentrant model


 *************** function _spiReceiveWait *****************
 Defined at:
		line 32 in file "SPI.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_spiRead
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c
		___lwdiv       		CODE           	0372	0000	71

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c estimated size: 71

shared
		__stringtab    		STRING         	0475	0000	17
		_dpowers       		STRING         	0485	0000	11
		__initialization		CODE           	000F	0000	14

shared estimated size: 42

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c
		___lwmod       		CODE           	03FE	0000	61

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c estimated size: 61

main_rasp.c
		_main          		CODE           	0020	0000	333
		_isr           		CODE           	0309	0000	106
		_setup         		CODE           	0256	0000	180

main_rasp.c estimated size: 619

SPI.c
		_spiWrite      		CODE           	053E	0000	7
		_spiInit       		CODE           	04E0	0000	24
		_spiReceiveWait		CODE           	0537	0000	8
		_spiRead       		CODE           	051F	0000	10

SPI.c estimated size: 49

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c
		_sprintf       		CODE           	016C	0000	235

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c estimated size: 235

LCD.c
		_writeStrLCD   		CODE           	03B8	0000	71
		_clcLCD        		CODE           	0530	0000	8
		_cmdLCD        		CODE           	04F7	0000	23
		_writeCharLCD  		CODE           	050D	0000	19
		_writeIntLCD   		CODE           	04A6	0000	33
		_setCursorLCD  		CODE           	04C6	0000	27
		_initLCD       		CODE           	043A	0000	60

LCD.c estimated size: 241

