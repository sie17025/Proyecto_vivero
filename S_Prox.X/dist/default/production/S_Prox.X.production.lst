

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat May 09 19:01:13 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0014                     _SSPCON	set	20
   285  0008                     _PORTD	set	8
   286  0005                     _PORTA	set	5
   287  0006                     _PORTB	set	6
   288  0006                     _PORTBbits	set	6
   289  0005                     _PORTAbits	set	5
   290  0013                     _SSPBUF	set	19
   291  0014                     _SSPCONbits	set	20
   292  000C                     _PIR1bits	set	12
   293  0063                     _SSPIF	set	99
   294  005E                     _PEIE	set	94
   295  005F                     _GIE	set	95
   296  0030                     _RB0	set	48
   297  0091                     _SSPCON2bits	set	145
   298  0087                     _TRISCbits	set	135
   299  0094                     _SSPSTAT	set	148
   300  0093                     _SSPADD	set	147
   301  0091                     _SSPCON2	set	145
   302  0088                     _TRISD	set	136
   303  0086                     _TRISB	set	134
   304  0085                     _TRISA	set	133
   305  0094                     _SSPSTATbits	set	148
   306  0463                     _SSPIE	set	1123
   307  043C                     _TRISC4	set	1084
   308  043B                     _TRISC3	set	1083
   309  04A0                     _BF	set	1184
   310  0189                     _ANSELH	set	393
   311  0188                     _ANSEL	set	392
   312                           
   313                           ; #config settings
   314  0000                     
   315                           	psect	cinit
   316  000F                     start_initialization:	
   317  000F                     __initialization:	
   318                           
   319                           ; Clear objects allocated to COMMON
   320  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   321  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   322  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   323  0012                     end_of_initialization:	
   324                           ;End of C runtime variable initialization code
   325                           
   326  0012                     __end_of__initialization:	
   327  0012  0183               	clrf	3
   328  0013  120A  118A  28AB   	ljmp	_main	;jump to C main() function
   329                           
   330                           	psect	bssCOMMON
   331  0077                     __pbssCOMMON:	
   332  0077                     _var1:	
   333  0077                     	ds	1
   334  0078                     _z:	
   335  0078                     	ds	1
   336  0079                     _cursor:	
   337  0079                     	ds	1
   338                           
   339                           	psect	cstackCOMMON
   340  0070                     __pcstackCOMMON:	
   341  0070                     ?_setup:	
   342  0070                     ?_I2C_Slave_Init:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?_isr:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ??_isr:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ?_servoRotate0:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ?_servoRotate90:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ?_main:	
   358                           ; 1 bytes @ 0x0
   359                           
   360                           
   361                           ; 1 bytes @ 0x0
   362  0070                     	ds	3
   363  0073                     ??_I2C_Slave_Init:	
   364  0073                     ??_servoRotate0:	
   365                           ; 1 bytes @ 0x3
   366                           
   367  0073                     ??_servoRotate90:	
   368                           ; 1 bytes @ 0x3
   369                           
   370  0073                     I2C_Slave_Init@address:	
   371                           ; 1 bytes @ 0x3
   372                           
   373                           
   374                           ; 1 bytes @ 0x3
   375  0073                     	ds	1
   376  0074                     ??_setup:	
   377                           
   378                           ; 1 bytes @ 0x4
   379  0074                     	ds	1
   380  0075                     servoRotate0@i:	
   381  0075                     servoRotate90@i:	
   382                           ; 2 bytes @ 0x5
   383                           
   384                           
   385                           ; 2 bytes @ 0x5
   386  0075                     	ds	2
   387  0077                     ??_main:	
   388                           
   389                           	psect	maintext
   390  00AB                     __pmaintext:	
   391                           ; 1 bytes @ 0x7
   392 ;;
   393 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   394 ;;
   395 ;; *************** function _main *****************
   396 ;; Defined at:
   397 ;;		line 124 in file "Main_Prox.c"
   398 ;; Parameters:    Size  Location     Type
   399 ;;		None
   400 ;; Auto vars:     Size  Location     Type
   401 ;;		None
   402 ;; Return value:  Size  Location     Type
   403 ;;                  1    wreg      void 
   404 ;; Registers used:
   405 ;;		wreg, status,2, status,0, pclath, cstack
   406 ;; Tracked objects:
   407 ;;		On entry : B00/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   411 ;;      Params:         0       0       0       0       0
   412 ;;      Locals:         0       0       0       0       0
   413 ;;      Temps:          0       0       0       0       0
   414 ;;      Totals:         0       0       0       0       0
   415 ;;Total ram usage:        0 bytes
   416 ;; Hardware stack levels required when called:    3
   417 ;; This function calls:
   418 ;;		_servoRotate0
   419 ;;		_servoRotate90
   420 ;;		_setup
   421 ;; This function is called by:
   422 ;;		Startup code after reset
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426                           
   427                           ;psect for function _main
   428  00AB                     _main:	
   429  00AB                     l828:	
   430                           ;incstack = 0
   431                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   432                           
   433                           
   434                           ;Main_Prox.c: 125:     setup();
   435  00AB  120A  118A  20EA  120A  118A  	fcall	_setup
   436                           
   437                           ;Main_Prox.c: 126:     servoRotate0();
   438  00B0  120A  118A  2083  120A  118A  	fcall	_servoRotate0
   439  00B5                     l830:	
   440                           
   441                           ;Main_Prox.c: 132:         if(PORTAbits.RA0 == 1){
   442  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   443  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   444  00B7  1C05               	btfss	5,0	;volatile
   445  00B8  28BA               	goto	u121
   446  00B9  28BB               	goto	u120
   447  00BA                     u121:	
   448  00BA  28C2               	goto	l79
   449  00BB                     u120:	
   450  00BB                     l832:	
   451                           
   452                           ;Main_Prox.c: 133:             PORTBbits.RB7 = 1;
   453  00BB  1786               	bsf	6,7	;volatile
   454  00BC                     l834:	
   455                           
   456                           ;Main_Prox.c: 134:             servoRotate90();
   457  00BC  120A  118A  205A  120A  118A  	fcall	_servoRotate90
   458                           
   459                           ;Main_Prox.c: 135:         }
   460  00C1  28B5               	goto	l830
   461  00C2                     l79:	
   462                           ;Main_Prox.c: 136:         else if(PORTAbits.RA0 == 0){
   463                           
   464  00C2  1805               	btfsc	5,0	;volatile
   465  00C3  28C5               	goto	u131
   466  00C4  28C6               	goto	u130
   467  00C5                     u131:	
   468  00C5  28B5               	goto	l830
   469  00C6                     u130:	
   470  00C6                     l836:	
   471                           
   472                           ;Main_Prox.c: 138:             PORTBbits.RB7 = 0;
   473  00C6  1386               	bcf	6,7	;volatile
   474  00C7                     l838:	
   475                           
   476                           ;Main_Prox.c: 139:             servoRotate0();
   477  00C7  120A  118A  2083  120A  118A  	fcall	_servoRotate0
   478  00CC  28B5               	goto	l830
   479  00CD  120A  118A  280C   	ljmp	start
   480  00D0                     __end_of_main:	
   481                           
   482                           	psect	text1
   483  00EA                     __ptext1:	
   484 ;; *************** function _setup *****************
   485 ;; Defined at:
   486 ;;		line 169 in file "Main_Prox.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;		None
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      void 
   493 ;; Registers used:
   494 ;;		wreg, status,2, status,0, pclath, cstack
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   500 ;;      Params:         0       0       0       0       0
   501 ;;      Locals:         0       0       0       0       0
   502 ;;      Temps:          0       0       0       0       0
   503 ;;      Totals:         0       0       0       0       0
   504 ;;Total ram usage:        0 bytes
   505 ;; Hardware stack levels used:    1
   506 ;; Hardware stack levels required when called:    2
   507 ;; This function calls:
   508 ;;		_I2C_Slave_Init
   509 ;; This function is called by:
   510 ;;		_main
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           
   515                           ;psect for function _setup
   516  00EA                     _setup:	
   517  00EA                     l770:	
   518                           ;incstack = 0
   519                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   520                           
   521                           
   522                           ;Main_Prox.c: 170:     ANSEL = 0;
   523  00EA  1683               	bsf	3,5	;RP0=1, select bank3
   524  00EB  1703               	bsf	3,6	;RP1=1, select bank3
   525  00EC  0188               	clrf	8	;volatile
   526                           
   527                           ;Main_Prox.c: 171:     ANSELH = 0;
   528  00ED  0189               	clrf	9	;volatile
   529  00EE                     l772:	
   530                           
   531                           ;Main_Prox.c: 173:     TRISA = 0xFF;
   532  00EE  30FF               	movlw	255
   533  00EF  1683               	bsf	3,5	;RP0=1, select bank1
   534  00F0  1303               	bcf	3,6	;RP1=0, select bank1
   535  00F1  0085               	movwf	5	;volatile
   536  00F2                     l774:	
   537                           
   538                           ;Main_Prox.c: 174:     TRISB = 0;
   539  00F2  0186               	clrf	6	;volatile
   540  00F3                     l776:	
   541                           
   542                           ;Main_Prox.c: 175:     TRISD = 0;
   543  00F3  0188               	clrf	8	;volatile
   544  00F4                     l778:	
   545                           
   546                           ;Main_Prox.c: 177:     PORTB = 0;
   547  00F4  1283               	bcf	3,5	;RP0=0, select bank0
   548  00F5  1303               	bcf	3,6	;RP1=0, select bank0
   549  00F6  0186               	clrf	6	;volatile
   550  00F7                     l780:	
   551                           
   552                           ;Main_Prox.c: 178:     PORTA = 0;
   553  00F7  0185               	clrf	5	;volatile
   554  00F8                     l782:	
   555                           
   556                           ;Main_Prox.c: 179:     PORTB = 0;
   557  00F8  0186               	clrf	6	;volatile
   558  00F9                     l784:	
   559                           
   560                           ;Main_Prox.c: 180:     PORTD = 0;
   561  00F9  0188               	clrf	8	;volatile
   562  00FA                     l786:	
   563                           
   564                           ;Main_Prox.c: 182:     I2C_Slave_Init(0x80);
   565  00FA  3080               	movlw	128
   566  00FB  120A  118A  20D0  120A  118A  	fcall	_I2C_Slave_Init
   567  0100                     l87:	
   568  0100  0008               	return
   569  0101                     __end_of_setup:	
   570                           
   571                           	psect	text2
   572  00D0                     __ptext2:	
   573 ;; *************** function _I2C_Slave_Init *****************
   574 ;; Defined at:
   575 ;;		line 91 in file "I2C_Lib.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;  address         1    wreg     unsigned char 
   578 ;; Auto vars:     Size  Location     Type
   579 ;;  address         1    3[COMMON] unsigned char 
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      void 
   582 ;; Registers used:
   583 ;;		wreg
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   589 ;;      Params:         0       0       0       0       0
   590 ;;      Locals:         1       0       0       0       0
   591 ;;      Temps:          0       0       0       0       0
   592 ;;      Totals:         1       0       0       0       0
   593 ;;Total ram usage:        1 bytes
   594 ;; Hardware stack levels used:    1
   595 ;; Hardware stack levels required when called:    1
   596 ;; This function calls:
   597 ;;		Nothing
   598 ;; This function is called by:
   599 ;;		_setup
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           
   604                           ;psect for function _I2C_Slave_Init
   605  00D0                     _I2C_Slave_Init:	
   606                           
   607                           ;incstack = 0
   608                           ; Regs used in _I2C_Slave_Init: [wreg]
   609                           ;I2C_Slave_Init@address stored from wreg
   610  00D0  00F3               	movwf	I2C_Slave_Init@address
   611  00D1                     l736:	
   612                           
   613                           ;I2C_Lib.c: 91: void I2C_Slave_Init(uint8_t address);I2C_Lib.c: 92: {;I2C_Lib.c: 93:    
      +                           SSPADD = address;
   614  00D1  0873               	movf	I2C_Slave_Init@address,w
   615  00D2  1683               	bsf	3,5	;RP0=1, select bank1
   616  00D3  1303               	bcf	3,6	;RP1=0, select bank1
   617  00D4  0093               	movwf	19	;volatile
   618                           
   619                           ;I2C_Lib.c: 94:     SSPCON = 0x36;
   620  00D5  3036               	movlw	54
   621  00D6  1283               	bcf	3,5	;RP0=0, select bank0
   622  00D7  1303               	bcf	3,6	;RP1=0, select bank0
   623  00D8  0094               	movwf	20	;volatile
   624                           
   625                           ;I2C_Lib.c: 95:     SSPSTAT = 0x80;
   626  00D9  3080               	movlw	128
   627  00DA  1683               	bsf	3,5	;RP0=1, select bank1
   628  00DB  1303               	bcf	3,6	;RP1=0, select bank1
   629  00DC  0094               	movwf	20	;volatile
   630                           
   631                           ;I2C_Lib.c: 96:     SSPCON2 = 0x01;
   632  00DD  3001               	movlw	1
   633  00DE  0091               	movwf	17	;volatile
   634  00DF                     l738:	
   635                           
   636                           ;I2C_Lib.c: 97:     TRISC3 = 1;
   637  00DF  1587               	bsf	7,3	;volatile
   638  00E0                     l740:	
   639                           
   640                           ;I2C_Lib.c: 98:     TRISC4 = 1;
   641  00E0  1607               	bsf	7,4	;volatile
   642  00E1                     l742:	
   643                           
   644                           ;I2C_Lib.c: 99:     GIE = 1;
   645  00E1  178B               	bsf	11,7	;volatile
   646  00E2                     l744:	
   647                           
   648                           ;I2C_Lib.c: 100:     PEIE = 1;
   649  00E2  170B               	bsf	11,6	;volatile
   650  00E3                     l746:	
   651                           
   652                           ;I2C_Lib.c: 101:     SSPIF = 0;
   653  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   654  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   655  00E5  118C               	bcf	12,3	;volatile
   656  00E6                     l748:	
   657                           
   658                           ;I2C_Lib.c: 102:     SSPIE = 1;
   659  00E6  1683               	bsf	3,5	;RP0=1, select bank1
   660  00E7  1303               	bcf	3,6	;RP1=0, select bank1
   661  00E8  158C               	bsf	12,3	;volatile
   662  00E9                     l144:	
   663  00E9  0008               	return
   664  00EA                     __end_of_I2C_Slave_Init:	
   665                           
   666                           	psect	text3
   667  005A                     __ptext3:	
   668 ;; *************** function _servoRotate90 *****************
   669 ;; Defined at:
   670 ;;		line 98 in file "Main_Prox.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;		None
   673 ;; Auto vars:     Size  Location     Type
   674 ;;  i               2    5[COMMON] unsigned int 
   675 ;; Return value:  Size  Location     Type
   676 ;;                  1    wreg      void 
   677 ;; Registers used:
   678 ;;		wreg, status,2
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   684 ;;      Params:         0       0       0       0       0
   685 ;;      Locals:         2       0       0       0       0
   686 ;;      Temps:          2       0       0       0       0
   687 ;;      Totals:         4       0       0       0       0
   688 ;;Total ram usage:        4 bytes
   689 ;; Hardware stack levels used:    1
   690 ;; Hardware stack levels required when called:    1
   691 ;; This function calls:
   692 ;;		Nothing
   693 ;; This function is called by:
   694 ;;		_main
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           
   699                           ;psect for function _servoRotate90
   700  005A                     _servoRotate90:	
   701  005A                     l760:	
   702                           ;incstack = 0
   703                           ; Regs used in _servoRotate90: [wreg+status,2]
   704                           
   705                           
   706                           ;Main_Prox.c: 100:   unsigned int i;;Main_Prox.c: 101:   for(i=0;i<50;i++)
   707  005A  01F5               	clrf	servoRotate90@i
   708  005B  01F6               	clrf	servoRotate90@i+1
   709  005C                     l66:	
   710                           
   711                           ;Main_Prox.c: 102:   {;Main_Prox.c: 103:     RB0 = 1;
   712  005C  1283               	bcf	3,5	;RP0=0, select bank0
   713  005D  1303               	bcf	3,6	;RP1=0, select bank0
   714  005E  1406               	bsf	6,0	;volatile
   715  005F                     l766:	
   716                           
   717                           ;Main_Prox.c: 104:     _delay((unsigned long)((1700)*(4000000/4000000.0)));
   718  005F  30F2               	movlw	242
   719  0060  00F3               	movwf	??_servoRotate90
   720  0061                     u167:	
   721  0061  2862               	nop2
   722  0062  2863               	nop2
   723  0063  0BF3               	decfsz	??_servoRotate90,f
   724  0064  2861               	goto	u167
   725  0065  2866               	nop2
   726  0066  2867               	nop2
   727  0067  0000               	nop
   728  0068                     l768:	
   729                           
   730                           ;Main_Prox.c: 105:     RB0 = 0;
   731  0068  1283               	bcf	3,5	;RP0=0, select bank0
   732  0069  1303               	bcf	3,6	;RP1=0, select bank0
   733  006A  1006               	bcf	6,0	;volatile
   734                           
   735                           ;Main_Prox.c: 106:     _delay((unsigned long)((18300)*(4000000/4000000.0)));
   736  006B  3018               	movlw	24
   737  006C  00F4               	movwf	??_servoRotate90+1
   738  006D  30C3               	movlw	195
   739  006E  00F3               	movwf	??_servoRotate90
   740  006F                     u177:	
   741  006F  0BF3               	decfsz	??_servoRotate90,f
   742  0070  286F               	goto	u177
   743  0071  0BF4               	decfsz	??_servoRotate90+1,f
   744  0072  286F               	goto	u177
   745                           
   746                           ;Main_Prox.c: 107:   }
   747  0073  3001               	movlw	1
   748  0074  07F5               	addwf	servoRotate90@i,f
   749  0075  1803               	skipnc
   750  0076  0AF6               	incf	servoRotate90@i+1,f
   751  0077  3000               	movlw	0
   752  0078  07F6               	addwf	servoRotate90@i+1,f
   753  0079  3000               	movlw	0
   754  007A  0276               	subwf	servoRotate90@i+1,w
   755  007B  3032               	movlw	50
   756  007C  1903               	skipnz
   757  007D  0275               	subwf	servoRotate90@i,w
   758  007E  1C03               	skipc
   759  007F  2881               	goto	u21
   760  0080  2882               	goto	u20
   761  0081                     u21:	
   762  0081  285C               	goto	l66
   763  0082                     u20:	
   764  0082                     l68:	
   765  0082  0008               	return
   766  0083                     __end_of_servoRotate90:	
   767                           
   768                           	psect	text4
   769  0083                     __ptext4:	
   770 ;; *************** function _servoRotate0 *****************
   771 ;; Defined at:
   772 ;;		line 86 in file "Main_Prox.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;  i               2    5[COMMON] unsigned int 
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, status,2
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   786 ;;      Params:         0       0       0       0       0
   787 ;;      Locals:         2       0       0       0       0
   788 ;;      Temps:          2       0       0       0       0
   789 ;;      Totals:         4       0       0       0       0
   790 ;;Total ram usage:        4 bytes
   791 ;; Hardware stack levels used:    1
   792 ;; Hardware stack levels required when called:    1
   793 ;; This function calls:
   794 ;;		Nothing
   795 ;; This function is called by:
   796 ;;		_main
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           
   801                           ;psect for function _servoRotate0
   802  0083                     _servoRotate0:	
   803  0083                     l750:	
   804                           ;incstack = 0
   805                           ; Regs used in _servoRotate0: [wreg+status,2]
   806                           
   807                           
   808                           ;Main_Prox.c: 88:   unsigned int i;;Main_Prox.c: 89:   for(i=0;i<50;i++)
   809  0083  01F5               	clrf	servoRotate0@i
   810  0084  01F6               	clrf	servoRotate0@i+1
   811  0085                     l61:	
   812                           
   813                           ;Main_Prox.c: 90:   {;Main_Prox.c: 91:     RB0 = 1;
   814  0085  1283               	bcf	3,5	;RP0=0, select bank0
   815  0086  1303               	bcf	3,6	;RP1=0, select bank0
   816  0087  1406               	bsf	6,0	;volatile
   817  0088                     l756:	
   818                           
   819                           ;Main_Prox.c: 92:     _delay((unsigned long)((800)*(4000000/4000000.0)));
   820  0088  309F               	movlw	159
   821  0089  00F3               	movwf	??_servoRotate0
   822  008A                     u187:	
   823  008A  288B               	nop2
   824  008B  0BF3               	decfsz	??_servoRotate0,f
   825  008C  288A               	goto	u187
   826  008D  288E               	nop2
   827  008E  288F               	nop2
   828  008F                     l758:	
   829                           
   830                           ;Main_Prox.c: 93:     RB0 = 0;
   831  008F  1283               	bcf	3,5	;RP0=0, select bank0
   832  0090  1303               	bcf	3,6	;RP1=0, select bank0
   833  0091  1006               	bcf	6,0	;volatile
   834                           
   835                           ;Main_Prox.c: 94:     _delay((unsigned long)((19200)*(4000000/4000000.0)));
   836  0092  3019               	movlw	25
   837  0093  00F4               	movwf	??_servoRotate0+1
   838  0094  30EE               	movlw	238
   839  0095  00F3               	movwf	??_servoRotate0
   840  0096                     u197:	
   841  0096  0BF3               	decfsz	??_servoRotate0,f
   842  0097  2896               	goto	u197
   843  0098  0BF4               	decfsz	??_servoRotate0+1,f
   844  0099  2896               	goto	u197
   845  009A  0000               	nop
   846                           
   847                           ;Main_Prox.c: 95:   }
   848  009B  3001               	movlw	1
   849  009C  07F5               	addwf	servoRotate0@i,f
   850  009D  1803               	skipnc
   851  009E  0AF6               	incf	servoRotate0@i+1,f
   852  009F  3000               	movlw	0
   853  00A0  07F6               	addwf	servoRotate0@i+1,f
   854  00A1  3000               	movlw	0
   855  00A2  0276               	subwf	servoRotate0@i+1,w
   856  00A3  3032               	movlw	50
   857  00A4  1903               	skipnz
   858  00A5  0275               	subwf	servoRotate0@i,w
   859  00A6  1C03               	skipc
   860  00A7  28A9               	goto	u11
   861  00A8  28AA               	goto	u10
   862  00A9                     u11:	
   863  00A9  2885               	goto	l61
   864  00AA                     u10:	
   865  00AA                     l63:	
   866  00AA  0008               	return
   867  00AB                     __end_of_servoRotate0:	
   868                           
   869                           	psect	text5
   870  0016                     __ptext5:	
   871 ;; *************** function _isr *****************
   872 ;; Defined at:
   873 ;;		line 49 in file "Main_Prox.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, status,2
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   887 ;;      Params:         0       0       0       0       0
   888 ;;      Locals:         0       0       0       0       0
   889 ;;      Temps:          3       0       0       0       0
   890 ;;      Totals:         3       0       0       0       0
   891 ;;Total ram usage:        3 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; This function calls:
   894 ;;		Nothing
   895 ;; This function is called by:
   896 ;;		Interrupt level 1
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           
   901                           ;psect for function _isr
   902  0016                     _isr:	
   903  0016                     i1l792:	
   904                           
   905                           ;Main_Prox.c: 50:    if(PIR1bits.SSPIF == 1){
   906  0016  1283               	bcf	3,5	;RP0=0, select bank0
   907  0017  1303               	bcf	3,6	;RP1=0, select bank0
   908  0018  1D8C               	btfss	12,3	;volatile
   909  0019  281B               	goto	u5_21
   910  001A  281C               	goto	u5_20
   911  001B                     u5_21:	
   912  001B  2853               	goto	i1l58
   913  001C                     u5_20:	
   914  001C                     i1l794:	
   915                           
   916                           ;Main_Prox.c: 52:         SSPCONbits.CKP = 0;
   917  001C  1214               	bcf	20,4	;volatile
   918                           
   919                           ;Main_Prox.c: 54:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
   920  001D  1B14               	btfsc	20,6	;volatile
   921  001E  2820               	goto	u6_21
   922  001F  2821               	goto	u6_20
   923  0020                     u6_21:	
   924  0020  2825               	goto	i1l798
   925  0021                     u6_20:	
   926  0021                     i1l796:	
   927  0021  1F94               	btfss	20,7	;volatile
   928  0022  2824               	goto	u7_21
   929  0023  2825               	goto	u7_20
   930  0024                     u7_21:	
   931  0024  282D               	goto	i1l50
   932  0025                     u7_20:	
   933  0025                     i1l798:	
   934                           
   935                           ;Main_Prox.c: 55:             z = SSPBUF;
   936  0025  0813               	movf	19,w	;volatile
   937  0026  00F0               	movwf	??_isr
   938  0027  0870               	movf	??_isr,w
   939  0028  00F8               	movwf	_z
   940  0029                     i1l800:	
   941                           
   942                           ;Main_Prox.c: 56:             SSPCONbits.SSPOV = 0;
   943  0029  1314               	bcf	20,6	;volatile
   944  002A                     i1l802:	
   945                           
   946                           ;Main_Prox.c: 57:             SSPCONbits.WCOL = 0;
   947  002A  1394               	bcf	20,7	;volatile
   948  002B                     i1l804:	
   949                           
   950                           ;Main_Prox.c: 58:             SSPCONbits.CKP = 1;
   951  002B  1614               	bsf	20,4	;volatile
   952                           
   953                           ;Main_Prox.c: 59:         }
   954  002C  2851               	goto	i1l53
   955  002D                     i1l50:	
   956                           ;Main_Prox.c: 72:         else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
   957                           
   958  002D  1683               	bsf	3,5	;RP0=1, select bank1
   959  002E  1303               	bcf	3,6	;RP1=0, select bank1
   960  002F  1A94               	btfsc	20,5	;volatile
   961  0030  2832               	goto	u8_21
   962  0031  2833               	goto	u8_20
   963  0032                     u8_21:	
   964  0032  2851               	goto	i1l53
   965  0033                     u8_20:	
   966  0033                     i1l806:	
   967  0033  1D14               	btfss	20,2	;volatile
   968  0034  2836               	goto	u9_21
   969  0035  2837               	goto	u9_20
   970  0036                     u9_21:	
   971  0036  2851               	goto	i1l53
   972  0037                     u9_20:	
   973  0037                     i1l808:	
   974                           
   975                           ;Main_Prox.c: 73:             z = SSPBUF;
   976  0037  1283               	bcf	3,5	;RP0=0, select bank0
   977  0038  1303               	bcf	3,6	;RP1=0, select bank0
   978  0039  0813               	movf	19,w	;volatile
   979  003A  00F0               	movwf	??_isr
   980  003B  0870               	movf	??_isr,w
   981  003C  00F8               	movwf	_z
   982  003D                     i1l810:	
   983                           
   984                           ;Main_Prox.c: 74:             BF = 0;
   985  003D  1683               	bsf	3,5	;RP0=1, select bank1
   986  003E  1303               	bcf	3,6	;RP1=0, select bank1
   987  003F  1014               	bcf	20,0	;volatile
   988  0040                     i1l812:	
   989                           
   990                           ;Main_Prox.c: 75:             SSPBUF = PORTAbits.RA0;
   991  0040  3000               	movlw	0
   992  0041  1283               	bcf	3,5	;RP0=0, select bank0
   993  0042  1303               	bcf	3,6	;RP1=0, select bank0
   994  0043  1805               	btfsc	5,0	;volatile
   995  0044  3001               	movlw	1
   996  0045  0093               	movwf	19	;volatile
   997  0046                     i1l814:	
   998                           
   999                           ;Main_Prox.c: 76:             SSPCONbits.CKP = 1;
  1000  0046  1614               	bsf	20,4	;volatile
  1001  0047                     i1l816:	
  1002                           
  1003                           ;Main_Prox.c: 77:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1004  0047  3053               	movlw	83
  1005  0048  00F0               	movwf	??_isr
  1006  0049                     u20_27:	
  1007  0049  0BF0               	decfsz	??_isr,f
  1008  004A  2849               	goto	u20_27
  1009  004B                     i1l55:	
  1010                           ;Main_Prox.c: 78:             while(SSPSTATbits.BF);
  1011                           
  1012  004B  1683               	bsf	3,5	;RP0=1, select bank1
  1013  004C  1303               	bcf	3,6	;RP1=0, select bank1
  1014  004D  1814               	btfsc	20,0	;volatile
  1015  004E  2850               	goto	u10_21
  1016  004F  2851               	goto	u10_20
  1017  0050                     u10_21:	
  1018  0050  284B               	goto	i1l55
  1019  0051                     u10_20:	
  1020  0051                     i1l53:	
  1021                           
  1022                           ;Main_Prox.c: 81:         PIR1bits.SSPIF = 0;
  1023  0051  1283               	bcf	3,5	;RP0=0, select bank0
  1024  0052  118C               	bcf	12,3	;volatile
  1025  0053                     i1l58:	
  1026  0053  0872               	movf	??_isr+2,w
  1027  0054  008A               	movwf	10
  1028  0055  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  1029  0056  0083               	movwf	3
  1030  0057  0EFE               	swapf	btemp,f
  1031  0058  0E7E               	swapf	btemp,w
  1032  0059  0009               	retfie
  1033  005A                     __end_of_isr:	
  1034  007E                     btemp	set	126	;btemp
  1035  007E                     wtemp0	set	126
  1036                           
  1037                           	psect	intentry
  1038  0004                     __pintentry:	
  1039                           ;incstack = 0
  1040                           ; Regs used in _isr: [wreg+status,2]
  1041                           
  1042  0004                     interrupt_function:	
  1043  007E                     saved_w	set	btemp
  1044  0004  00FE               	movwf	btemp
  1045  0005  0E03               	swapf	3,w
  1046  0006  00F1               	movwf	??_isr+1
  1047  0007  080A               	movf	10,w
  1048  0008  00F2               	movwf	??_isr+2
  1049  0009  120A  118A  2816   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_servoRotate0
    _main->_servoRotate90
    _setup->_I2C_Slave_Init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      75
                       _servoRotate0
                      _servoRotate90
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _servoRotate90                                        4     4      0      30
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _servoRotate0                                         4     4      0      30
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _servoRotate0
   _servoRotate90
   _setup
     _I2C_Slave_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat May 09 19:01:13 2020

                       _z 0078               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      _BF 04A0                        l61 0085                        l63 00AA  
                      l66 005C                        l68 0082                        l87 0100  
                      l79 00C2                        u10 00AA                        u11 00A9  
                      u20 0082                        u21 0081             servoRotate0@i 0075  
                     l144 00E9                       l740 00E0                       l750 0083  
                     l742 00E1                       l830 00B5                       l760 005A  
                     l744 00E2                       l736 00D1                       l832 00BB  
                     l746 00E3                       l738 00DF                       l770 00EA  
                     l834 00BC                       l756 0088                       l748 00E6  
                     l780 00F7                       l772 00EE                       l836 00C6  
                     l828 00AB                       l758 008F                       l766 005F  
                     l782 00F8                       l774 00F2                       l838 00C7  
                     l768 0068                       l784 00F9                       l776 00F3  
                     l786 00FA                       l778 00F4                       _GIE 005F  
                     _RB0 0030                       u120 00BB                       u121 00BA  
                     u130 00C6                       u131 00C5                       u167 0061  
                     u177 006F              __CFG_CPD$OFF 0000                       u187 008A  
                     u197 0096                       _isr 0016            servoRotate90@i 0075  
            __CFG_LVP$OFF 0000                      ?_isr 0070                      _PEIE 005E  
                    i1l50 002D                      i1l53 0051                      i1l55 004B  
                    i1l58 0053                      u5_20 001C                      u5_21 001B  
                    u6_20 0021                      u6_21 0020                      u7_20 0025  
                    u7_21 0024                      u8_20 0033                      u8_21 0032  
                    u9_20 0037                      u9_21 0036              __CFG_WRT$OFF 0000  
                    _main 00AB                      _var1 0077                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000           ??_servoRotate90 0073  
                   ??_isr 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l800 0029                     i1l810 003D  
                   i1l802 002A                     i1l812 0040                     i1l804 002B  
                   i1l814 0046                     i1l806 0033                     i1l816 0047  
                   i1l808 0037                     i1l792 0016                     i1l794 001C  
                   i1l796 0021                     i1l798 0025                     u10_20 0051  
                   u10_21 0050                     u20_27 0049                     _PORTA 0005  
                   _PORTB 0006                     _PORTD 0008                     _TRISA 0085  
                   _TRISB 0086                     _TRISD 0088                     _SSPIE 0463  
                   _SSPIF 0063            __CFG_FCMEN$OFF 0000                     _setup 00EA  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 00D0                    ??_main 0077                    ?_setup 0070  
                  _ANSELH 0189                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _SSPBUF 0013                    _SSPCON 0014  
          __CFG_PWRTE$OFF 0000                    _cursor 0079                    saved_w 007E  
 __end_of__initialization 0012            __pcstackCOMMON 0070   __size_of_I2C_Slave_Init 001A  
           __end_of_setup 0101                   ??_setup 0074     I2C_Slave_Init@address 0073  
              __pmaintext 00AB                __pintentry 0004                   _SSPCON2 0091  
                 _SSPSTAT 0094     __end_of_servoRotate90 0083                   __ptext1 00EA  
                 __ptext2 00D0                   __ptext3 005A                   __ptext4 0083  
                 __ptext5 0016              __size_of_isr 0044      end_of_initialization 0012  
           ?_servoRotate0 0070            _I2C_Slave_Init 00D0                 _PORTAbits 0005  
               _PORTBbits 0006                 _TRISCbits 0087    __end_of_I2C_Slave_Init 00EA  
          ??_servoRotate0 0073       start_initialization 000F               __end_of_isr 005A  
__CFG_FOSC$INTRC_NOCLKOUT 0000           ?_I2C_Slave_Init 0070               __pbssCOMMON 0077  
               ___latbits 0002      __end_of_servoRotate0 00AB            __size_of_setup 0017  
       interrupt_function 0004                  _PIR1bits 000C    __size_of_servoRotate90 0029  
       __CFG_BOR4V$BOR40V 0000          ??_I2C_Slave_Init 0073             __size_of_main 0025  
           _servoRotate90 005A     __size_of_servoRotate0 0028                  intlevel1 0000  
          ?_servoRotate90 0070              _servoRotate0 0083               _SSPCON2bits 0091  
              _SSPCONbits 0014  
