

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon May 11 17:48:13 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.10
    34                           ; Generated 31/07/2019 GMT
    35                           ; 
    36                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457                           
   458                           	psect	strings
   459  0003                     __pstrings:	
   460  0003                     stringtab:	
   461  0003                     __stringtab:	
   462                           
   463                           ;	String table - string pointers are 1 byte each
   464  0003  1BFF               	btfsc	btemp+1,7
   465  0004  280D               	ljmp	stringcode
   466  0005  1383               	bcf	3,7
   467  0006  187F               	btfsc	btemp+1,0
   468  0007  1783               	bsf	3,7
   469  0008  0800               	movf	0,w
   470  0009  0A84               	incf	4,f
   471  000A  1903               	skipnz
   472  000B  0AFF               	incf	btemp+1,f
   473  000C  0008               	return
   474  000D                     stringcode:	
   475  000D                     stringdir:	
   476  000D  3000               	movlw	high stringdir
   477  000E  008A               	movwf	10
   478  000F  0804               	movf	4,w
   479  0010  0A84               	incf	4,f
   480  0011  0782               	addwf	2,f
   481  0012                     __stringbase:	
   482  0012  3400               	retlw	0
   483  0013                     __end_of__stringtab:	
   484  0013                     _dpowers:	
   485  0013  3401               	retlw	1
   486  0014  3400               	retlw	0
   487  0015  340A               	retlw	10
   488  0016  3400               	retlw	0
   489  0017  3464               	retlw	100
   490  0018  3400               	retlw	0
   491  0019  34E8               	retlw	232
   492  001A  3403               	retlw	3
   493  001B  3410               	retlw	16
   494  001C  3427               	retlw	39
   495  001D                     __end_of_dpowers:	
   496  0013                     _SSPBUF	set	19
   497  0014                     _SSPCON	set	20
   498  0018                     _RCSTAbits	set	24
   499  0008                     _PORTD	set	8
   500  0006                     _PORTB	set	6
   501  0019                     _TXREG	set	25
   502  001A                     _RCREG	set	26
   503  00C4                     _CREN	set	196
   504  00C7                     _SPEN	set	199
   505  0041                     _RD1	set	65
   506  0040                     _RD0	set	64
   507  0063                     _SSPIF	set	99
   508  005E                     _PEIE	set	94
   509  005F                     _GIE	set	95
   510  0065                     _RCIF	set	101
   511  0091                     _SSPCON2bits	set	145
   512  0087                     _TRISCbits	set	135
   513  0094                     _SSPSTAT	set	148
   514  0093                     _SSPADD	set	147
   515  0091                     _SSPCON2	set	145
   516  009A                     _SPBRGH	set	154
   517  0099                     _SPBRG	set	153
   518  0088                     _TRISD	set	136
   519  0086                     _TRISB	set	134
   520  0098                     _TXSTAbits	set	152
   521  04C1                     _TRMT	set	1217
   522  04C5                     _TXEN	set	1221
   523  043E                     _TRISC6	set	1086
   524  043F                     _TRISC7	set	1087
   525  04C4                     _SYNC	set	1220
   526  04C2                     _BRGH	set	1218
   527  0463                     _SSPIE	set	1123
   528  043C                     _TRISC4	set	1084
   529  043B                     _TRISC3	set	1083
   530  0187                     _BAUDCTLbits	set	391
   531  0189                     _ANSELH	set	393
   532  0188                     _ANSEL	set	392
   533  001D                     STR_4:	
   534  001D  3453               	retlw	83	;'S'
   535  001E  344F               	retlw	79	;'O'
   536  001F  344C               	retlw	76	;'L'
   537  0020  3400               	retlw	0
   538  0021                     STR_2:	
   539  0021  3454               	retlw	84	;'T'
   540  0022  3445               	retlw	69	;'E'
   541  0023  344D               	retlw	77	;'M'
   542  0024  3400               	retlw	0
   543  0025                     STR_6:	
   544  0025  3425               	retlw	37	;'%'
   545  0026  3464               	retlw	100	;'d'
   546  0027  3400               	retlw	0
   547  0028                     STR_5:	
   548  0028  3443               	retlw	67	;'C'
   549  0029  3441               	retlw	65	;'A'
   550  002A  3400               	retlw	0
   551  002B                     STR_3:	
   552  002B  3448               	retlw	72	;'H'
   553  002C  3455               	retlw	85	;'U'
   554  002D  3400               	retlw	0
   555  002E                     STR_1:	
   556  002E  3450               	retlw	80	;'P'
   557  002F  3400               	retlw	0
   558                           
   559                           ; #config settings
   560  0000                     
   561                           	psect	cinit
   562  07F3                     start_initialization:	
   563  07F3                     __initialization:	
   564                           
   565                           ; Clear objects allocated to BANK0
   566  07F3  1383               	bcf	3,7	;select IRP bank0
   567  07F4  3020               	movlw	low __pbssBANK0
   568  07F5  0084               	movwf	4
   569  07F6  3041               	movlw	low (__pbssBANK0+33)
   570  07F7  120A  118A  2158  120A  118A  	fcall	clear_ram0
   571  07FC                     end_of_initialization:	
   572                           ;End of C runtime variable initialization code
   573                           
   574  07FC                     __end_of__initialization:	
   575  07FC  0183               	clrf	3
   576  07FD  120A  118A  2DBE   	ljmp	_main	;jump to C main() function
   577                           
   578                           	psect	bssBANK0
   579  0020                     __pbssBANK0:	
   580  0020                     _sen_dec:	
   581  0020                     	ds	4
   582  0024                     _sensor:	
   583  0024                     	ds	4
   584  0028                     _pot_dec:	
   585  0028                     	ds	4
   586  002C                     _pot_LCD:	
   587  002C                     	ds	4
   588  0030                     _temp1:	
   589  0030                     	ds	2
   590  0032                     _luz1:	
   591  0032                     	ds	2
   592  0034                     _var:	
   593  0034                     	ds	2
   594  0036                     _hum:	
   595  0036                     	ds	2
   596  0038                     _luz:	
   597  0038                     	ds	2
   598  003A                     _prox:	
   599  003A                     	ds	2
   600  003C                     _temp:	
   601  003C                     	ds	2
   602  003E                     _caudal:	
   603  003E                     	ds	2
   604  0040                     _cursor:	
   605  0040                     	ds	1
   606                           
   607                           	psect	clrtext
   608  0158                     clear_ram0:	
   609                           ;	Called with FSR containing the base address, and
   610                           ;	W with the last address+1
   611                           
   612  0158  0064               	clrwdt	;clear the watchdog before getting into this loop
   613  0159                     clrloop0:	
   614  0159  0180               	clrf	0	;clear RAM location pointed to by FSR
   615  015A  0A84               	incf	4,f	;increment pointer
   616  015B  0604               	xorwf	4,w	;XOR with final address
   617  015C  1903               	btfsc	3,2	;have we reached the end yet?
   618  015D  3400               	retlw	0	;all done for this memory range, return
   619  015E  0604               	xorwf	4,w	;XOR again to restore value
   620  015F  2959               	goto	clrloop0	;do the next byte
   621                           
   622                           	psect	cstackCOMMON
   623  0070                     __pcstackCOMMON:	
   624  0070                     ?_setup:	
   625  0070                     ?_I2C_Master_Start:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ??_I2C_Master_Start:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_I2C_Master_Write:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_I2C_Master_Stop:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ??_I2C_Master_Stop:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_writeIntLCD:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_initLCD:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_clcLCD:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_cmdLCD:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ??_cmdLCD:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_writeCharLCD:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ??_writeCharLCD:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_main:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_I2C_Master_Wait:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ??_I2C_Master_Wait:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_I2C_Master_Read:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?___wmul:	
   674                           ; 2 bytes @ 0x0
   675                           
   676  0070                     ?___lwdiv:	
   677                           ; 2 bytes @ 0x0
   678                           
   679  0070                     ?___lldiv:	
   680                           ; 2 bytes @ 0x0
   681                           
   682  0070                     I2C_Master_Write@d:	
   683                           ; 4 bytes @ 0x0
   684                           
   685  0070                     I2C_Master_Read@a:	
   686                           ; 2 bytes @ 0x0
   687                           
   688  0070                     ___wmul@multiplier:	
   689                           ; 2 bytes @ 0x0
   690                           
   691  0070                     ___lwdiv@divisor:	
   692                           ; 2 bytes @ 0x0
   693                           
   694  0070                     ___lldiv@divisor:	
   695                           ; 2 bytes @ 0x0
   696                           
   697                           
   698                           ; 4 bytes @ 0x0
   699  0070                     	ds	1
   700  0071                     writeCharLCD@character:	
   701                           
   702                           ; 1 bytes @ 0x1
   703  0071                     	ds	1
   704  0072                     ??_I2C_Master_Write:	
   705  0072                     ??_I2C_Master_Read:	
   706                           ; 1 bytes @ 0x2
   707                           
   708  0072                     ?_writeStrLCD:	
   709                           ; 1 bytes @ 0x2
   710                           
   711  0072                     cmdLCD@cmd:	
   712                           ; 1 bytes @ 0x2
   713                           
   714  0072                     writeStrLCD@string:	
   715                           ; 1 bytes @ 0x2
   716                           
   717  0072                     ___wmul@multiplicand:	
   718                           ; 2 bytes @ 0x2
   719                           
   720  0072                     ___lwdiv@dividend:	
   721                           ; 2 bytes @ 0x2
   722                           
   723                           
   724                           ; 2 bytes @ 0x2
   725  0072                     	ds	1
   726  0073                     ?_setCursorLCD:	
   727  0073                     ??_initLCD:	
   728                           ; 1 bytes @ 0x3
   729                           
   730  0073                     ??_clcLCD:	
   731                           ; 1 bytes @ 0x3
   732                           
   733  0073                     setCursorLCD@x:	
   734                           ; 1 bytes @ 0x3
   735                           
   736                           
   737                           ; 1 bytes @ 0x3
   738  0073                     	ds	1
   739  0074                     ??_setCursorLCD:	
   740  0074                     ??_writeStrLCD:	
   741                           ; 1 bytes @ 0x4
   742                           
   743  0074                     ??___wmul:	
   744                           ; 1 bytes @ 0x4
   745                           
   746  0074                     ??___lwdiv:	
   747                           ; 1 bytes @ 0x4
   748                           
   749  0074                     I2C_Master_Read@temp:	
   750                           ; 1 bytes @ 0x4
   751                           
   752  0074                     ___wmul@product:	
   753                           ; 2 bytes @ 0x4
   754                           
   755  0074                     ___lldiv@dividend:	
   756                           ; 2 bytes @ 0x4
   757                           
   758                           
   759                           ; 4 bytes @ 0x4
   760  0074                     	ds	1
   761  0075                     setCursorLCD@y:	
   762  0075                     ___lwdiv@quotient:	
   763                           ; 1 bytes @ 0x5
   764                           
   765                           
   766                           ; 2 bytes @ 0x5
   767  0075                     	ds	1
   768  0076                     ?___awdiv:	
   769  0076                     ___awdiv@divisor:	
   770                           ; 2 bytes @ 0x6
   771                           
   772                           
   773                           ; 2 bytes @ 0x6
   774  0076                     	ds	1
   775  0077                     ___lwdiv@counter:	
   776  0077                     writeStrLCD@cont:	
   777                           ; 1 bytes @ 0x7
   778                           
   779                           
   780                           ; 2 bytes @ 0x7
   781  0077                     	ds	1
   782  0078                     ??___lldiv:	
   783  0078                     ?___lwmod:	
   784                           ; 1 bytes @ 0x8
   785                           
   786  0078                     ___awdiv@dividend:	
   787                           ; 2 bytes @ 0x8
   788                           
   789  0078                     ___lwmod@divisor:	
   790                           ; 2 bytes @ 0x8
   791                           
   792                           
   793                           ; 2 bytes @ 0x8
   794  0078                     	ds	1
   795  0079                     ___lldiv@quotient:	
   796                           
   797                           ; 4 bytes @ 0x9
   798  0079                     	ds	1
   799  007A                     ??___awdiv:	
   800  007A                     ___lwmod@dividend:	
   801                           ; 1 bytes @ 0xA
   802                           
   803                           
   804                           ; 2 bytes @ 0xA
   805  007A                     	ds	2
   806  007C                     ??___lwmod:	
   807                           
   808                           ; 1 bytes @ 0xC
   809  007C                     	ds	1
   810  007D                     ___lldiv@counter:	
   811  007D                     ___lwmod@counter:	
   812                           ; 1 bytes @ 0xD
   813                           
   814                           
   815                           ; 1 bytes @ 0xD
   816  007D                     	ds	1
   817                           
   818                           	psect	cstackBANK0
   819  0041                     __pcstackBANK0:	
   820  0041                     ?_I2C_Master_Init:	
   821  0041                     ?_sprintf:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0041                     sprintf@f:	
   825                           ; 2 bytes @ 0x0
   826                           
   827  0041                     ___awdiv@counter:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0041                     I2C_Master_Init@c:	
   831                           ; 1 bytes @ 0x0
   832                           
   833                           
   834                           ; 4 bytes @ 0x0
   835  0041                     	ds	1
   836  0042                     ___awdiv@sign:	
   837                           
   838                           ; 1 bytes @ 0x1
   839  0042                     	ds	1
   840  0043                     ___awdiv@quotient:	
   841                           
   842                           ; 2 bytes @ 0x2
   843  0043                     	ds	1
   844  0044                     ??_sprintf:	
   845                           
   846                           ; 1 bytes @ 0x3
   847  0044                     	ds	1
   848  0045                     ??_I2C_Master_Init:	
   849                           
   850                           ; 1 bytes @ 0x4
   851  0045                     	ds	2
   852  0047                     sprintf@ap:	
   853                           
   854                           ; 1 bytes @ 0x6
   855  0047                     	ds	1
   856  0048                     sprintf@flag:	
   857                           
   858                           ; 1 bytes @ 0x7
   859  0048                     	ds	1
   860  0049                     ??_setup:	
   861  0049                     sprintf@prec:	
   862                           ; 1 bytes @ 0x8
   863                           
   864                           
   865                           ; 1 bytes @ 0x8
   866  0049                     	ds	1
   867  004A                     sprintf@val:	
   868                           
   869                           ; 2 bytes @ 0x9
   870  004A                     	ds	2
   871  004C                     sprintf@sp:	
   872                           
   873                           ; 1 bytes @ 0xB
   874  004C                     	ds	1
   875  004D                     sprintf@c:	
   876                           
   877                           ; 1 bytes @ 0xC
   878  004D                     	ds	1
   879  004E                     ??_writeIntLCD:	
   880                           
   881                           ; 1 bytes @ 0xD
   882  004E                     	ds	3
   883  0051                     writeIntLCD@buffer:	
   884                           
   885                           ; 4 bytes @ 0x10
   886  0051                     	ds	4
   887  0055                     writeIntLCD@numero:	
   888                           
   889                           ; 1 bytes @ 0x14
   890  0055                     	ds	1
   891  0056                     ??_main:	
   892                           
   893                           ; 1 bytes @ 0x15
   894  0056                     	ds	2
   895                           
   896                           	psect	maintext
   897  05BE                     __pmaintext:	
   898 ;;
   899 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   900 ;;
   901 ;; *************** function _main *****************
   902 ;; Defined at:
   903 ;;		line 54 in file "main_mast.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;		None
   906 ;; Auto vars:     Size  Location     Type
   907 ;;		None
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : B00/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   917 ;;      Params:         0       0       0       0       0
   918 ;;      Locals:         0       0       0       0       0
   919 ;;      Temps:          0       2       0       0       0
   920 ;;      Totals:         0       2       0       0       0
   921 ;;Total ram usage:        2 bytes
   922 ;; Hardware stack levels required when called:    3
   923 ;; This function calls:
   924 ;;		_I2C_Master_Read
   925 ;;		_I2C_Master_Start
   926 ;;		_I2C_Master_Stop
   927 ;;		_I2C_Master_Write
   928 ;;		___awdiv
   929 ;;		___wmul
   930 ;;		_setCursorLCD
   931 ;;		_setup
   932 ;;		_writeIntLCD
   933 ;; This function is called by:
   934 ;;		Startup code after reset
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           
   939                           ;psect for function _main
   940  05BE                     _main:	
   941  05BE                     l1808:	
   942                           ;incstack = 0
   943                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   944                           
   945                           
   946                           ;main_mast.c: 55:     setup();
   947  05BE  120A  118A  243A  120A  118A  	fcall	_setup
   948  05C3                     l1810:	
   949                           
   950                           ;main_mast.c: 56:     temp=2;
   951  05C3  3002               	movlw	2
   952  05C4  1283               	bcf	3,5	;RP0=0, select bank0
   953  05C5  1303               	bcf	3,6	;RP1=0, select bank0
   954  05C6  00BC               	movwf	_temp
   955  05C7  3000               	movlw	0
   956  05C8  00BD               	movwf	_temp+1
   957  05C9                     l1812:	
   958                           
   959                           ;main_mast.c: 57:     caudal=3;
   960  05C9  3003               	movlw	3
   961  05CA  00BE               	movwf	_caudal
   962  05CB  3000               	movlw	0
   963  05CC  00BF               	movwf	_caudal+1
   964  05CD                     l1814:	
   965                           
   966                           ;main_mast.c: 58:     luz = 4;
   967  05CD  3004               	movlw	4
   968  05CE  00B8               	movwf	_luz
   969  05CF  3000               	movlw	0
   970  05D0  00B9               	movwf	_luz+1
   971  05D1                     l1816:	
   972                           
   973                           ;main_mast.c: 59:     hum=5;
   974  05D1  3005               	movlw	5
   975  05D2  00B6               	movwf	_hum
   976  05D3  3000               	movlw	0
   977  05D4  00B7               	movwf	_hum+1
   978  05D5                     l1818:	
   979                           
   980                           ;main_mast.c: 62:         I2C_Master_Start();
   981  05D5  120A  118A  2160  120A  118A  	fcall	_I2C_Master_Start
   982  05DA                     l1820:	
   983                           
   984                           ;main_mast.c: 63:         I2C_Master_Write(0x81);
   985  05DA  3081               	movlw	129
   986  05DB  00F0               	movwf	I2C_Master_Write@d
   987  05DC  3000               	movlw	0
   988  05DD  00F1               	movwf	I2C_Master_Write@d+1
   989  05DE  120A  118A  2172  120A  118A  	fcall	_I2C_Master_Write
   990  05E3                     l1822:	
   991                           
   992                           ;main_mast.c: 64:         prox = I2C_Master_Read(0);
   993  05E3  3000               	movlw	0
   994  05E4  00F0               	movwf	I2C_Master_Read@a
   995  05E5  00F1               	movwf	I2C_Master_Read@a+1
   996  05E6  120A  118A  220B  120A  118A  	fcall	_I2C_Master_Read
   997  05EB  0871               	movf	?_I2C_Master_Read+1,w
   998  05EC  1283               	bcf	3,5	;RP0=0, select bank0
   999  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  1000  05EE  00BB               	movwf	_prox+1
  1001  05EF  0870               	movf	?_I2C_Master_Read,w
  1002  05F0  00BA               	movwf	_prox
  1003  05F1                     l1824:	
  1004                           
  1005                           ;main_mast.c: 65:         I2C_Master_Stop();
  1006  05F1  120A  118A  2169  120A  118A  	fcall	_I2C_Master_Stop
  1007  05F6                     l1826:	
  1008                           
  1009                           ;main_mast.c: 66:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1010  05F6  300D               	movlw	13
  1011  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1012  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1013  05F9  00D7               	movwf	??_main+1
  1014  05FA  30FB               	movlw	251
  1015  05FB  00D6               	movwf	??_main
  1016  05FC                     u1267:	
  1017  05FC  0BD6               	decfsz	??_main,f
  1018  05FD  2DFC               	goto	u1267
  1019  05FE  0BD7               	decfsz	??_main+1,f
  1020  05FF  2DFC               	goto	u1267
  1021  0600                     l1828:	
  1022                           
  1023                           ;main_mast.c: 68:         I2C_Master_Start();
  1024  0600  120A  118A  2160  120A  118A  	fcall	_I2C_Master_Start
  1025  0605                     l1830:	
  1026                           
  1027                           ;main_mast.c: 69:         I2C_Master_Write(0x71);
  1028  0605  3071               	movlw	113
  1029  0606  00F0               	movwf	I2C_Master_Write@d
  1030  0607  3000               	movlw	0
  1031  0608  00F1               	movwf	I2C_Master_Write@d+1
  1032  0609  120A  118A  2172  120A  118A  	fcall	_I2C_Master_Write
  1033  060E                     l1832:	
  1034                           
  1035                           ;main_mast.c: 70:         temp = I2C_Master_Read(0);
  1036  060E  3000               	movlw	0
  1037  060F  00F0               	movwf	I2C_Master_Read@a
  1038  0610  00F1               	movwf	I2C_Master_Read@a+1
  1039  0611  120A  118A  220B  120A  118A  	fcall	_I2C_Master_Read
  1040  0616  0871               	movf	?_I2C_Master_Read+1,w
  1041  0617  1283               	bcf	3,5	;RP0=0, select bank0
  1042  0618  1303               	bcf	3,6	;RP1=0, select bank0
  1043  0619  00BD               	movwf	_temp+1
  1044  061A  0870               	movf	?_I2C_Master_Read,w
  1045  061B  00BC               	movwf	_temp
  1046  061C                     l1834:	
  1047                           
  1048                           ;main_mast.c: 71:         I2C_Master_Stop();
  1049  061C  120A  118A  2169  120A  118A  	fcall	_I2C_Master_Stop
  1050  0621                     l1836:	
  1051                           
  1052                           ;main_mast.c: 72:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1053  0621  300D               	movlw	13
  1054  0622  1283               	bcf	3,5	;RP0=0, select bank0
  1055  0623  1303               	bcf	3,6	;RP1=0, select bank0
  1056  0624  00D7               	movwf	??_main+1
  1057  0625  30FB               	movlw	251
  1058  0626  00D6               	movwf	??_main
  1059  0627                     u1277:	
  1060  0627  0BD6               	decfsz	??_main,f
  1061  0628  2E27               	goto	u1277
  1062  0629  0BD7               	decfsz	??_main+1,f
  1063  062A  2E27               	goto	u1277
  1064  062B                     l1838:	
  1065                           
  1066                           ;main_mast.c: 74:         I2C_Master_Start();
  1067  062B  120A  118A  2160  120A  118A  	fcall	_I2C_Master_Start
  1068  0630                     l1840:	
  1069                           
  1070                           ;main_mast.c: 75:         I2C_Master_Write(0x61);
  1071  0630  3061               	movlw	97
  1072  0631  00F0               	movwf	I2C_Master_Write@d
  1073  0632  3000               	movlw	0
  1074  0633  00F1               	movwf	I2C_Master_Write@d+1
  1075  0634  120A  118A  2172  120A  118A  	fcall	_I2C_Master_Write
  1076  0639                     l1842:	
  1077                           
  1078                           ;main_mast.c: 76:         caudal = I2C_Master_Read(0);
  1079  0639  3000               	movlw	0
  1080  063A  00F0               	movwf	I2C_Master_Read@a
  1081  063B  00F1               	movwf	I2C_Master_Read@a+1
  1082  063C  120A  118A  220B  120A  118A  	fcall	_I2C_Master_Read
  1083  0641  0871               	movf	?_I2C_Master_Read+1,w
  1084  0642  1283               	bcf	3,5	;RP0=0, select bank0
  1085  0643  1303               	bcf	3,6	;RP1=0, select bank0
  1086  0644  00BF               	movwf	_caudal+1
  1087  0645  0870               	movf	?_I2C_Master_Read,w
  1088  0646  00BE               	movwf	_caudal
  1089  0647                     l1844:	
  1090                           
  1091                           ;main_mast.c: 77:         I2C_Master_Stop();
  1092  0647  120A  118A  2169  120A  118A  	fcall	_I2C_Master_Stop
  1093  064C                     l1846:	
  1094                           
  1095                           ;main_mast.c: 78:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1096  064C  300D               	movlw	13
  1097  064D  1283               	bcf	3,5	;RP0=0, select bank0
  1098  064E  1303               	bcf	3,6	;RP1=0, select bank0
  1099  064F  00D7               	movwf	??_main+1
  1100  0650  30FB               	movlw	251
  1101  0651  00D6               	movwf	??_main
  1102  0652                     u1287:	
  1103  0652  0BD6               	decfsz	??_main,f
  1104  0653  2E52               	goto	u1287
  1105  0654  0BD7               	decfsz	??_main+1,f
  1106  0655  2E52               	goto	u1287
  1107  0656                     l1848:	
  1108                           
  1109                           ;main_mast.c: 80:         I2C_Master_Start();
  1110  0656  120A  118A  2160  120A  118A  	fcall	_I2C_Master_Start
  1111  065B                     l1850:	
  1112                           
  1113                           ;main_mast.c: 81:         I2C_Master_Write(0x51);
  1114  065B  3051               	movlw	81
  1115  065C  00F0               	movwf	I2C_Master_Write@d
  1116  065D  3000               	movlw	0
  1117  065E  00F1               	movwf	I2C_Master_Write@d+1
  1118  065F  120A  118A  2172  120A  118A  	fcall	_I2C_Master_Write
  1119  0664                     l1852:	
  1120                           
  1121                           ;main_mast.c: 82:         luz = I2C_Master_Read(0);
  1122  0664  3000               	movlw	0
  1123  0665  00F0               	movwf	I2C_Master_Read@a
  1124  0666  00F1               	movwf	I2C_Master_Read@a+1
  1125  0667  120A  118A  220B  120A  118A  	fcall	_I2C_Master_Read
  1126  066C  0871               	movf	?_I2C_Master_Read+1,w
  1127  066D  1283               	bcf	3,5	;RP0=0, select bank0
  1128  066E  1303               	bcf	3,6	;RP1=0, select bank0
  1129  066F  00B9               	movwf	_luz+1
  1130  0670  0870               	movf	?_I2C_Master_Read,w
  1131  0671  00B8               	movwf	_luz
  1132  0672                     l1854:	
  1133                           
  1134                           ;main_mast.c: 83:         I2C_Master_Stop();
  1135  0672  120A  118A  2169  120A  118A  	fcall	_I2C_Master_Stop
  1136  0677                     l1856:	
  1137                           
  1138                           ;main_mast.c: 84:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1139  0677  300D               	movlw	13
  1140  0678  1283               	bcf	3,5	;RP0=0, select bank0
  1141  0679  1303               	bcf	3,6	;RP1=0, select bank0
  1142  067A  00D7               	movwf	??_main+1
  1143  067B  30FB               	movlw	251
  1144  067C  00D6               	movwf	??_main
  1145  067D                     u1297:	
  1146  067D  0BD6               	decfsz	??_main,f
  1147  067E  2E7D               	goto	u1297
  1148  067F  0BD7               	decfsz	??_main+1,f
  1149  0680  2E7D               	goto	u1297
  1150  0681                     l1858:	
  1151                           
  1152                           ;main_mast.c: 86:         I2C_Master_Start();
  1153  0681  120A  118A  2160  120A  118A  	fcall	_I2C_Master_Start
  1154  0686                     l1860:	
  1155                           
  1156                           ;main_mast.c: 87:         I2C_Master_Write(0x41);
  1157  0686  3041               	movlw	65
  1158  0687  00F0               	movwf	I2C_Master_Write@d
  1159  0688  3000               	movlw	0
  1160  0689  00F1               	movwf	I2C_Master_Write@d+1
  1161  068A  120A  118A  2172  120A  118A  	fcall	_I2C_Master_Write
  1162  068F                     l1862:	
  1163                           
  1164                           ;main_mast.c: 88:         hum = I2C_Master_Read(0);
  1165  068F  3000               	movlw	0
  1166  0690  00F0               	movwf	I2C_Master_Read@a
  1167  0691  00F1               	movwf	I2C_Master_Read@a+1
  1168  0692  120A  118A  220B  120A  118A  	fcall	_I2C_Master_Read
  1169  0697  0871               	movf	?_I2C_Master_Read+1,w
  1170  0698  1283               	bcf	3,5	;RP0=0, select bank0
  1171  0699  1303               	bcf	3,6	;RP1=0, select bank0
  1172  069A  00B7               	movwf	_hum+1
  1173  069B  0870               	movf	?_I2C_Master_Read,w
  1174  069C  00B6               	movwf	_hum
  1175  069D                     l1864:	
  1176                           
  1177                           ;main_mast.c: 89:         I2C_Master_Stop();
  1178  069D  120A  118A  2169  120A  118A  	fcall	_I2C_Master_Stop
  1179  06A2                     l1866:	
  1180                           
  1181                           ;main_mast.c: 90:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1182  06A2  300D               	movlw	13
  1183  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  1184  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  1185  06A5  00D7               	movwf	??_main+1
  1186  06A6  30FB               	movlw	251
  1187  06A7  00D6               	movwf	??_main
  1188  06A8                     u1307:	
  1189  06A8  0BD6               	decfsz	??_main,f
  1190  06A9  2EA8               	goto	u1307
  1191  06AA  0BD7               	decfsz	??_main+1,f
  1192  06AB  2EA8               	goto	u1307
  1193  06AC                     l1868:	
  1194                           
  1195                           ;main_mast.c: 92:         temp1 = temp*35/200;
  1196  06AC  30C8               	movlw	200
  1197  06AD  00F6               	movwf	___awdiv@divisor
  1198  06AE  3000               	movlw	0
  1199  06AF  00F7               	movwf	___awdiv@divisor+1
  1200  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  1201  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  1202  06B2  083D               	movf	_temp+1,w
  1203  06B3  00F1               	movwf	___wmul@multiplier+1
  1204  06B4  083C               	movf	_temp,w
  1205  06B5  00F0               	movwf	___wmul@multiplier
  1206  06B6  3023               	movlw	35
  1207  06B7  00F2               	movwf	___wmul@multiplicand
  1208  06B8  3000               	movlw	0
  1209  06B9  00F3               	movwf	___wmul@multiplicand+1
  1210  06BA  120A  118A  21E6  120A  118A  	fcall	___wmul
  1211  06BF  0871               	movf	?___wmul+1,w
  1212  06C0  00F9               	movwf	___awdiv@dividend+1
  1213  06C1  0870               	movf	?___wmul,w
  1214  06C2  00F8               	movwf	___awdiv@dividend
  1215  06C3  120A  118A  23D1  120A  118A  	fcall	___awdiv
  1216  06C8  0877               	movf	?___awdiv+1,w
  1217  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  1218  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  1219  06CB  00B1               	movwf	_temp1+1
  1220  06CC  0876               	movf	?___awdiv,w
  1221  06CD  00B0               	movwf	_temp1
  1222  06CE                     l1870:	
  1223                           
  1224                           ;main_mast.c: 93:         luz1 = luz*100/255;
  1225  06CE  30FF               	movlw	255
  1226  06CF  00F6               	movwf	___awdiv@divisor
  1227  06D0  3000               	movlw	0
  1228  06D1  00F7               	movwf	___awdiv@divisor+1
  1229  06D2  0839               	movf	_luz+1,w
  1230  06D3  00F1               	movwf	___wmul@multiplier+1
  1231  06D4  0838               	movf	_luz,w
  1232  06D5  00F0               	movwf	___wmul@multiplier
  1233  06D6  3064               	movlw	100
  1234  06D7  00F2               	movwf	___wmul@multiplicand
  1235  06D8  3000               	movlw	0
  1236  06D9  00F3               	movwf	___wmul@multiplicand+1
  1237  06DA  120A  118A  21E6  120A  118A  	fcall	___wmul
  1238  06DF  0871               	movf	?___wmul+1,w
  1239  06E0  00F9               	movwf	___awdiv@dividend+1
  1240  06E1  0870               	movf	?___wmul,w
  1241  06E2  00F8               	movwf	___awdiv@dividend
  1242  06E3  120A  118A  23D1  120A  118A  	fcall	___awdiv
  1243  06E8  0877               	movf	?___awdiv+1,w
  1244  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  1245  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  1246  06EB  00B3               	movwf	_luz1+1
  1247  06EC  0876               	movf	?___awdiv,w
  1248  06ED  00B2               	movwf	_luz1
  1249  06EE                     l1872:	
  1250                           
  1251                           ;main_mast.c: 96:         setCursorLCD(2, 1);
  1252  06EE  01F3               	clrf	setCursorLCD@x
  1253  06EF  0AF3               	incf	setCursorLCD@x,f
  1254  06F0  3002               	movlw	2
  1255  06F1  120A  118A  21AC  120A  118A  	fcall	_setCursorLCD
  1256  06F6                     l1874:	
  1257                           
  1258                           ;main_mast.c: 97:         writeIntLCD(prox);
  1259  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1260  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1261  06F8  083A               	movf	_prox,w
  1262  06F9  120A  118A  21C8  120A  118A  	fcall	_writeIntLCD
  1263  06FE                     l1876:	
  1264                           
  1265                           ;main_mast.c: 98:         setCursorLCD(2, 3);
  1266  06FE  3003               	movlw	3
  1267  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  1268  0700  1303               	bcf	3,6	;RP1=0, select bank0
  1269  0701  00D6               	movwf	??_main
  1270  0702  0856               	movf	??_main,w
  1271  0703  00F3               	movwf	setCursorLCD@x
  1272  0704  3002               	movlw	2
  1273  0705  120A  118A  21AC  120A  118A  	fcall	_setCursorLCD
  1274  070A                     l1878:	
  1275                           
  1276                           ;main_mast.c: 99:         writeIntLCD(temp1);
  1277  070A  1283               	bcf	3,5	;RP0=0, select bank0
  1278  070B  1303               	bcf	3,6	;RP1=0, select bank0
  1279  070C  0830               	movf	_temp1,w
  1280  070D  120A  118A  21C8  120A  118A  	fcall	_writeIntLCD
  1281  0712                     l1880:	
  1282                           
  1283                           ;main_mast.c: 100:         setCursorLCD(2, 7);
  1284  0712  3007               	movlw	7
  1285  0713  1283               	bcf	3,5	;RP0=0, select bank0
  1286  0714  1303               	bcf	3,6	;RP1=0, select bank0
  1287  0715  00D6               	movwf	??_main
  1288  0716  0856               	movf	??_main,w
  1289  0717  00F3               	movwf	setCursorLCD@x
  1290  0718  3002               	movlw	2
  1291  0719  120A  118A  21AC  120A  118A  	fcall	_setCursorLCD
  1292  071E                     l1882:	
  1293                           
  1294                           ;main_mast.c: 101:         writeIntLCD(hum);
  1295  071E  1283               	bcf	3,5	;RP0=0, select bank0
  1296  071F  1303               	bcf	3,6	;RP1=0, select bank0
  1297  0720  0836               	movf	_hum,w
  1298  0721  120A  118A  21C8  120A  118A  	fcall	_writeIntLCD
  1299  0726                     l1884:	
  1300                           
  1301                           ;main_mast.c: 102:         setCursorLCD(2, 10);
  1302  0726  300A               	movlw	10
  1303  0727  1283               	bcf	3,5	;RP0=0, select bank0
  1304  0728  1303               	bcf	3,6	;RP1=0, select bank0
  1305  0729  00D6               	movwf	??_main
  1306  072A  0856               	movf	??_main,w
  1307  072B  00F3               	movwf	setCursorLCD@x
  1308  072C  3002               	movlw	2
  1309  072D  120A  118A  21AC  120A  118A  	fcall	_setCursorLCD
  1310  0732                     l1886:	
  1311                           
  1312                           ;main_mast.c: 103:         writeIntLCD(luz1);
  1313  0732  1283               	bcf	3,5	;RP0=0, select bank0
  1314  0733  1303               	bcf	3,6	;RP1=0, select bank0
  1315  0734  0832               	movf	_luz1,w
  1316  0735  120A  118A  21C8  120A  118A  	fcall	_writeIntLCD
  1317  073A                     l1888:	
  1318                           
  1319                           ;main_mast.c: 104:         setCursorLCD(2, 14);
  1320  073A  300E               	movlw	14
  1321  073B  1283               	bcf	3,5	;RP0=0, select bank0
  1322  073C  1303               	bcf	3,6	;RP1=0, select bank0
  1323  073D  00D6               	movwf	??_main
  1324  073E  0856               	movf	??_main,w
  1325  073F  00F3               	movwf	setCursorLCD@x
  1326  0740  3002               	movlw	2
  1327  0741  120A  118A  21AC  120A  118A  	fcall	_setCursorLCD
  1328  0746                     l1890:	
  1329                           
  1330                           ;main_mast.c: 105:         writeIntLCD(caudal);
  1331  0746  1283               	bcf	3,5	;RP0=0, select bank0
  1332  0747  1303               	bcf	3,6	;RP1=0, select bank0
  1333  0748  083E               	movf	_caudal,w
  1334  0749  120A  118A  21C8  120A  118A  	fcall	_writeIntLCD
  1335  074E                     l1892:	
  1336                           
  1337                           ;main_mast.c: 108:         if (RCIF) {
  1338  074E  1283               	bcf	3,5	;RP0=0, select bank0
  1339  074F  1303               	bcf	3,6	;RP1=0, select bank0
  1340  0750  1E8C               	btfss	12,5	;volatile
  1341  0751  2F53               	goto	u1181
  1342  0752  2F54               	goto	u1180
  1343  0753                     u1181:	
  1344  0753  2FDA               	goto	l1910
  1345  0754                     u1180:	
  1346  0754                     l1894:	
  1347                           
  1348                           ;main_mast.c: 109:             var = RCREG;
  1349  0754  081A               	movf	26,w	;volatile
  1350  0755  00D6               	movwf	??_main
  1351  0756  01D7               	clrf	??_main+1
  1352  0757  0856               	movf	??_main,w
  1353  0758  00B4               	movwf	_var
  1354  0759  0857               	movf	??_main+1,w
  1355  075A  00B5               	movwf	_var+1
  1356  075B  2FDA               	goto	l1910
  1357  075C                     l87:	
  1358                           ;main_mast.c: 114:                 }
  1359                           
  1360                           
  1361                           ;main_mast.c: 113:                 while (TXSTAbits.TRMT == 0) {
  1362  075C  1683               	bsf	3,5	;RP0=1, select bank1
  1363  075D  1303               	bcf	3,6	;RP1=0, select bank1
  1364  075E  1C98               	btfss	24,1	;volatile
  1365  075F  2F61               	goto	u1191
  1366  0760  2F62               	goto	u1190
  1367  0761                     u1191:	
  1368  0761  2F5C               	goto	l87
  1369  0762                     u1190:	
  1370  0762                     l1896:	
  1371                           
  1372                           ;main_mast.c: 115:                 TXREG = prox;
  1373  0762  1283               	bcf	3,5	;RP0=0, select bank0
  1374  0763  1303               	bcf	3,6	;RP1=0, select bank0
  1375  0764  083A               	movf	_prox,w
  1376  0765  0099               	movwf	25	;volatile
  1377                           
  1378                           ;main_mast.c: 116:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  1379  0766  300D               	movlw	13
  1380  0767  1283               	bcf	3,5	;RP0=0, select bank0
  1381  0768  1303               	bcf	3,6	;RP1=0, select bank0
  1382  0769  00D7               	movwf	??_main+1
  1383  076A  30FB               	movlw	251
  1384  076B  00D6               	movwf	??_main
  1385  076C                     u1317:	
  1386  076C  0BD6               	decfsz	??_main,f
  1387  076D  2F6C               	goto	u1317
  1388  076E  0BD7               	decfsz	??_main+1,f
  1389  076F  2F6C               	goto	u1317
  1390                           
  1391                           ;main_mast.c: 117:                 break;
  1392  0770  2DD5               	goto	l1818
  1393  0771                     l92:	
  1394                           ;main_mast.c: 120:                 }
  1395                           
  1396                           
  1397                           ;main_mast.c: 119:                 while (TXSTAbits.TRMT == 0) {
  1398  0771  1683               	bsf	3,5	;RP0=1, select bank1
  1399  0772  1303               	bcf	3,6	;RP1=0, select bank1
  1400  0773  1C98               	btfss	24,1	;volatile
  1401  0774  2F76               	goto	u1201
  1402  0775  2F77               	goto	u1200
  1403  0776                     u1201:	
  1404  0776  2F71               	goto	l92
  1405  0777                     u1200:	
  1406  0777                     l1898:	
  1407                           
  1408                           ;main_mast.c: 121:                 TXREG = temp1;
  1409  0777  1283               	bcf	3,5	;RP0=0, select bank0
  1410  0778  1303               	bcf	3,6	;RP1=0, select bank0
  1411  0779  0830               	movf	_temp1,w
  1412  077A  0099               	movwf	25	;volatile
  1413                           
  1414                           ;main_mast.c: 122:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  1415  077B  300D               	movlw	13
  1416  077C  1283               	bcf	3,5	;RP0=0, select bank0
  1417  077D  1303               	bcf	3,6	;RP1=0, select bank0
  1418  077E  00D7               	movwf	??_main+1
  1419  077F  30FB               	movlw	251
  1420  0780  00D6               	movwf	??_main
  1421  0781                     u1327:	
  1422  0781  0BD6               	decfsz	??_main,f
  1423  0782  2F81               	goto	u1327
  1424  0783  0BD7               	decfsz	??_main+1,f
  1425  0784  2F81               	goto	u1327
  1426                           
  1427                           ;main_mast.c: 123:                 break;
  1428  0785  2DD5               	goto	l1818
  1429  0786                     l96:	
  1430                           ;main_mast.c: 126:                 }
  1431                           
  1432                           
  1433                           ;main_mast.c: 125:                 while (TXSTAbits.TRMT == 0) {
  1434  0786  1683               	bsf	3,5	;RP0=1, select bank1
  1435  0787  1303               	bcf	3,6	;RP1=0, select bank1
  1436  0788  1C98               	btfss	24,1	;volatile
  1437  0789  2F8B               	goto	u1211
  1438  078A  2F8C               	goto	u1210
  1439  078B                     u1211:	
  1440  078B  2F86               	goto	l96
  1441  078C                     u1210:	
  1442  078C                     l1900:	
  1443                           
  1444                           ;main_mast.c: 127:                 TXREG = caudal;
  1445  078C  1283               	bcf	3,5	;RP0=0, select bank0
  1446  078D  1303               	bcf	3,6	;RP1=0, select bank0
  1447  078E  083E               	movf	_caudal,w
  1448  078F  0099               	movwf	25	;volatile
  1449                           
  1450                           ;main_mast.c: 128:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  1451  0790  300D               	movlw	13
  1452  0791  1283               	bcf	3,5	;RP0=0, select bank0
  1453  0792  1303               	bcf	3,6	;RP1=0, select bank0
  1454  0793  00D7               	movwf	??_main+1
  1455  0794  30FB               	movlw	251
  1456  0795  00D6               	movwf	??_main
  1457  0796                     u1337:	
  1458  0796  0BD6               	decfsz	??_main,f
  1459  0797  2F96               	goto	u1337
  1460  0798  0BD7               	decfsz	??_main+1,f
  1461  0799  2F96               	goto	u1337
  1462                           
  1463                           ;main_mast.c: 129:                 break;
  1464  079A  2DD5               	goto	l1818
  1465  079B                     l100:	
  1466                           ;main_mast.c: 132:                 }
  1467                           
  1468                           
  1469                           ;main_mast.c: 131:                 while (TXSTAbits.TRMT == 0) {
  1470  079B  1683               	bsf	3,5	;RP0=1, select bank1
  1471  079C  1303               	bcf	3,6	;RP1=0, select bank1
  1472  079D  1C98               	btfss	24,1	;volatile
  1473  079E  2FA0               	goto	u1221
  1474  079F  2FA1               	goto	u1220
  1475  07A0                     u1221:	
  1476  07A0  2F9B               	goto	l100
  1477  07A1                     u1220:	
  1478  07A1                     l1902:	
  1479                           
  1480                           ;main_mast.c: 133:                 TXREG = luz1;
  1481  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  1482  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  1483  07A3  0832               	movf	_luz1,w
  1484  07A4  0099               	movwf	25	;volatile
  1485                           
  1486                           ;main_mast.c: 134:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  1487  07A5  300D               	movlw	13
  1488  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  1489  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  1490  07A8  00D7               	movwf	??_main+1
  1491  07A9  30FB               	movlw	251
  1492  07AA  00D6               	movwf	??_main
  1493  07AB                     u1347:	
  1494  07AB  0BD6               	decfsz	??_main,f
  1495  07AC  2FAB               	goto	u1347
  1496  07AD  0BD7               	decfsz	??_main+1,f
  1497  07AE  2FAB               	goto	u1347
  1498                           
  1499                           ;main_mast.c: 135:                 break;
  1500  07AF  2DD5               	goto	l1818
  1501  07B0                     l104:	
  1502                           ;main_mast.c: 138:                 }
  1503                           
  1504                           
  1505                           ;main_mast.c: 137:                 while (TXSTAbits.TRMT == 0) {
  1506  07B0  1683               	bsf	3,5	;RP0=1, select bank1
  1507  07B1  1303               	bcf	3,6	;RP1=0, select bank1
  1508  07B2  1C98               	btfss	24,1	;volatile
  1509  07B3  2FB5               	goto	u1231
  1510  07B4  2FB6               	goto	u1230
  1511  07B5                     u1231:	
  1512  07B5  2FB0               	goto	l104
  1513  07B6                     u1230:	
  1514  07B6                     l1904:	
  1515                           
  1516                           ;main_mast.c: 139:                 TXREG = hum;
  1517  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  1518  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  1519  07B8  0836               	movf	_hum,w
  1520  07B9  0099               	movwf	25	;volatile
  1521                           
  1522                           ;main_mast.c: 140:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  1523  07BA  300D               	movlw	13
  1524  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  1525  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  1526  07BD  00D7               	movwf	??_main+1
  1527  07BE  30FB               	movlw	251
  1528  07BF  00D6               	movwf	??_main
  1529  07C0                     u1357:	
  1530  07C0  0BD6               	decfsz	??_main,f
  1531  07C1  2FC0               	goto	u1357
  1532  07C2  0BD7               	decfsz	??_main+1,f
  1533  07C3  2FC0               	goto	u1357
  1534                           
  1535                           ;main_mast.c: 141:                 break;
  1536  07C4  2DD5               	goto	l1818
  1537  07C5                     l108:	
  1538                           ;main_mast.c: 144:                 }
  1539                           
  1540                           
  1541                           ;main_mast.c: 143:                 while (TXSTAbits.TRMT == 0) {
  1542  07C5  1683               	bsf	3,5	;RP0=1, select bank1
  1543  07C6  1303               	bcf	3,6	;RP1=0, select bank1
  1544  07C7  1C98               	btfss	24,1	;volatile
  1545  07C8  2FCA               	goto	u1241
  1546  07C9  2FCB               	goto	u1240
  1547  07CA                     u1241:	
  1548  07CA  2FC5               	goto	l108
  1549  07CB                     u1240:	
  1550  07CB                     l1906:	
  1551                           
  1552                           ;main_mast.c: 145:                 TXREG = 5;
  1553  07CB  3005               	movlw	5
  1554  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1555  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1556  07CE  0099               	movwf	25	;volatile
  1557                           
  1558                           ;main_mast.c: 146:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  1559  07CF  300D               	movlw	13
  1560  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  1561  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  1562  07D2  00D7               	movwf	??_main+1
  1563  07D3  30FB               	movlw	251
  1564  07D4  00D6               	movwf	??_main
  1565  07D5                     u1367:	
  1566  07D5  0BD6               	decfsz	??_main,f
  1567  07D6  2FD5               	goto	u1367
  1568  07D7  0BD7               	decfsz	??_main+1,f
  1569  07D8  2FD5               	goto	u1367
  1570                           
  1571                           ;main_mast.c: 147:                 break;
  1572  07D9  2DD5               	goto	l1818
  1573  07DA                     l1910:	
  1574                           
  1575                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1576                           ; Switch size 1, requested type "simple"
  1577                           ; Number of cases is 1, Range of values is 0 to 0
  1578                           ; switch strategies available:
  1579                           ; Name         Instructions Cycles
  1580                           ; simple_byte            4     3 (average)
  1581                           ; direct_byte           11     8 (fixed)
  1582                           ; jumptable            260     6 (fixed)
  1583                           ;	Chosen strategy is simple_byte
  1584  07DA  0835               	movf	_var+1,w
  1585  07DB  3A00               	xorlw	0	; case 0
  1586  07DC  1903               	skipnz
  1587  07DD  2FDF               	goto	l1980
  1588  07DE  2FC5               	goto	l108
  1589  07DF                     l1980:	
  1590                           
  1591                           ; Switch size 1, requested type "simple"
  1592                           ; Number of cases is 5, Range of values is 1 to 5
  1593                           ; switch strategies available:
  1594                           ; Name         Instructions Cycles
  1595                           ; simple_byte           16     9 (average)
  1596                           ; direct_byte           26    11 (fixed)
  1597                           ; jumptable            263     9 (fixed)
  1598                           ;	Chosen strategy is simple_byte
  1599  07DF  0834               	movf	_var,w
  1600  07E0  3A01               	xorlw	1	; case 1
  1601  07E1  1903               	skipnz
  1602  07E2  2F5C               	goto	l87
  1603  07E3  3A03               	xorlw	3	; case 2
  1604  07E4  1903               	skipnz
  1605  07E5  2F71               	goto	l92
  1606  07E6  3A01               	xorlw	1	; case 3
  1607  07E7  1903               	skipnz
  1608  07E8  2F86               	goto	l96
  1609  07E9  3A07               	xorlw	7	; case 4
  1610  07EA  1903               	skipnz
  1611  07EB  2F9B               	goto	l100
  1612  07EC  3A01               	xorlw	1	; case 5
  1613  07ED  1903               	skipnz
  1614  07EE  2FB0               	goto	l104
  1615  07EF  2FC5               	goto	l108
  1616  07F0  120A  118A  2800   	ljmp	start
  1617  07F3                     __end_of_main:	
  1618                           
  1619                           	psect	text1
  1620  01C8                     __ptext1:	
  1621 ;; *************** function _writeIntLCD *****************
  1622 ;; Defined at:
  1623 ;;		line 66 in file "LCD.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  numero          1    wreg     unsigned char 
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;  numero          1   20[BANK0 ] unsigned char 
  1628 ;;  buffer          4   16[BANK0 ] unsigned char [4]
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1638 ;;      Params:         0       0       0       0       0
  1639 ;;      Locals:         0       5       0       0       0
  1640 ;;      Temps:          0       3       0       0       0
  1641 ;;      Totals:         0       8       0       0       0
  1642 ;;Total ram usage:        8 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    2
  1645 ;; This function calls:
  1646 ;;		_sprintf
  1647 ;;		_writeStrLCD
  1648 ;; This function is called by:
  1649 ;;		_main
  1650 ;;		_writeFloat
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           
  1655                           ;psect for function _writeIntLCD
  1656  01C8                     _writeIntLCD:	
  1657                           
  1658                           ;incstack = 0
  1659                           ; Regs used in _writeIntLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1660                           ;writeIntLCD@numero stored from wreg
  1661  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  1662  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  1663  01CA  00D5               	movwf	writeIntLCD@numero
  1664  01CB                     l1748:	
  1665                           
  1666                           ;LCD.c: 67:     char buffer [4];;LCD.c: 68:     sprintf (buffer, "%d", numero);
  1667  01CB  3013               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1668  01CC  00CE               	movwf	??_writeIntLCD
  1669  01CD  084E               	movf	??_writeIntLCD,w
  1670  01CE  00C1               	movwf	sprintf@f
  1671  01CF  0855               	movf	writeIntLCD@numero,w
  1672  01D0  00CF               	movwf	??_writeIntLCD+1
  1673  01D1  01D0               	clrf	??_writeIntLCD+2
  1674  01D2  084F               	movf	??_writeIntLCD+1,w
  1675  01D3  00C2               	movwf	?_sprintf+1
  1676  01D4  0850               	movf	??_writeIntLCD+2,w
  1677  01D5  00C3               	movwf	?_sprintf+2
  1678  01D6  3051               	movlw	(low (writeIntLCD@buffer| 0))& (0+255)
  1679  01D7  120A  118A  24D6  120A  118A  	fcall	_sprintf
  1680                           
  1681                           ;LCD.c: 69:     writeStrLCD(buffer);
  1682  01DC  3051               	movlw	(low (writeIntLCD@buffer| 0))& (0+255)
  1683  01DD  00F2               	movwf	writeStrLCD@string
  1684  01DE  3000               	movlw	0
  1685  01DF  00F3               	movwf	writeStrLCD@string+1
  1686  01E0  120A  118A  22E5  120A  118A  	fcall	_writeStrLCD
  1687  01E5                     l215:	
  1688  01E5  0008               	return
  1689  01E6                     __end_of_writeIntLCD:	
  1690                           
  1691                           	psect	text2
  1692  04D6                     __ptext2:	
  1693 ;; *************** function _sprintf *****************
  1694 ;; Defined at:
  1695 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  sp              1    wreg     PTR unsigned char 
  1698 ;;		 -> writeIntLCD@buffer(4), 
  1699 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1700 ;;		 -> STR_6(3), 
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1703 ;;		 -> writeIntLCD@buffer(4), 
  1704 ;;  tmpval          4    0        struct .
  1705 ;;  val             2    9[BANK0 ] unsigned int 
  1706 ;;  cp              2    0        PTR const unsigned char 
  1707 ;;  len             2    0        unsigned int 
  1708 ;;  c               1   12[BANK0 ] unsigned char 
  1709 ;;  prec            1    8[BANK0 ] char 
  1710 ;;  flag            1    7[BANK0 ] unsigned char 
  1711 ;;  ap              1    6[BANK0 ] PTR void [1]
  1712 ;;		 -> ?_sprintf(2), 
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  2    0[BANK0 ] int 
  1715 ;; Registers used:
  1716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1722 ;;      Params:         0       3       0       0       0
  1723 ;;      Locals:         0       7       0       0       0
  1724 ;;      Temps:          0       3       0       0       0
  1725 ;;      Totals:         0      13       0       0       0
  1726 ;;Total ram usage:       13 bytes
  1727 ;; Hardware stack levels used:    1
  1728 ;; Hardware stack levels required when called:    1
  1729 ;; This function calls:
  1730 ;;		___lwdiv
  1731 ;;		___lwmod
  1732 ;; This function is called by:
  1733 ;;		_writeIntLCD
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           
  1738                           ;psect for function _sprintf
  1739  04D6                     _sprintf:	
  1740                           
  1741                           ;incstack = 0
  1742                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1743                           ;sprintf@sp stored from wreg
  1744  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  1745  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  1746  04D8  00CC               	movwf	sprintf@sp
  1747  04D9                     l1614:	
  1748                           
  1749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .10\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
  1750  04D9  3042               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1751  04DA  00C4               	movwf	??_sprintf
  1752  04DB  0844               	movf	??_sprintf,w
  1753  04DC  00C7               	movwf	sprintf@ap
  1754                           
  1755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1756  04DD  2DA7               	goto	l1666
  1757  04DE                     l1616:	
  1758                           
  1759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  1760  04DE  3025               	movlw	37
  1761  04DF  064D               	xorwf	sprintf@c,w
  1762  04E0  1903               	btfsc	3,2
  1763  04E1  2CE3               	goto	u961
  1764  04E2  2CE4               	goto	u960
  1765  04E3                     u961:	
  1766  04E3  2CF0               	goto	l1622
  1767  04E4                     u960:	
  1768  04E4                     l1618:	
  1769                           
  1770                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  1771  04E4  084D               	movf	sprintf@c,w
  1772  04E5  00C4               	movwf	??_sprintf
  1773  04E6  084C               	movf	sprintf@sp,w
  1774  04E7  0084               	movwf	4
  1775  04E8  0844               	movf	??_sprintf,w
  1776  04E9  1383               	bcf	3,7	;select IRP bank0
  1777  04EA  0080               	movwf	0
  1778  04EB                     l1620:	
  1779  04EB  3001               	movlw	1
  1780  04EC  00C4               	movwf	??_sprintf
  1781  04ED  0844               	movf	??_sprintf,w
  1782  04EE  07CC               	addwf	sprintf@sp,f
  1783                           
  1784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  1785  04EF  2DA7               	goto	l1666
  1786  04F0                     l1622:	
  1787                           
  1788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  1789  04F0  01C8               	clrf	sprintf@flag
  1790  04F1                     l1626:	
  1791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 661:   swit
      +                          ch(c = *f++) {
  1792                           
  1793  04F1  3001               	movlw	1
  1794  04F2  07C1               	addwf	sprintf@f,f
  1795  04F3  30FF               	movlw	-1
  1796  04F4  0741               	addwf	sprintf@f,w
  1797  04F5  0084               	movwf	4
  1798  04F6  120A  118A  200D  120A  118A  	fcall	stringdir
  1799  04FB  00CD               	movwf	sprintf@c
  1800  04FC  00C4               	movwf	??_sprintf
  1801  04FD  01C5               	clrf	??_sprintf+1
  1802                           
  1803                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1804                           ; Switch size 1, requested type "simple"
  1805                           ; Number of cases is 1, Range of values is 0 to 0
  1806                           ; switch strategies available:
  1807                           ; Name         Instructions Cycles
  1808                           ; simple_byte            4     3 (average)
  1809                           ; direct_byte           11     8 (fixed)
  1810                           ; jumptable            260     6 (fixed)
  1811                           ;	Chosen strategy is simple_byte
  1812  04FE  0845               	movf	??_sprintf+1,w
  1813  04FF  3A00               	xorlw	0	; case 0
  1814  0500  1903               	skipnz
  1815  0501  2D03               	goto	l1982
  1816  0502  2DA7               	goto	l1666
  1817  0503                     l1982:	
  1818                           
  1819                           ; Switch size 1, requested type "simple"
  1820                           ; Number of cases is 3, Range of values is 0 to 105
  1821                           ; switch strategies available:
  1822                           ; Name         Instructions Cycles
  1823                           ; simple_byte           10     6 (average)
  1824                           ; jumptable            260     6 (fixed)
  1825                           ;	Chosen strategy is simple_byte
  1826  0503  0844               	movf	??_sprintf,w
  1827  0504  3A00               	xorlw	0	; case 0
  1828  0505  1903               	skipnz
  1829  0506  2DB9               	goto	l1668
  1830  0507  3A64               	xorlw	100	; case 100
  1831  0508  1903               	skipnz
  1832  0509  2D0E               	goto	l1628
  1833  050A  3A0D               	xorlw	13	; case 105
  1834  050B  1903               	skipnz
  1835  050C  2D0E               	goto	l1628
  1836  050D  2DA7               	goto	l1666
  1837  050E                     l1628:	
  1838                           
  1839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1840  050E  0847               	movf	sprintf@ap,w
  1841  050F  0084               	movwf	4
  1842  0510  1383               	bcf	3,7	;select IRP bank0
  1843  0511  0800               	movf	0,w
  1844  0512  00CA               	movwf	sprintf@val
  1845  0513  0A84               	incf	4,f
  1846  0514  0800               	movf	0,w
  1847  0515  00CB               	movwf	sprintf@val+1
  1848  0516                     l1630:	
  1849  0516  3002               	movlw	2
  1850  0517  00C4               	movwf	??_sprintf
  1851  0518  0844               	movf	??_sprintf,w
  1852  0519  07C7               	addwf	sprintf@ap,f
  1853  051A                     l1632:	
  1854                           
  1855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
  1856  051A  1FCB               	btfss	sprintf@val+1,7
  1857  051B  2D1D               	goto	u971
  1858  051C  2D1E               	goto	u970
  1859  051D                     u971:	
  1860  051D  2D27               	goto	l1638
  1861  051E                     u970:	
  1862  051E                     l1634:	
  1863                           
  1864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  1865  051E  3003               	movlw	3
  1866  051F  00C4               	movwf	??_sprintf
  1867  0520  0844               	movf	??_sprintf,w
  1868  0521  04C8               	iorwf	sprintf@flag,f
  1869  0522                     l1636:	
  1870                           
  1871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  1872  0522  09CA               	comf	sprintf@val,f
  1873  0523  09CB               	comf	sprintf@val+1,f
  1874  0524  0ACA               	incf	sprintf@val,f
  1875  0525  1903               	skipnz
  1876  0526  0ACB               	incf	sprintf@val+1,f
  1877  0527                     l1638:	
  1878                           
  1879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1880  0527  01CD               	clrf	sprintf@c
  1881  0528  0ACD               	incf	sprintf@c,f
  1882  0529                     l1644:	
  1883                           
  1884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  1885  0529  084D               	movf	sprintf@c,w
  1886  052A  00C4               	movwf	??_sprintf
  1887  052B  0744               	addwf	??_sprintf,w
  1888  052C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1889  052D  0084               	movwf	4
  1890  052E  120A  118A  200D  120A  118A  	fcall	stringdir
  1891  0533  00C5               	movwf	??_sprintf+1
  1892  0534  120A  118A  200D  120A  118A  	fcall	stringdir
  1893  0539  00C6               	movwf	??_sprintf+2
  1894  053A  0846               	movf	??_sprintf+2,w
  1895  053B  024B               	subwf	sprintf@val+1,w
  1896  053C  1D03               	skipz
  1897  053D  2D40               	goto	u985
  1898  053E  0845               	movf	??_sprintf+1,w
  1899  053F  024A               	subwf	sprintf@val,w
  1900  0540                     u985:	
  1901  0540  1803               	skipnc
  1902  0541  2D43               	goto	u981
  1903  0542  2D44               	goto	u980
  1904  0543                     u981:	
  1905  0543  2D45               	goto	l1648
  1906  0544                     u980:	
  1907  0544  2D4F               	goto	l1650
  1908  0545                     l1648:	
  1909  0545  3001               	movlw	1
  1910  0546  00C4               	movwf	??_sprintf
  1911  0547  0844               	movf	??_sprintf,w
  1912  0548  07CD               	addwf	sprintf@c,f
  1913  0549  3005               	movlw	5
  1914  054A  064D               	xorwf	sprintf@c,w
  1915  054B  1D03               	btfss	3,2
  1916  054C  2D4E               	goto	u991
  1917  054D  2D4F               	goto	u990
  1918  054E                     u991:	
  1919  054E  2D29               	goto	l1644
  1920  054F                     u990:	
  1921  054F                     l1650:	
  1922                           
  1923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  1924  054F  0848               	movf	sprintf@flag,w
  1925  0550  3903               	andlw	3
  1926  0551  1903               	btfsc	3,2
  1927  0552  2D54               	goto	u1001
  1928  0553  2D55               	goto	u1000
  1929  0554                     u1001:	
  1930  0554  2D60               	goto	l1656
  1931  0555                     u1000:	
  1932  0555                     l1652:	
  1933                           
  1934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  1935  0555  302D               	movlw	45
  1936  0556  00C4               	movwf	??_sprintf
  1937  0557  084C               	movf	sprintf@sp,w
  1938  0558  0084               	movwf	4
  1939  0559  0844               	movf	??_sprintf,w
  1940  055A  1383               	bcf	3,7	;select IRP bank0
  1941  055B  0080               	movwf	0
  1942  055C                     l1654:	
  1943  055C  3001               	movlw	1
  1944  055D  00C4               	movwf	??_sprintf
  1945  055E  0844               	movf	??_sprintf,w
  1946  055F  07CC               	addwf	sprintf@sp,f
  1947  0560                     l1656:	
  1948                           
  1949                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
  1950  0560  084D               	movf	sprintf@c,w
  1951  0561  00C4               	movwf	??_sprintf
  1952  0562  0844               	movf	??_sprintf,w
  1953  0563  00C9               	movwf	sprintf@prec
  1954                           
  1955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  1956  0564  2D9E               	goto	l1664
  1957  0565                     l1658:	
  1958                           
  1959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  1960  0565  300A               	movlw	10
  1961  0566  00F8               	movwf	___lwmod@divisor
  1962  0567  3000               	movlw	0
  1963  0568  00F9               	movwf	___lwmod@divisor+1
  1964  0569  0849               	movf	sprintf@prec,w
  1965  056A  00C4               	movwf	??_sprintf
  1966  056B  0744               	addwf	??_sprintf,w
  1967  056C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1968  056D  0084               	movwf	4
  1969  056E  120A  118A  200D  120A  118A  	fcall	stringdir
  1970  0573  00F0               	movwf	___lwdiv@divisor
  1971  0574  120A  118A  200D  120A  118A  	fcall	stringdir
  1972  0579  00F1               	movwf	___lwdiv@divisor+1
  1973  057A  084B               	movf	sprintf@val+1,w
  1974  057B  00F3               	movwf	___lwdiv@dividend+1
  1975  057C  084A               	movf	sprintf@val,w
  1976  057D  00F2               	movwf	___lwdiv@dividend
  1977  057E  120A  118A  2327  120A  118A  	fcall	___lwdiv
  1978  0583  0871               	movf	?___lwdiv+1,w
  1979  0584  00FB               	movwf	___lwmod@dividend+1
  1980  0585  0870               	movf	?___lwdiv,w
  1981  0586  00FA               	movwf	___lwmod@dividend
  1982  0587  120A  118A  22AB  120A  118A  	fcall	___lwmod
  1983  058C  0878               	movf	?___lwmod,w
  1984  058D  3E30               	addlw	48
  1985  058E  1283               	bcf	3,5	;RP0=0, select bank0
  1986  058F  1303               	bcf	3,6	;RP1=0, select bank0
  1987  0590  00C5               	movwf	??_sprintf+1
  1988  0591  0845               	movf	??_sprintf+1,w
  1989  0592  00CD               	movwf	sprintf@c
  1990  0593                     l1660:	
  1991                           
  1992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  1993  0593  084D               	movf	sprintf@c,w
  1994  0594  00C4               	movwf	??_sprintf
  1995  0595  084C               	movf	sprintf@sp,w
  1996  0596  0084               	movwf	4
  1997  0597  0844               	movf	??_sprintf,w
  1998  0598  1383               	bcf	3,7	;select IRP bank0
  1999  0599  0080               	movwf	0
  2000  059A                     l1662:	
  2001  059A  3001               	movlw	1
  2002  059B  00C4               	movwf	??_sprintf
  2003  059C  0844               	movf	??_sprintf,w
  2004  059D  07CC               	addwf	sprintf@sp,f
  2005  059E                     l1664:	
  2006                           
  2007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  2008  059E  30FF               	movlw	255
  2009  059F  00C4               	movwf	??_sprintf
  2010  05A0  0844               	movf	??_sprintf,w
  2011  05A1  07C9               	addwf	sprintf@prec,f
  2012  05A2  0A49               	incf	sprintf@prec,w
  2013  05A3  1D03               	btfss	3,2
  2014  05A4  2DA6               	goto	u1011
  2015  05A5  2DA7               	goto	u1010
  2016  05A6                     u1011:	
  2017  05A6  2D65               	goto	l1658
  2018  05A7                     u1010:	
  2019  05A7                     l1666:	
  2020                           
  2021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  2022  05A7  3001               	movlw	1
  2023  05A8  07C1               	addwf	sprintf@f,f
  2024  05A9  30FF               	movlw	-1
  2025  05AA  0741               	addwf	sprintf@f,w
  2026  05AB  0084               	movwf	4
  2027  05AC  120A  118A  200D  120A  118A  	fcall	stringdir
  2028  05B1  00C4               	movwf	??_sprintf
  2029  05B2  0844               	movf	??_sprintf,w
  2030  05B3  00CD               	movwf	sprintf@c
  2031  05B4  084D               	movf	sprintf@c,w
  2032  05B5  1D03               	btfss	3,2
  2033  05B6  2DB8               	goto	u1021
  2034  05B7  2DB9               	goto	u1020
  2035  05B8                     u1021:	
  2036  05B8  2CDE               	goto	l1616
  2037  05B9                     u1020:	
  2038  05B9                     l1668:	
  2039                           
  2040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  2041  05B9  084C               	movf	sprintf@sp,w
  2042  05BA  0084               	movwf	4
  2043  05BB  1383               	bcf	3,7	;select IRP bank0
  2044  05BC  0180               	clrf	0
  2045  05BD                     l390:	
  2046  05BD  0008               	return
  2047  05BE                     __end_of_sprintf:	
  2048                           
  2049                           	psect	text3
  2050  02AB                     __ptext3:	
  2051 ;; *************** function ___lwmod *****************
  2052 ;; Defined at:
  2053 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  divisor         2    8[COMMON] unsigned int 
  2056 ;;  dividend        2   10[COMMON] unsigned int 
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;  counter         1   13[COMMON] unsigned char 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  2    8[COMMON] unsigned int 
  2061 ;; Registers used:
  2062 ;;		wreg, status,2, status,0
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2068 ;;      Params:         4       0       0       0       0
  2069 ;;      Locals:         1       0       0       0       0
  2070 ;;      Temps:          1       0       0       0       0
  2071 ;;      Totals:         6       0       0       0       0
  2072 ;;Total ram usage:        6 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; This function calls:
  2075 ;;		Nothing
  2076 ;; This function is called by:
  2077 ;;		_sprintf
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           
  2082                           ;psect for function ___lwmod
  2083  02AB                     ___lwmod:	
  2084  02AB                     l1540:	
  2085                           ;incstack = 0
  2086                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2087                           
  2088  02AB  0878               	movf	___lwmod@divisor,w
  2089  02AC  0479               	iorwf	___lwmod@divisor+1,w
  2090  02AD  1903               	btfsc	3,2
  2091  02AE  2AB0               	goto	u831
  2092  02AF  2AB1               	goto	u830
  2093  02B0                     u831:	
  2094  02B0  2AE0               	goto	l1558
  2095  02B1                     u830:	
  2096  02B1                     l1542:	
  2097  02B1  01FD               	clrf	___lwmod@counter
  2098  02B2  0AFD               	incf	___lwmod@counter,f
  2099  02B3  2ABF               	goto	l1548
  2100  02B4                     l1544:	
  2101  02B4  3001               	movlw	1
  2102  02B5                     u845:	
  2103  02B5  1003               	clrc
  2104  02B6  0DF8               	rlf	___lwmod@divisor,f
  2105  02B7  0DF9               	rlf	___lwmod@divisor+1,f
  2106  02B8  3EFF               	addlw	-1
  2107  02B9  1D03               	skipz
  2108  02BA  2AB5               	goto	u845
  2109  02BB                     l1546:	
  2110  02BB  3001               	movlw	1
  2111  02BC  00FC               	movwf	??___lwmod
  2112  02BD  087C               	movf	??___lwmod,w
  2113  02BE  07FD               	addwf	___lwmod@counter,f
  2114  02BF                     l1548:	
  2115  02BF  1FF9               	btfss	___lwmod@divisor+1,7
  2116  02C0  2AC2               	goto	u851
  2117  02C1  2AC3               	goto	u850
  2118  02C2                     u851:	
  2119  02C2  2AB4               	goto	l1544
  2120  02C3                     u850:	
  2121  02C3                     l1550:	
  2122  02C3  0879               	movf	___lwmod@divisor+1,w
  2123  02C4  027B               	subwf	___lwmod@dividend+1,w
  2124  02C5  1D03               	skipz
  2125  02C6  2AC9               	goto	u865
  2126  02C7  0878               	movf	___lwmod@divisor,w
  2127  02C8  027A               	subwf	___lwmod@dividend,w
  2128  02C9                     u865:	
  2129  02C9  1C03               	skipc
  2130  02CA  2ACC               	goto	u861
  2131  02CB  2ACD               	goto	u860
  2132  02CC                     u861:	
  2133  02CC  2AD3               	goto	l1554
  2134  02CD                     u860:	
  2135  02CD                     l1552:	
  2136  02CD  0878               	movf	___lwmod@divisor,w
  2137  02CE  02FA               	subwf	___lwmod@dividend,f
  2138  02CF  0879               	movf	___lwmod@divisor+1,w
  2139  02D0  1C03               	skipc
  2140  02D1  03FB               	decf	___lwmod@dividend+1,f
  2141  02D2  02FB               	subwf	___lwmod@dividend+1,f
  2142  02D3                     l1554:	
  2143  02D3  3001               	movlw	1
  2144  02D4                     u875:	
  2145  02D4  1003               	clrc
  2146  02D5  0CF9               	rrf	___lwmod@divisor+1,f
  2147  02D6  0CF8               	rrf	___lwmod@divisor,f
  2148  02D7  3EFF               	addlw	-1
  2149  02D8  1D03               	skipz
  2150  02D9  2AD4               	goto	u875
  2151  02DA                     l1556:	
  2152  02DA  3001               	movlw	1
  2153  02DB  02FD               	subwf	___lwmod@counter,f
  2154  02DC  1D03               	btfss	3,2
  2155  02DD  2ADF               	goto	u881
  2156  02DE  2AE0               	goto	u880
  2157  02DF                     u881:	
  2158  02DF  2AC3               	goto	l1550
  2159  02E0                     u880:	
  2160  02E0                     l1558:	
  2161  02E0  087B               	movf	___lwmod@dividend+1,w
  2162  02E1  00F9               	movwf	?___lwmod+1
  2163  02E2  087A               	movf	___lwmod@dividend,w
  2164  02E3  00F8               	movwf	?___lwmod
  2165  02E4                     l676:	
  2166  02E4  0008               	return
  2167  02E5                     __end_of___lwmod:	
  2168                           
  2169                           	psect	text4
  2170  0327                     __ptext4:	
  2171 ;; *************** function ___lwdiv *****************
  2172 ;; Defined at:
  2173 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;  divisor         2    0[COMMON] unsigned int 
  2176 ;;  dividend        2    2[COMMON] unsigned int 
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;  quotient        2    5[COMMON] unsigned int 
  2179 ;;  counter         1    7[COMMON] unsigned char 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  2    0[COMMON] unsigned int 
  2182 ;; Registers used:
  2183 ;;		wreg, status,2, status,0
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2189 ;;      Params:         4       0       0       0       0
  2190 ;;      Locals:         3       0       0       0       0
  2191 ;;      Temps:          1       0       0       0       0
  2192 ;;      Totals:         8       0       0       0       0
  2193 ;;Total ram usage:        8 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; This function calls:
  2196 ;;		Nothing
  2197 ;; This function is called by:
  2198 ;;		_sprintf
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           
  2203                           ;psect for function ___lwdiv
  2204  0327                     ___lwdiv:	
  2205  0327                     l1514:	
  2206                           ;incstack = 0
  2207                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2208                           
  2209  0327  01F5               	clrf	___lwdiv@quotient
  2210  0328  01F6               	clrf	___lwdiv@quotient+1
  2211  0329                     l1516:	
  2212  0329  0870               	movf	___lwdiv@divisor,w
  2213  032A  0471               	iorwf	___lwdiv@divisor+1,w
  2214  032B  1903               	btfsc	3,2
  2215  032C  2B2E               	goto	u761
  2216  032D  2B2F               	goto	u760
  2217  032E                     u761:	
  2218  032E  2B66               	goto	l1536
  2219  032F                     u760:	
  2220  032F                     l1518:	
  2221  032F  01F7               	clrf	___lwdiv@counter
  2222  0330  0AF7               	incf	___lwdiv@counter,f
  2223  0331  2B3D               	goto	l1524
  2224  0332                     l1520:	
  2225  0332  3001               	movlw	1
  2226  0333                     u775:	
  2227  0333  1003               	clrc
  2228  0334  0DF0               	rlf	___lwdiv@divisor,f
  2229  0335  0DF1               	rlf	___lwdiv@divisor+1,f
  2230  0336  3EFF               	addlw	-1
  2231  0337  1D03               	skipz
  2232  0338  2B33               	goto	u775
  2233  0339                     l1522:	
  2234  0339  3001               	movlw	1
  2235  033A  00F4               	movwf	??___lwdiv
  2236  033B  0874               	movf	??___lwdiv,w
  2237  033C  07F7               	addwf	___lwdiv@counter,f
  2238  033D                     l1524:	
  2239  033D  1FF1               	btfss	___lwdiv@divisor+1,7
  2240  033E  2B40               	goto	u781
  2241  033F  2B41               	goto	u780
  2242  0340                     u781:	
  2243  0340  2B32               	goto	l1520
  2244  0341                     u780:	
  2245  0341                     l1526:	
  2246  0341  3001               	movlw	1
  2247  0342                     u795:	
  2248  0342  1003               	clrc
  2249  0343  0DF5               	rlf	___lwdiv@quotient,f
  2250  0344  0DF6               	rlf	___lwdiv@quotient+1,f
  2251  0345  3EFF               	addlw	-1
  2252  0346  1D03               	skipz
  2253  0347  2B42               	goto	u795
  2254  0348  0871               	movf	___lwdiv@divisor+1,w
  2255  0349  0273               	subwf	___lwdiv@dividend+1,w
  2256  034A  1D03               	skipz
  2257  034B  2B4E               	goto	u805
  2258  034C  0870               	movf	___lwdiv@divisor,w
  2259  034D  0272               	subwf	___lwdiv@dividend,w
  2260  034E                     u805:	
  2261  034E  1C03               	skipc
  2262  034F  2B51               	goto	u801
  2263  0350  2B52               	goto	u800
  2264  0351                     u801:	
  2265  0351  2B59               	goto	l1532
  2266  0352                     u800:	
  2267  0352                     l1528:	
  2268  0352  0870               	movf	___lwdiv@divisor,w
  2269  0353  02F2               	subwf	___lwdiv@dividend,f
  2270  0354  0871               	movf	___lwdiv@divisor+1,w
  2271  0355  1C03               	skipc
  2272  0356  03F3               	decf	___lwdiv@dividend+1,f
  2273  0357  02F3               	subwf	___lwdiv@dividend+1,f
  2274  0358                     l1530:	
  2275  0358  1475               	bsf	___lwdiv@quotient,0
  2276  0359                     l1532:	
  2277  0359  3001               	movlw	1
  2278  035A                     u815:	
  2279  035A  1003               	clrc
  2280  035B  0CF1               	rrf	___lwdiv@divisor+1,f
  2281  035C  0CF0               	rrf	___lwdiv@divisor,f
  2282  035D  3EFF               	addlw	-1
  2283  035E  1D03               	skipz
  2284  035F  2B5A               	goto	u815
  2285  0360                     l1534:	
  2286  0360  3001               	movlw	1
  2287  0361  02F7               	subwf	___lwdiv@counter,f
  2288  0362  1D03               	btfss	3,2
  2289  0363  2B65               	goto	u821
  2290  0364  2B66               	goto	u820
  2291  0365                     u821:	
  2292  0365  2B41               	goto	l1526
  2293  0366                     u820:	
  2294  0366                     l1536:	
  2295  0366  0876               	movf	___lwdiv@quotient+1,w
  2296  0367  00F1               	movwf	?___lwdiv+1
  2297  0368  0875               	movf	___lwdiv@quotient,w
  2298  0369  00F0               	movwf	?___lwdiv
  2299  036A                     l666:	
  2300  036A  0008               	return
  2301  036B                     __end_of___lwdiv:	
  2302                           
  2303                           	psect	text5
  2304  043A                     __ptext5:	
  2305 ;; *************** function _setup *****************
  2306 ;; Defined at:
  2307 ;;		line 155 in file "main_mast.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;		None
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;		None
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  1    wreg      void 
  2314 ;; Registers used:
  2315 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2321 ;;      Params:         0       0       0       0       0
  2322 ;;      Locals:         0       0       0       0       0
  2323 ;;      Temps:          0       1       0       0       0
  2324 ;;      Totals:         0       1       0       0       0
  2325 ;;Total ram usage:        1 bytes
  2326 ;; Hardware stack levels used:    1
  2327 ;; Hardware stack levels required when called:    2
  2328 ;; This function calls:
  2329 ;;		_I2C_Master_Init
  2330 ;;		_clcLCD
  2331 ;;		_initLCD
  2332 ;;		_setCursorLCD
  2333 ;;		_writeStrLCD
  2334 ;; This function is called by:
  2335 ;;		_main
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           
  2340                           ;psect for function _setup
  2341  043A                     _setup:	
  2342  043A                     l1676:	
  2343                           ;incstack = 0
  2344                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2345                           
  2346                           
  2347                           ;main_mast.c: 157:     ANSEL = 0;
  2348  043A  1683               	bsf	3,5	;RP0=1, select bank3
  2349  043B  1703               	bsf	3,6	;RP1=1, select bank3
  2350  043C  0188               	clrf	8	;volatile
  2351                           
  2352                           ;main_mast.c: 158:     ANSELH = 0;
  2353  043D  0189               	clrf	9	;volatile
  2354                           
  2355                           ;main_mast.c: 159:     TRISB = 0;
  2356  043E  1683               	bsf	3,5	;RP0=1, select bank1
  2357  043F  1303               	bcf	3,6	;RP1=0, select bank1
  2358  0440  0186               	clrf	6	;volatile
  2359                           
  2360                           ;main_mast.c: 160:     TRISD = 0;
  2361  0441  0188               	clrf	8	;volatile
  2362                           
  2363                           ;main_mast.c: 161:     PORTB = 0;
  2364  0442  1283               	bcf	3,5	;RP0=0, select bank0
  2365  0443  1303               	bcf	3,6	;RP1=0, select bank0
  2366  0444  0186               	clrf	6	;volatile
  2367                           
  2368                           ;main_mast.c: 162:     PORTD = 0;
  2369  0445  0188               	clrf	8	;volatile
  2370  0446                     l1678:	
  2371                           
  2372                           ;main_mast.c: 163:     I2C_Master_Init(100000);
  2373  0446  3000               	movlw	0
  2374  0447  00C4               	movwf	I2C_Master_Init@c+3
  2375  0448  3001               	movlw	1
  2376  0449  00C3               	movwf	I2C_Master_Init@c+2
  2377  044A  3086               	movlw	134
  2378  044B  00C2               	movwf	I2C_Master_Init@c+1
  2379  044C  30A0               	movlw	160
  2380  044D  00C1               	movwf	I2C_Master_Init@c
  2381  044E  120A  118A  2239  120A  118A  	fcall	_I2C_Master_Init
  2382  0453                     l1680:	
  2383                           
  2384                           ;main_mast.c: 167:     TXSTAbits.SYNC = 0;
  2385  0453  1683               	bsf	3,5	;RP0=1, select bank1
  2386  0454  1303               	bcf	3,6	;RP1=0, select bank1
  2387  0455  1218               	bcf	24,4	;volatile
  2388  0456                     l1682:	
  2389                           
  2390                           ;main_mast.c: 168:     TXSTAbits.BRGH = 0;
  2391  0456  1118               	bcf	24,2	;volatile
  2392  0457                     l1684:	
  2393                           
  2394                           ;main_mast.c: 169:     BAUDCTLbits.BRG16 = 1;
  2395  0457  1683               	bsf	3,5	;RP0=1, select bank3
  2396  0458  1703               	bsf	3,6	;RP1=1, select bank3
  2397  0459  1587               	bsf	7,3	;volatile
  2398  045A                     l1686:	
  2399                           
  2400                           ;main_mast.c: 170:     SPBRG = 25;
  2401  045A  3019               	movlw	25
  2402  045B  1683               	bsf	3,5	;RP0=1, select bank1
  2403  045C  1303               	bcf	3,6	;RP1=0, select bank1
  2404  045D  0099               	movwf	25	;volatile
  2405  045E                     l1688:	
  2406                           
  2407                           ;main_mast.c: 171:     SPBRGH = 0;
  2408  045E  019A               	clrf	26	;volatile
  2409  045F                     l1690:	
  2410                           
  2411                           ;main_mast.c: 172:     RCSTAbits.SPEN = 1;
  2412  045F  1283               	bcf	3,5	;RP0=0, select bank0
  2413  0460  1303               	bcf	3,6	;RP1=0, select bank0
  2414  0461  1798               	bsf	24,7	;volatile
  2415  0462                     l1692:	
  2416                           
  2417                           ;main_mast.c: 173:     RCSTAbits.CREN = 1;
  2418  0462  1618               	bsf	24,4	;volatile
  2419  0463                     l1694:	
  2420                           
  2421                           ;main_mast.c: 174:     TXSTAbits.TXEN = 1;
  2422  0463  1683               	bsf	3,5	;RP0=1, select bank1
  2423  0464  1303               	bcf	3,6	;RP1=0, select bank1
  2424  0465  1698               	bsf	24,5	;volatile
  2425  0466                     l1696:	
  2426                           
  2427                           ;main_mast.c: 178:     initLCD();
  2428  0466  120A  118A  2271  120A  118A  	fcall	_initLCD
  2429  046B                     l1698:	
  2430                           
  2431                           ;main_mast.c: 179:     clcLCD();
  2432  046B  120A  118A  2151  120A  118A  	fcall	_clcLCD
  2433  0470                     l1700:	
  2434                           
  2435                           ;main_mast.c: 182:     setCursorLCD(1, 1);
  2436  0470  01F3               	clrf	setCursorLCD@x
  2437  0471  0AF3               	incf	setCursorLCD@x,f
  2438  0472  3001               	movlw	1
  2439  0473  120A  118A  21AC  120A  118A  	fcall	_setCursorLCD
  2440  0478                     l1702:	
  2441                           
  2442                           ;main_mast.c: 183:     writeStrLCD("P");
  2443  0478  301C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2444  0479  00F2               	movwf	writeStrLCD@string
  2445  047A  3080               	movlw	128
  2446  047B  00F3               	movwf	writeStrLCD@string+1
  2447  047C  120A  118A  22E5  120A  118A  	fcall	_writeStrLCD
  2448  0481                     l1704:	
  2449                           
  2450                           ;main_mast.c: 184:     setCursorLCD(1, 3);
  2451  0481  3003               	movlw	3
  2452  0482  1283               	bcf	3,5	;RP0=0, select bank0
  2453  0483  1303               	bcf	3,6	;RP1=0, select bank0
  2454  0484  00C9               	movwf	??_setup
  2455  0485  0849               	movf	??_setup,w
  2456  0486  00F3               	movwf	setCursorLCD@x
  2457  0487  3001               	movlw	1
  2458  0488  120A  118A  21AC  120A  118A  	fcall	_setCursorLCD
  2459  048D                     l1706:	
  2460                           
  2461                           ;main_mast.c: 185:     writeStrLCD("TEM");
  2462  048D  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2463  048E  00F2               	movwf	writeStrLCD@string
  2464  048F  3080               	movlw	128
  2465  0490  00F3               	movwf	writeStrLCD@string+1
  2466  0491  120A  118A  22E5  120A  118A  	fcall	_writeStrLCD
  2467  0496                     l1708:	
  2468                           
  2469                           ;main_mast.c: 186:     setCursorLCD(1, 7);
  2470  0496  3007               	movlw	7
  2471  0497  1283               	bcf	3,5	;RP0=0, select bank0
  2472  0498  1303               	bcf	3,6	;RP1=0, select bank0
  2473  0499  00C9               	movwf	??_setup
  2474  049A  0849               	movf	??_setup,w
  2475  049B  00F3               	movwf	setCursorLCD@x
  2476  049C  3001               	movlw	1
  2477  049D  120A  118A  21AC  120A  118A  	fcall	_setCursorLCD
  2478  04A2                     l1710:	
  2479                           
  2480                           ;main_mast.c: 187:     writeStrLCD("HU");
  2481  04A2  3019               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2482  04A3  00F2               	movwf	writeStrLCD@string
  2483  04A4  3080               	movlw	128
  2484  04A5  00F3               	movwf	writeStrLCD@string+1
  2485  04A6  120A  118A  22E5  120A  118A  	fcall	_writeStrLCD
  2486  04AB                     l1712:	
  2487                           
  2488                           ;main_mast.c: 188:     setCursorLCD(1, 10);
  2489  04AB  300A               	movlw	10
  2490  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  2491  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  2492  04AE  00C9               	movwf	??_setup
  2493  04AF  0849               	movf	??_setup,w
  2494  04B0  00F3               	movwf	setCursorLCD@x
  2495  04B1  3001               	movlw	1
  2496  04B2  120A  118A  21AC  120A  118A  	fcall	_setCursorLCD
  2497  04B7                     l1714:	
  2498                           
  2499                           ;main_mast.c: 189:     writeStrLCD("SOL");
  2500  04B7  300B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2501  04B8  00F2               	movwf	writeStrLCD@string
  2502  04B9  3080               	movlw	128
  2503  04BA  00F3               	movwf	writeStrLCD@string+1
  2504  04BB  120A  118A  22E5  120A  118A  	fcall	_writeStrLCD
  2505  04C0                     l1716:	
  2506                           
  2507                           ;main_mast.c: 190:     setCursorLCD(1, 14);
  2508  04C0  300E               	movlw	14
  2509  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2510  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  2511  04C3  00C9               	movwf	??_setup
  2512  04C4  0849               	movf	??_setup,w
  2513  04C5  00F3               	movwf	setCursorLCD@x
  2514  04C6  3001               	movlw	1
  2515  04C7  120A  118A  21AC  120A  118A  	fcall	_setCursorLCD
  2516  04CC                     l1718:	
  2517                           
  2518                           ;main_mast.c: 191:     writeStrLCD("CA");
  2519  04CC  3016               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2520  04CD  00F2               	movwf	writeStrLCD@string
  2521  04CE  3080               	movlw	128
  2522  04CF  00F3               	movwf	writeStrLCD@string+1
  2523  04D0  120A  118A  22E5  120A  118A  	fcall	_writeStrLCD
  2524  04D5                     l116:	
  2525  04D5  0008               	return
  2526  04D6                     __end_of_setup:	
  2527                           
  2528                           	psect	text6
  2529  02E5                     __ptext6:	
  2530 ;; *************** function _writeStrLCD *****************
  2531 ;; Defined at:
  2532 ;;		line 30 in file "LCD.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  string          2    2[COMMON] PTR unsigned char 
  2535 ;;		 -> writeIntLCD@buffer(4), STR_5(3), STR_4(4), STR_3(3), 
  2536 ;;		 -> STR_2(4), STR_1(2), 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;  cont            2    7[COMMON] int 
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2548 ;;      Params:         2       0       0       0       0
  2549 ;;      Locals:         2       0       0       0       0
  2550 ;;      Temps:          3       0       0       0       0
  2551 ;;      Totals:         7       0       0       0       0
  2552 ;;Total ram usage:        7 bytes
  2553 ;; Hardware stack levels used:    1
  2554 ;; Hardware stack levels required when called:    1
  2555 ;; This function calls:
  2556 ;;		_writeCharLCD
  2557 ;; This function is called by:
  2558 ;;		_setup
  2559 ;;		_writeIntLCD
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           
  2564                           ;psect for function _writeStrLCD
  2565  02E5                     _writeStrLCD:	
  2566  02E5                     l1602:	
  2567                           ;incstack = 0
  2568                           ; Regs used in _writeStrLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2569                           
  2570                           
  2571                           ;LCD.c: 31:  int cont;;LCD.c: 32:  for(cont=0;string[cont]!='\0';cont++){
  2572  02E5  01F7               	clrf	writeStrLCD@cont
  2573  02E6  01F8               	clrf	writeStrLCD@cont+1
  2574  02E7  2B0A               	goto	l1608
  2575  02E8                     l1604:	
  2576                           
  2577                           ;LCD.c: 33:         writeCharLCD(string[cont]);
  2578  02E8  0877               	movf	writeStrLCD@cont,w
  2579  02E9  0772               	addwf	writeStrLCD@string,w
  2580  02EA  00F5               	movwf	??_writeStrLCD+1
  2581  02EB  0873               	movf	writeStrLCD@string+1,w
  2582  02EC  00F4               	movwf	??_writeStrLCD
  2583  02ED  1803               	skipnc
  2584  02EE  0AF4               	incf	??_writeStrLCD,f
  2585  02EF  1FF7               	btfss	writeStrLCD@cont,7
  2586  02F0  2AF2               	goto	u910
  2587  02F1  03F4               	decf	??_writeStrLCD,f
  2588  02F2                     u910:	
  2589  02F2  0874               	movf	??_writeStrLCD,w
  2590  02F3  00F6               	movwf	??_writeStrLCD+2
  2591  02F4  0876               	movf	??_writeStrLCD+2,w
  2592  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  2593  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  2594  02F7  00FF               	movwf	btemp+1
  2595  02F8  0875               	movf	??_writeStrLCD+1,w
  2596  02F9  0084               	movwf	4
  2597  02FA  120A  118A  2003  120A  118A  	fcall	stringtab
  2598  02FF  120A  118A  2189  120A  118A  	fcall	_writeCharLCD
  2599  0304                     l1606:	
  2600                           
  2601                           ;LCD.c: 34:     }
  2602  0304  3001               	movlw	1
  2603  0305  07F7               	addwf	writeStrLCD@cont,f
  2604  0306  1803               	skipnc
  2605  0307  0AF8               	incf	writeStrLCD@cont+1,f
  2606  0308  3000               	movlw	0
  2607  0309  07F8               	addwf	writeStrLCD@cont+1,f
  2608  030A                     l1608:	
  2609  030A  0877               	movf	writeStrLCD@cont,w
  2610  030B  0772               	addwf	writeStrLCD@string,w
  2611  030C  00F5               	movwf	??_writeStrLCD+1
  2612  030D  0873               	movf	writeStrLCD@string+1,w
  2613  030E  00F4               	movwf	??_writeStrLCD
  2614  030F  1803               	skipnc
  2615  0310  0AF4               	incf	??_writeStrLCD,f
  2616  0311  1FF7               	btfss	writeStrLCD@cont,7
  2617  0312  2B14               	goto	u920
  2618  0313  03F4               	decf	??_writeStrLCD,f
  2619  0314                     u920:	
  2620  0314  0874               	movf	??_writeStrLCD,w
  2621  0315  00F6               	movwf	??_writeStrLCD+2
  2622  0316  0876               	movf	??_writeStrLCD+2,w
  2623  0317  1283               	bcf	3,5	;RP0=0, select bank0
  2624  0318  1303               	bcf	3,6	;RP1=0, select bank0
  2625  0319  00FF               	movwf	btemp+1
  2626  031A  0875               	movf	??_writeStrLCD+1,w
  2627  031B  0084               	movwf	4
  2628  031C  120A  118A  2003  120A  118A  	fcall	stringtab
  2629  0321  3A00               	xorlw	0
  2630  0322  1D03               	skipz
  2631  0323  2B25               	goto	u931
  2632  0324  2B26               	goto	u930
  2633  0325                     u931:	
  2634  0325  2AE8               	goto	l1604
  2635  0326                     u930:	
  2636  0326                     l203:	
  2637  0326  0008               	return
  2638  0327                     __end_of_writeStrLCD:	
  2639                           
  2640                           	psect	text7
  2641  0189                     __ptext7:	
  2642 ;; *************** function _writeCharLCD *****************
  2643 ;; Defined at:
  2644 ;;		line 37 in file "LCD.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  character       1    wreg     unsigned char 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  character       1    1[COMMON] unsigned char 
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      void 
  2651 ;; Registers used:
  2652 ;;		wreg
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2658 ;;      Params:         0       0       0       0       0
  2659 ;;      Locals:         1       0       0       0       0
  2660 ;;      Temps:          1       0       0       0       0
  2661 ;;      Totals:         2       0       0       0       0
  2662 ;;Total ram usage:        2 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; This function calls:
  2665 ;;		Nothing
  2666 ;; This function is called by:
  2667 ;;		_writeStrLCD
  2668 ;;		_writeFloat
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           
  2673                           ;psect for function _writeCharLCD
  2674  0189                     _writeCharLCD:	
  2675                           
  2676                           ;incstack = 0
  2677                           ; Regs used in _writeCharLCD: [wreg]
  2678                           ;writeCharLCD@character stored from wreg
  2679  0189  00F1               	movwf	writeCharLCD@character
  2680  018A                     l1482:	
  2681                           
  2682                           ;LCD.c: 38:    RD0 = 1;
  2683  018A  1283               	bcf	3,5	;RP0=0, select bank0
  2684  018B  1303               	bcf	3,6	;RP1=0, select bank0
  2685  018C  1408               	bsf	8,0	;volatile
  2686  018D                     l1484:	
  2687                           
  2688                           ;LCD.c: 39:    PORTB = character;
  2689  018D  0871               	movf	writeCharLCD@character,w
  2690  018E  0086               	movwf	6	;volatile
  2691  018F                     l1486:	
  2692                           
  2693                           ;LCD.c: 40:    RD1 = 1;
  2694  018F  1488               	bsf	8,1	;volatile
  2695                           
  2696                           ;LCD.c: 41:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2697  0190  300D               	movlw	13
  2698  0191  00F0               	movwf	??_writeCharLCD
  2699  0192                     u1377:	
  2700  0192  0BF0               	decfsz	??_writeCharLCD,f
  2701  0193  2992               	goto	u1377
  2702  0194                     l1488:	
  2703                           
  2704                           ;LCD.c: 42:    RD1 = 0;
  2705  0194  1283               	bcf	3,5	;RP0=0, select bank0
  2706  0195  1303               	bcf	3,6	;RP1=0, select bank0
  2707  0196  1088               	bcf	8,1	;volatile
  2708  0197                     l206:	
  2709  0197  0008               	return
  2710  0198                     __end_of_writeCharLCD:	
  2711                           
  2712                           	psect	text8
  2713  01AC                     __ptext8:	
  2714 ;; *************** function _setCursorLCD *****************
  2715 ;; Defined at:
  2716 ;;		line 17 in file "LCD.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;  y               1    wreg     unsigned char 
  2719 ;;  x               1    3[COMMON] unsigned char 
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  y               1    5[COMMON] unsigned char 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      void 
  2724 ;; Registers used:
  2725 ;;		wreg, status,2, status,0, pclath, cstack
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2731 ;;      Params:         1       0       0       0       0
  2732 ;;      Locals:         1       0       0       0       0
  2733 ;;      Temps:          1       0       0       0       0
  2734 ;;      Totals:         3       0       0       0       0
  2735 ;;Total ram usage:        3 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:    1
  2738 ;; This function calls:
  2739 ;;		_cmdLCD
  2740 ;; This function is called by:
  2741 ;;		_main
  2742 ;;		_setup
  2743 ;;		_writeFloat
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           
  2748                           ;psect for function _setCursorLCD
  2749  01AC                     _setCursorLCD:	
  2750                           
  2751                           ;incstack = 0
  2752                           ; Regs used in _setCursorLCD: [wreg+status,2+status,0+pclath+cstack]
  2753                           ;setCursorLCD@y stored from wreg
  2754  01AC  00F5               	movwf	setCursorLCD@y
  2755  01AD                     l1562:	
  2756                           
  2757                           ;LCD.c: 18:     if(y == 1){
  2758  01AD  0375               	decf	setCursorLCD@y,w
  2759  01AE  1D03               	btfss	3,2
  2760  01AF  29B1               	goto	u891
  2761  01B0  29B2               	goto	u890
  2762  01B1                     u891:	
  2763  01B1  29BA               	goto	l1566
  2764  01B2                     u890:	
  2765  01B2                     l1564:	
  2766                           
  2767                           ;LCD.c: 19:         cursor = 0x80 + x - 1;
  2768  01B2  0873               	movf	setCursorLCD@x,w
  2769  01B3  3E7F               	addlw	127
  2770  01B4  00F4               	movwf	??_setCursorLCD
  2771  01B5  0874               	movf	??_setCursorLCD,w
  2772  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  2773  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  2774  01B8  00C0               	movwf	_cursor
  2775                           
  2776                           ;LCD.c: 20:     }else{
  2777  01B9  29C1               	goto	l1568
  2778  01BA                     l1566:	
  2779                           
  2780                           ;LCD.c: 21:         cursor = 0xC0 + x - 1;
  2781  01BA  0873               	movf	setCursorLCD@x,w
  2782  01BB  3EBF               	addlw	191
  2783  01BC  00F4               	movwf	??_setCursorLCD
  2784  01BD  0874               	movf	??_setCursorLCD,w
  2785  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  2786  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  2787  01C0  00C0               	movwf	_cursor
  2788  01C1                     l1568:	
  2789                           
  2790                           ;LCD.c: 23:     cmdLCD(cursor);
  2791  01C1  0840               	movf	_cursor,w
  2792  01C2  120A  118A  2198  120A  118A  	fcall	_cmdLCD
  2793  01C7                     l194:	
  2794  01C7  0008               	return
  2795  01C8                     __end_of_setCursorLCD:	
  2796                           
  2797                           	psect	text9
  2798  0271                     __ptext9:	
  2799 ;; *************** function _initLCD *****************
  2800 ;; Defined at:
  2801 ;;		line 45 in file "LCD.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;		None
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;		None
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		wreg, status,2, status,0, pclath, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2815 ;;      Params:         0       0       0       0       0
  2816 ;;      Locals:         0       0       0       0       0
  2817 ;;      Temps:          2       0       0       0       0
  2818 ;;      Totals:         2       0       0       0       0
  2819 ;;Total ram usage:        2 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    1
  2822 ;; This function calls:
  2823 ;;		_cmdLCD
  2824 ;; This function is called by:
  2825 ;;		_setup
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           
  2830                           ;psect for function _initLCD
  2831  0271                     _initLCD:	
  2832  0271                     l1582:	
  2833                           ;incstack = 0
  2834                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  2835                           
  2836                           
  2837                           ;LCD.c: 46:      _delay((unsigned long)((15)*(4000000/4000.0)));
  2838  0271  3014               	movlw	20
  2839  0272  00F4               	movwf	??_initLCD+1
  2840  0273  3079               	movlw	121
  2841  0274  00F3               	movwf	??_initLCD
  2842  0275                     u1387:	
  2843  0275  0BF3               	decfsz	??_initLCD,f
  2844  0276  2A75               	goto	u1387
  2845  0277  0BF4               	decfsz	??_initLCD+1,f
  2846  0278  2A75               	goto	u1387
  2847  0279  2A7A               	nop2
  2848  027A                     l1584:	
  2849                           
  2850                           ;LCD.c: 47:     cmdLCD(0x030);
  2851  027A  3030               	movlw	48
  2852  027B  120A  118A  2198  120A  118A  	fcall	_cmdLCD
  2853  0280                     l1586:	
  2854                           
  2855                           ;LCD.c: 48:     cmdLCD(0x030);
  2856  0280  3030               	movlw	48
  2857  0281  120A  118A  2198  120A  118A  	fcall	_cmdLCD
  2858  0286                     l1588:	
  2859                           
  2860                           ;LCD.c: 49:     cmdLCD(0x030);
  2861  0286  3030               	movlw	48
  2862  0287  120A  118A  2198  120A  118A  	fcall	_cmdLCD
  2863  028C                     l1590:	
  2864                           
  2865                           ;LCD.c: 51:     cmdLCD(0x38);
  2866  028C  3038               	movlw	56
  2867  028D  120A  118A  2198  120A  118A  	fcall	_cmdLCD
  2868  0292                     l1592:	
  2869                           
  2870                           ;LCD.c: 52:     cmdLCD(0x10);
  2871  0292  3010               	movlw	16
  2872  0293  120A  118A  2198  120A  118A  	fcall	_cmdLCD
  2873  0298                     l1594:	
  2874                           
  2875                           ;LCD.c: 53:     cmdLCD(0x01);
  2876  0298  3001               	movlw	1
  2877  0299  120A  118A  2198  120A  118A  	fcall	_cmdLCD
  2878  029E                     l1596:	
  2879                           
  2880                           ;LCD.c: 54:     cmdLCD(0x06);
  2881  029E  3006               	movlw	6
  2882  029F  120A  118A  2198  120A  118A  	fcall	_cmdLCD
  2883  02A4                     l1598:	
  2884                           
  2885                           ;LCD.c: 55:     cmdLCD(0x0E);
  2886  02A4  300E               	movlw	14
  2887  02A5  120A  118A  2198  120A  118A  	fcall	_cmdLCD
  2888  02AA                     l209:	
  2889  02AA  0008               	return
  2890  02AB                     __end_of_initLCD:	
  2891                           
  2892                           	psect	text10
  2893  0151                     __ptext10:	
  2894 ;; *************** function _clcLCD *****************
  2895 ;; Defined at:
  2896 ;;		line 26 in file "LCD.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;		None
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;		None
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  1    wreg      void 
  2903 ;; Registers used:
  2904 ;;		wreg, status,2, status,0, pclath, cstack
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2910 ;;      Params:         0       0       0       0       0
  2911 ;;      Locals:         0       0       0       0       0
  2912 ;;      Temps:          0       0       0       0       0
  2913 ;;      Totals:         0       0       0       0       0
  2914 ;;Total ram usage:        0 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; Hardware stack levels required when called:    1
  2917 ;; This function calls:
  2918 ;;		_cmdLCD
  2919 ;; This function is called by:
  2920 ;;		_setup
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           
  2925                           ;psect for function _clcLCD
  2926  0151                     _clcLCD:	
  2927  0151                     l1600:	
  2928                           ;incstack = 0
  2929                           ; Regs used in _clcLCD: [wreg+status,2+status,0+pclath+cstack]
  2930                           
  2931                           
  2932                           ;LCD.c: 27:     cmdLCD(0x01);
  2933  0151  3001               	movlw	1
  2934  0152  120A  118A  2198  120A  118A  	fcall	_cmdLCD
  2935  0157                     l197:	
  2936  0157  0008               	return
  2937  0158                     __end_of_clcLCD:	
  2938                           
  2939                           	psect	text11
  2940  0198                     __ptext11:	
  2941 ;; *************** function _cmdLCD *****************
  2942 ;; Defined at:
  2943 ;;		line 58 in file "LCD.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;  cmd             1    wreg     unsigned char 
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;  cmd             1    2[COMMON] unsigned char 
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  1    wreg      void 
  2950 ;; Registers used:
  2951 ;;		wreg
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2957 ;;      Params:         0       0       0       0       0
  2958 ;;      Locals:         1       0       0       0       0
  2959 ;;      Temps:          2       0       0       0       0
  2960 ;;      Totals:         3       0       0       0       0
  2961 ;;Total ram usage:        3 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; This function calls:
  2964 ;;		Nothing
  2965 ;; This function is called by:
  2966 ;;		_setCursorLCD
  2967 ;;		_clcLCD
  2968 ;;		_initLCD
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           
  2973                           ;psect for function _cmdLCD
  2974  0198                     _cmdLCD:	
  2975                           
  2976                           ;incstack = 0
  2977                           ; Regs used in _cmdLCD: [wreg]
  2978                           ;cmdLCD@cmd stored from wreg
  2979  0198  00F2               	movwf	cmdLCD@cmd
  2980  0199                     l1474:	
  2981                           
  2982                           ;LCD.c: 59:     RD0 = 0;
  2983  0199  1283               	bcf	3,5	;RP0=0, select bank0
  2984  019A  1303               	bcf	3,6	;RP1=0, select bank0
  2985  019B  1008               	bcf	8,0	;volatile
  2986  019C                     l1476:	
  2987                           
  2988                           ;LCD.c: 60:  PORTB = cmd;
  2989  019C  0872               	movf	cmdLCD@cmd,w
  2990  019D  0086               	movwf	6	;volatile
  2991  019E                     l1478:	
  2992                           
  2993                           ;LCD.c: 61:  RD1 = 1;
  2994  019E  1488               	bsf	8,1	;volatile
  2995                           
  2996                           ;LCD.c: 62:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2997  019F  3006               	movlw	6
  2998  01A0  00F1               	movwf	??_cmdLCD+1
  2999  01A1  3030               	movlw	48
  3000  01A2  00F0               	movwf	??_cmdLCD
  3001  01A3                     u1397:	
  3002  01A3  0BF0               	decfsz	??_cmdLCD,f
  3003  01A4  29A3               	goto	u1397
  3004  01A5  0BF1               	decfsz	??_cmdLCD+1,f
  3005  01A6  29A3               	goto	u1397
  3006  01A7  0000               	nop
  3007  01A8                     l1480:	
  3008                           
  3009                           ;LCD.c: 63:     RD1 = 0;
  3010  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  3011  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  3012  01AA  1088               	bcf	8,1	;volatile
  3013  01AB                     l212:	
  3014  01AB  0008               	return
  3015  01AC                     __end_of_cmdLCD:	
  3016                           
  3017                           	psect	text12
  3018  0239                     __ptext12:	
  3019 ;; *************** function _I2C_Master_Init *****************
  3020 ;; Defined at:
  3021 ;;		line 14 in file "I2C.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  c               4    0[BANK0 ] const unsigned long 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;		None
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      void 
  3028 ;; Registers used:
  3029 ;;		wreg, status,2, status,0, pclath, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3035 ;;      Params:         0       4       0       0       0
  3036 ;;      Locals:         0       0       0       0       0
  3037 ;;      Temps:          0       4       0       0       0
  3038 ;;      Totals:         0       8       0       0       0
  3039 ;;Total ram usage:        8 bytes
  3040 ;; Hardware stack levels used:    1
  3041 ;; Hardware stack levels required when called:    1
  3042 ;; This function calls:
  3043 ;;		___lldiv
  3044 ;; This function is called by:
  3045 ;;		_setup
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           
  3050                           ;psect for function _I2C_Master_Init
  3051  0239                     _I2C_Master_Init:	
  3052  0239                     l1570:	
  3053                           ;incstack = 0
  3054                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3055                           
  3056                           
  3057                           ;I2C.c: 14: void I2C_Master_Init(const unsigned long c);I2C.c: 15: {;I2C.c: 16:     SSPC
      +                          ON = 0b00101000;
  3058  0239  3028               	movlw	40
  3059  023A  1283               	bcf	3,5	;RP0=0, select bank0
  3060  023B  1303               	bcf	3,6	;RP1=0, select bank0
  3061  023C  0094               	movwf	20	;volatile
  3062  023D                     l1572:	
  3063                           
  3064                           ;I2C.c: 17:     SSPCON2 = 0;
  3065  023D  1683               	bsf	3,5	;RP0=1, select bank1
  3066  023E  1303               	bcf	3,6	;RP1=0, select bank1
  3067  023F  0191               	clrf	17	;volatile
  3068  0240                     l1574:	
  3069                           
  3070                           ;I2C.c: 18:     SSPADD = (4000000/(4*c))-1;
  3071  0240  1283               	bcf	3,5	;RP0=0, select bank0
  3072  0241  1303               	bcf	3,6	;RP1=0, select bank0
  3073  0242  0841               	movf	I2C_Master_Init@c,w
  3074  0243  00C5               	movwf	??_I2C_Master_Init
  3075  0244  0842               	movf	I2C_Master_Init@c+1,w
  3076  0245  00C6               	movwf	??_I2C_Master_Init+1
  3077  0246  0843               	movf	I2C_Master_Init@c+2,w
  3078  0247  00C7               	movwf	??_I2C_Master_Init+2
  3079  0248  0844               	movf	I2C_Master_Init@c+3,w
  3080  0249  00C8               	movwf	??_I2C_Master_Init+3
  3081  024A  3002               	movlw	2
  3082  024B                     u905:	
  3083  024B  1003               	clrc
  3084  024C  0DC5               	rlf	??_I2C_Master_Init,f
  3085  024D  0DC6               	rlf	??_I2C_Master_Init+1,f
  3086  024E  0DC7               	rlf	??_I2C_Master_Init+2,f
  3087  024F  0DC8               	rlf	??_I2C_Master_Init+3,f
  3088  0250                     u900:	
  3089  0250  3EFF               	addlw	-1
  3090  0251  1D03               	skipz
  3091  0252  2A4B               	goto	u905
  3092  0253  0848               	movf	??_I2C_Master_Init+3,w
  3093  0254  00F3               	movwf	___lldiv@divisor+3
  3094  0255  0847               	movf	??_I2C_Master_Init+2,w
  3095  0256  00F2               	movwf	___lldiv@divisor+2
  3096  0257  0846               	movf	??_I2C_Master_Init+1,w
  3097  0258  00F1               	movwf	___lldiv@divisor+1
  3098  0259  0845               	movf	??_I2C_Master_Init,w
  3099  025A  00F0               	movwf	___lldiv@divisor
  3100  025B  3000               	movlw	0
  3101  025C  00F7               	movwf	___lldiv@dividend+3
  3102  025D  303D               	movlw	61
  3103  025E  00F6               	movwf	___lldiv@dividend+2
  3104  025F  3009               	movlw	9
  3105  0260  00F5               	movwf	___lldiv@dividend+1
  3106  0261  3000               	movlw	0
  3107  0262  00F4               	movwf	___lldiv@dividend
  3108  0263  120A  118A  236B  120A  118A  	fcall	___lldiv
  3109  0268  0870               	movf	?___lldiv,w
  3110  0269  3EFF               	addlw	255
  3111  026A  1683               	bsf	3,5	;RP0=1, select bank1
  3112  026B  1303               	bcf	3,6	;RP1=0, select bank1
  3113  026C  0093               	movwf	19	;volatile
  3114  026D                     l1576:	
  3115                           
  3116                           ;I2C.c: 19:     SSPSTAT = 0;
  3117  026D  0194               	clrf	20	;volatile
  3118  026E                     l1578:	
  3119                           
  3120                           ;I2C.c: 20:     TRISCbits.TRISC3 = 1;
  3121  026E  1587               	bsf	7,3	;volatile
  3122  026F                     l1580:	
  3123                           
  3124                           ;I2C.c: 21:     TRISCbits.TRISC4 = 1;
  3125  026F  1607               	bsf	7,4	;volatile
  3126  0270                     l147:	
  3127  0270  0008               	return
  3128  0271                     __end_of_I2C_Master_Init:	
  3129                           
  3130                           	psect	text13
  3131  036B                     __ptext13:	
  3132 ;; *************** function ___lldiv *****************
  3133 ;; Defined at:
  3134 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;  divisor         4    0[COMMON] unsigned long 
  3137 ;;  dividend        4    4[COMMON] unsigned long 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  quotient        4    9[COMMON] unsigned long 
  3140 ;;  counter         1   13[COMMON] unsigned char 
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  4    0[COMMON] unsigned long 
  3143 ;; Registers used:
  3144 ;;		wreg, status,2, status,0
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3150 ;;      Params:         8       0       0       0       0
  3151 ;;      Locals:         5       0       0       0       0
  3152 ;;      Temps:          1       0       0       0       0
  3153 ;;      Totals:        14       0       0       0       0
  3154 ;;Total ram usage:       14 bytes
  3155 ;; Hardware stack levels used:    1
  3156 ;; This function calls:
  3157 ;;		Nothing
  3158 ;; This function is called by:
  3159 ;;		_I2C_Master_Init
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           
  3164                           ;psect for function ___lldiv
  3165  036B                     ___lldiv:	
  3166  036B                     l1490:	
  3167                           ;incstack = 0
  3168                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3169                           
  3170  036B  3000               	movlw	0
  3171  036C  00FC               	movwf	___lldiv@quotient+3
  3172  036D  3000               	movlw	0
  3173  036E  00FB               	movwf	___lldiv@quotient+2
  3174  036F  3000               	movlw	0
  3175  0370  00FA               	movwf	___lldiv@quotient+1
  3176  0371  3000               	movlw	0
  3177  0372  00F9               	movwf	___lldiv@quotient
  3178  0373  0873               	movf	___lldiv@divisor+3,w
  3179  0374  0472               	iorwf	___lldiv@divisor+2,w
  3180  0375  0471               	iorwf	___lldiv@divisor+1,w
  3181  0376  0470               	iorwf	___lldiv@divisor,w
  3182  0377  1903               	skipnz
  3183  0378  2B7A               	goto	u691
  3184  0379  2B7B               	goto	u690
  3185  037A                     u691:	
  3186  037A  2BC8               	goto	l1510
  3187  037B                     u690:	
  3188  037B                     l1492:	
  3189  037B  01FD               	clrf	___lldiv@counter
  3190  037C  0AFD               	incf	___lldiv@counter,f
  3191  037D  2B8B               	goto	l1496
  3192  037E                     l1494:	
  3193  037E  3001               	movlw	1
  3194  037F  00F8               	movwf	??___lldiv
  3195  0380                     u705:	
  3196  0380  1003               	clrc
  3197  0381  0DF0               	rlf	___lldiv@divisor,f
  3198  0382  0DF1               	rlf	___lldiv@divisor+1,f
  3199  0383  0DF2               	rlf	___lldiv@divisor+2,f
  3200  0384  0DF3               	rlf	___lldiv@divisor+3,f
  3201  0385  0BF8               	decfsz	??___lldiv,f
  3202  0386  2B80               	goto	u705
  3203  0387  3001               	movlw	1
  3204  0388  00F8               	movwf	??___lldiv
  3205  0389  0878               	movf	??___lldiv,w
  3206  038A  07FD               	addwf	___lldiv@counter,f
  3207  038B                     l1496:	
  3208  038B  1FF3               	btfss	___lldiv@divisor+3,7
  3209  038C  2B8E               	goto	u711
  3210  038D  2B8F               	goto	u710
  3211  038E                     u711:	
  3212  038E  2B7E               	goto	l1494
  3213  038F                     u710:	
  3214  038F                     l1498:	
  3215  038F  3001               	movlw	1
  3216  0390  00F8               	movwf	??___lldiv
  3217  0391                     u725:	
  3218  0391  1003               	clrc
  3219  0392  0DF9               	rlf	___lldiv@quotient,f
  3220  0393  0DFA               	rlf	___lldiv@quotient+1,f
  3221  0394  0DFB               	rlf	___lldiv@quotient+2,f
  3222  0395  0DFC               	rlf	___lldiv@quotient+3,f
  3223  0396  0BF8               	decfsz	??___lldiv,f
  3224  0397  2B91               	goto	u725
  3225  0398                     l1500:	
  3226  0398  0873               	movf	___lldiv@divisor+3,w
  3227  0399  0277               	subwf	___lldiv@dividend+3,w
  3228  039A  1D03               	skipz
  3229  039B  2BA6               	goto	u735
  3230  039C  0872               	movf	___lldiv@divisor+2,w
  3231  039D  0276               	subwf	___lldiv@dividend+2,w
  3232  039E  1D03               	skipz
  3233  039F  2BA6               	goto	u735
  3234  03A0  0871               	movf	___lldiv@divisor+1,w
  3235  03A1  0275               	subwf	___lldiv@dividend+1,w
  3236  03A2  1D03               	skipz
  3237  03A3  2BA6               	goto	u735
  3238  03A4  0870               	movf	___lldiv@divisor,w
  3239  03A5  0274               	subwf	___lldiv@dividend,w
  3240  03A6                     u735:	
  3241  03A6  1C03               	skipc
  3242  03A7  2BA9               	goto	u731
  3243  03A8  2BAA               	goto	u730
  3244  03A9                     u731:	
  3245  03A9  2BB9               	goto	l1506
  3246  03AA                     u730:	
  3247  03AA                     l1502:	
  3248  03AA  0870               	movf	___lldiv@divisor,w
  3249  03AB  02F4               	subwf	___lldiv@dividend,f
  3250  03AC  0871               	movf	___lldiv@divisor+1,w
  3251  03AD  1C03               	skipc
  3252  03AE  0F71               	incfsz	___lldiv@divisor+1,w
  3253  03AF  02F5               	subwf	___lldiv@dividend+1,f
  3254  03B0  0872               	movf	___lldiv@divisor+2,w
  3255  03B1  1C03               	skipc
  3256  03B2  0F72               	incfsz	___lldiv@divisor+2,w
  3257  03B3  02F6               	subwf	___lldiv@dividend+2,f
  3258  03B4  0873               	movf	___lldiv@divisor+3,w
  3259  03B5  1C03               	skipc
  3260  03B6  0F73               	incfsz	___lldiv@divisor+3,w
  3261  03B7  02F7               	subwf	___lldiv@dividend+3,f
  3262  03B8                     l1504:	
  3263  03B8  1479               	bsf	___lldiv@quotient,0
  3264  03B9                     l1506:	
  3265  03B9  3001               	movlw	1
  3266  03BA                     u745:	
  3267  03BA  1003               	clrc
  3268  03BB  0CF3               	rrf	___lldiv@divisor+3,f
  3269  03BC  0CF2               	rrf	___lldiv@divisor+2,f
  3270  03BD  0CF1               	rrf	___lldiv@divisor+1,f
  3271  03BE  0CF0               	rrf	___lldiv@divisor,f
  3272  03BF  3EFF               	addlw	-1
  3273  03C0  1D03               	skipz
  3274  03C1  2BBA               	goto	u745
  3275  03C2                     l1508:	
  3276  03C2  3001               	movlw	1
  3277  03C3  02FD               	subwf	___lldiv@counter,f
  3278  03C4  1D03               	btfss	3,2
  3279  03C5  2BC7               	goto	u751
  3280  03C6  2BC8               	goto	u750
  3281  03C7                     u751:	
  3282  03C7  2B8F               	goto	l1498
  3283  03C8                     u750:	
  3284  03C8                     l1510:	
  3285  03C8  087C               	movf	___lldiv@quotient+3,w
  3286  03C9  00F3               	movwf	?___lldiv+3
  3287  03CA  087B               	movf	___lldiv@quotient+2,w
  3288  03CB  00F2               	movwf	?___lldiv+2
  3289  03CC  087A               	movf	___lldiv@quotient+1,w
  3290  03CD  00F1               	movwf	?___lldiv+1
  3291  03CE  0879               	movf	___lldiv@quotient,w
  3292  03CF  00F0               	movwf	?___lldiv
  3293  03D0                     l430:	
  3294  03D0  0008               	return
  3295  03D1                     __end_of___lldiv:	
  3296                           
  3297                           	psect	text14
  3298  01E6                     __ptext14:	
  3299 ;; *************** function ___wmul *****************
  3300 ;; Defined at:
  3301 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;  multiplier      2    0[COMMON] unsigned int 
  3304 ;;  multiplicand    2    2[COMMON] unsigned int 
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;  product         2    4[COMMON] unsigned int 
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  2    0[COMMON] unsigned int 
  3309 ;; Registers used:
  3310 ;;		wreg, status,2, status,0
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3316 ;;      Params:         4       0       0       0       0
  3317 ;;      Locals:         2       0       0       0       0
  3318 ;;      Temps:          0       0       0       0       0
  3319 ;;      Totals:         6       0       0       0       0
  3320 ;;Total ram usage:        6 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; This function calls:
  3323 ;;		Nothing
  3324 ;; This function is called by:
  3325 ;;		_main
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           
  3330                           ;psect for function ___wmul
  3331  01E6                     ___wmul:	
  3332  01E6                     l1750:	
  3333                           ;incstack = 0
  3334                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3335                           
  3336  01E6  01F4               	clrf	___wmul@product
  3337  01E7  01F5               	clrf	___wmul@product+1
  3338  01E8                     l1752:	
  3339  01E8  1C70               	btfss	___wmul@multiplier,0
  3340  01E9  29EB               	goto	u1041
  3341  01EA  29EC               	goto	u1040
  3342  01EB                     u1041:	
  3343  01EB  29F2               	goto	l394
  3344  01EC                     u1040:	
  3345  01EC                     l1754:	
  3346  01EC  0872               	movf	___wmul@multiplicand,w
  3347  01ED  07F4               	addwf	___wmul@product,f
  3348  01EE  1803               	skipnc
  3349  01EF  0AF5               	incf	___wmul@product+1,f
  3350  01F0  0873               	movf	___wmul@multiplicand+1,w
  3351  01F1  07F5               	addwf	___wmul@product+1,f
  3352  01F2                     l394:	
  3353  01F2  3001               	movlw	1
  3354  01F3                     u1055:	
  3355  01F3  1003               	clrc
  3356  01F4  0DF2               	rlf	___wmul@multiplicand,f
  3357  01F5  0DF3               	rlf	___wmul@multiplicand+1,f
  3358  01F6  3EFF               	addlw	-1
  3359  01F7  1D03               	skipz
  3360  01F8  29F3               	goto	u1055
  3361  01F9                     l1756:	
  3362  01F9  3001               	movlw	1
  3363  01FA                     u1065:	
  3364  01FA  1003               	clrc
  3365  01FB  0CF1               	rrf	___wmul@multiplier+1,f
  3366  01FC  0CF0               	rrf	___wmul@multiplier,f
  3367  01FD  3EFF               	addlw	-1
  3368  01FE  1D03               	skipz
  3369  01FF  29FA               	goto	u1065
  3370  0200                     l1758:	
  3371  0200  0870               	movf	___wmul@multiplier,w
  3372  0201  0471               	iorwf	___wmul@multiplier+1,w
  3373  0202  1D03               	btfss	3,2
  3374  0203  2A05               	goto	u1071
  3375  0204  2A06               	goto	u1070
  3376  0205                     u1071:	
  3377  0205  29E8               	goto	l1752
  3378  0206                     u1070:	
  3379  0206                     l1760:	
  3380  0206  0875               	movf	___wmul@product+1,w
  3381  0207  00F1               	movwf	?___wmul+1
  3382  0208  0874               	movf	___wmul@product,w
  3383  0209  00F0               	movwf	?___wmul
  3384  020A                     l396:	
  3385  020A  0008               	return
  3386  020B                     __end_of___wmul:	
  3387                           
  3388                           	psect	text15
  3389  03D1                     __ptext15:	
  3390 ;; *************** function ___awdiv *****************
  3391 ;; Defined at:
  3392 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3393 ;; Parameters:    Size  Location     Type
  3394 ;;  divisor         2    6[COMMON] int 
  3395 ;;  dividend        2    8[COMMON] int 
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;  quotient        2    2[BANK0 ] int 
  3398 ;;  sign            1    1[BANK0 ] unsigned char 
  3399 ;;  counter         1    0[BANK0 ] unsigned char 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  2    6[COMMON] int 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3409 ;;      Params:         4       0       0       0       0
  3410 ;;      Locals:         0       4       0       0       0
  3411 ;;      Temps:          1       0       0       0       0
  3412 ;;      Totals:         5       4       0       0       0
  3413 ;;Total ram usage:        9 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_main
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422                           
  3423                           ;psect for function ___awdiv
  3424  03D1                     ___awdiv:	
  3425  03D1                     l1764:	
  3426                           ;incstack = 0
  3427                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3428                           
  3429  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  3430  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  3431  03D3  01C2               	clrf	___awdiv@sign
  3432  03D4                     l1766:	
  3433  03D4  1FF7               	btfss	___awdiv@divisor+1,7
  3434  03D5  2BD7               	goto	u1081
  3435  03D6  2BD8               	goto	u1080
  3436  03D7                     u1081:	
  3437  03D7  2BDF               	goto	l1772
  3438  03D8                     u1080:	
  3439  03D8                     l1768:	
  3440  03D8  09F6               	comf	___awdiv@divisor,f
  3441  03D9  09F7               	comf	___awdiv@divisor+1,f
  3442  03DA  0AF6               	incf	___awdiv@divisor,f
  3443  03DB  1903               	skipnz
  3444  03DC  0AF7               	incf	___awdiv@divisor+1,f
  3445  03DD                     l1770:	
  3446  03DD  01C2               	clrf	___awdiv@sign
  3447  03DE  0AC2               	incf	___awdiv@sign,f
  3448  03DF                     l1772:	
  3449  03DF  1FF9               	btfss	___awdiv@dividend+1,7
  3450  03E0  2BE2               	goto	u1091
  3451  03E1  2BE3               	goto	u1090
  3452  03E2                     u1091:	
  3453  03E2  2BEC               	goto	l1778
  3454  03E3                     u1090:	
  3455  03E3                     l1774:	
  3456  03E3  09F8               	comf	___awdiv@dividend,f
  3457  03E4  09F9               	comf	___awdiv@dividend+1,f
  3458  03E5  0AF8               	incf	___awdiv@dividend,f
  3459  03E6  1903               	skipnz
  3460  03E7  0AF9               	incf	___awdiv@dividend+1,f
  3461  03E8                     l1776:	
  3462  03E8  3001               	movlw	1
  3463  03E9  00FA               	movwf	??___awdiv
  3464  03EA  087A               	movf	??___awdiv,w
  3465  03EB  06C2               	xorwf	___awdiv@sign,f
  3466  03EC                     l1778:	
  3467  03EC  01C3               	clrf	___awdiv@quotient
  3468  03ED  01C4               	clrf	___awdiv@quotient+1
  3469  03EE                     l1780:	
  3470  03EE  0876               	movf	___awdiv@divisor,w
  3471  03EF  0477               	iorwf	___awdiv@divisor+1,w
  3472  03F0  1903               	btfsc	3,2
  3473  03F1  2BF3               	goto	u1101
  3474  03F2  2BF4               	goto	u1100
  3475  03F3                     u1101:	
  3476  03F3  2C2B               	goto	l1800
  3477  03F4                     u1100:	
  3478  03F4                     l1782:	
  3479  03F4  01C1               	clrf	___awdiv@counter
  3480  03F5  0AC1               	incf	___awdiv@counter,f
  3481  03F6  2C02               	goto	l1788
  3482  03F7                     l1784:	
  3483  03F7  3001               	movlw	1
  3484  03F8                     u1115:	
  3485  03F8  1003               	clrc
  3486  03F9  0DF6               	rlf	___awdiv@divisor,f
  3487  03FA  0DF7               	rlf	___awdiv@divisor+1,f
  3488  03FB  3EFF               	addlw	-1
  3489  03FC  1D03               	skipz
  3490  03FD  2BF8               	goto	u1115
  3491  03FE                     l1786:	
  3492  03FE  3001               	movlw	1
  3493  03FF  00FA               	movwf	??___awdiv
  3494  0400  087A               	movf	??___awdiv,w
  3495  0401  07C1               	addwf	___awdiv@counter,f
  3496  0402                     l1788:	
  3497  0402  1FF7               	btfss	___awdiv@divisor+1,7
  3498  0403  2C05               	goto	u1121
  3499  0404  2C06               	goto	u1120
  3500  0405                     u1121:	
  3501  0405  2BF7               	goto	l1784
  3502  0406                     u1120:	
  3503  0406                     l1790:	
  3504  0406  3001               	movlw	1
  3505  0407                     u1135:	
  3506  0407  1003               	clrc
  3507  0408  0DC3               	rlf	___awdiv@quotient,f
  3508  0409  0DC4               	rlf	___awdiv@quotient+1,f
  3509  040A  3EFF               	addlw	-1
  3510  040B  1D03               	skipz
  3511  040C  2C07               	goto	u1135
  3512  040D  0877               	movf	___awdiv@divisor+1,w
  3513  040E  0279               	subwf	___awdiv@dividend+1,w
  3514  040F  1D03               	skipz
  3515  0410  2C13               	goto	u1145
  3516  0411  0876               	movf	___awdiv@divisor,w
  3517  0412  0278               	subwf	___awdiv@dividend,w
  3518  0413                     u1145:	
  3519  0413  1C03               	skipc
  3520  0414  2C16               	goto	u1141
  3521  0415  2C17               	goto	u1140
  3522  0416                     u1141:	
  3523  0416  2C1E               	goto	l1796
  3524  0417                     u1140:	
  3525  0417                     l1792:	
  3526  0417  0876               	movf	___awdiv@divisor,w
  3527  0418  02F8               	subwf	___awdiv@dividend,f
  3528  0419  0877               	movf	___awdiv@divisor+1,w
  3529  041A  1C03               	skipc
  3530  041B  03F9               	decf	___awdiv@dividend+1,f
  3531  041C  02F9               	subwf	___awdiv@dividend+1,f
  3532  041D                     l1794:	
  3533  041D  1443               	bsf	___awdiv@quotient,0
  3534  041E                     l1796:	
  3535  041E  3001               	movlw	1
  3536  041F                     u1155:	
  3537  041F  1003               	clrc
  3538  0420  0CF7               	rrf	___awdiv@divisor+1,f
  3539  0421  0CF6               	rrf	___awdiv@divisor,f
  3540  0422  3EFF               	addlw	-1
  3541  0423  1D03               	skipz
  3542  0424  2C1F               	goto	u1155
  3543  0425                     l1798:	
  3544  0425  3001               	movlw	1
  3545  0426  02C1               	subwf	___awdiv@counter,f
  3546  0427  1D03               	btfss	3,2
  3547  0428  2C2A               	goto	u1161
  3548  0429  2C2B               	goto	u1160
  3549  042A                     u1161:	
  3550  042A  2C06               	goto	l1790
  3551  042B                     u1160:	
  3552  042B                     l1800:	
  3553  042B  0842               	movf	___awdiv@sign,w
  3554  042C  1903               	btfsc	3,2
  3555  042D  2C2F               	goto	u1171
  3556  042E  2C30               	goto	u1170
  3557  042F                     u1171:	
  3558  042F  2C35               	goto	l1804
  3559  0430                     u1170:	
  3560  0430                     l1802:	
  3561  0430  09C3               	comf	___awdiv@quotient,f
  3562  0431  09C4               	comf	___awdiv@quotient+1,f
  3563  0432  0AC3               	incf	___awdiv@quotient,f
  3564  0433  1903               	skipnz
  3565  0434  0AC4               	incf	___awdiv@quotient+1,f
  3566  0435                     l1804:	
  3567  0435  0844               	movf	___awdiv@quotient+1,w
  3568  0436  00F7               	movwf	?___awdiv+1
  3569  0437  0843               	movf	___awdiv@quotient,w
  3570  0438  00F6               	movwf	?___awdiv
  3571  0439                     l547:	
  3572  0439  0008               	return
  3573  043A                     __end_of___awdiv:	
  3574                           
  3575                           	psect	text16
  3576  0172                     __ptext16:	
  3577 ;; *************** function _I2C_Master_Write *****************
  3578 ;; Defined at:
  3579 ;;		line 63 in file "I2C.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  d               2    0[COMMON] unsigned int 
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;		None
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1    wreg      void 
  3586 ;; Registers used:
  3587 ;;		wreg, status,2, status,0, pclath, cstack
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3593 ;;      Params:         2       0       0       0       0
  3594 ;;      Locals:         0       0       0       0       0
  3595 ;;      Temps:          0       0       0       0       0
  3596 ;;      Totals:         2       0       0       0       0
  3597 ;;Total ram usage:        2 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:    1
  3600 ;; This function calls:
  3601 ;;		_I2C_Master_Wait
  3602 ;; This function is called by:
  3603 ;;		_main
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           
  3608                           ;psect for function _I2C_Master_Write
  3609  0172                     _I2C_Master_Write:	
  3610  0172                     l1724:	
  3611                           ;incstack = 0
  3612                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3613                           
  3614                           
  3615                           ;I2C.c: 63: void I2C_Master_Write(unsigned d);I2C.c: 64: {;I2C.c: 65:     I2C_Master_Wai
      +                          t();
  3616  0172  120A  118A  217C  120A  118A  	fcall	_I2C_Master_Wait
  3617  0177                     l1726:	
  3618                           
  3619                           ;I2C.c: 66:     SSPBUF = d;
  3620  0177  0870               	movf	I2C_Master_Write@d,w
  3621  0178  1283               	bcf	3,5	;RP0=0, select bank0
  3622  0179  1303               	bcf	3,6	;RP1=0, select bank0
  3623  017A  0093               	movwf	19	;volatile
  3624  017B                     l165:	
  3625  017B  0008               	return
  3626  017C                     __end_of_I2C_Master_Write:	
  3627                           
  3628                           	psect	text17
  3629  0169                     __ptext17:	
  3630 ;; *************** function _I2C_Master_Stop *****************
  3631 ;; Defined at:
  3632 ;;		line 53 in file "I2C.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;		None
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;		None
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      void 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2, status,0, pclath, cstack
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3646 ;;      Params:         0       0       0       0       0
  3647 ;;      Locals:         0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0
  3649 ;;      Totals:         0       0       0       0       0
  3650 ;;Total ram usage:        0 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    1
  3653 ;; This function calls:
  3654 ;;		_I2C_Master_Wait
  3655 ;; This function is called by:
  3656 ;;		_main
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           
  3661                           ;psect for function _I2C_Master_Stop
  3662  0169                     _I2C_Master_Stop:	
  3663  0169                     l1744:	
  3664                           ;incstack = 0
  3665                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3666                           
  3667                           
  3668                           ;I2C.c: 55:     I2C_Master_Wait();
  3669  0169  120A  118A  217C  120A  118A  	fcall	_I2C_Master_Wait
  3670  016E                     l1746:	
  3671                           
  3672                           ;I2C.c: 56:     SSPCON2bits.PEN = 1;
  3673  016E  1683               	bsf	3,5	;RP0=1, select bank1
  3674  016F  1303               	bcf	3,6	;RP1=0, select bank1
  3675  0170  1511               	bsf	17,2	;volatile
  3676  0171                     l162:	
  3677  0171  0008               	return
  3678  0172                     __end_of_I2C_Master_Stop:	
  3679                           
  3680                           	psect	text18
  3681  0160                     __ptext18:	
  3682 ;; *************** function _I2C_Master_Start *****************
  3683 ;; Defined at:
  3684 ;;		line 37 in file "I2C.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;		None
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;		None
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  1    wreg      void 
  3691 ;; Registers used:
  3692 ;;		wreg, status,2, status,0, pclath, cstack
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3698 ;;      Params:         0       0       0       0       0
  3699 ;;      Locals:         0       0       0       0       0
  3700 ;;      Temps:          0       0       0       0       0
  3701 ;;      Totals:         0       0       0       0       0
  3702 ;;Total ram usage:        0 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; Hardware stack levels required when called:    1
  3705 ;; This function calls:
  3706 ;;		_I2C_Master_Wait
  3707 ;; This function is called by:
  3708 ;;		_main
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           
  3713                           ;psect for function _I2C_Master_Start
  3714  0160                     _I2C_Master_Start:	
  3715  0160                     l1720:	
  3716                           ;incstack = 0
  3717                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3718                           
  3719                           
  3720                           ;I2C.c: 39:     I2C_Master_Wait();
  3721  0160  120A  118A  217C  120A  118A  	fcall	_I2C_Master_Wait
  3722  0165                     l1722:	
  3723                           
  3724                           ;I2C.c: 40:     SSPCON2bits.SEN = 1;
  3725  0165  1683               	bsf	3,5	;RP0=1, select bank1
  3726  0166  1303               	bcf	3,6	;RP1=0, select bank1
  3727  0167  1411               	bsf	17,0	;volatile
  3728  0168                     l156:	
  3729  0168  0008               	return
  3730  0169                     __end_of_I2C_Master_Start:	
  3731                           
  3732                           	psect	text19
  3733  020B                     __ptext19:	
  3734 ;; *************** function _I2C_Master_Read *****************
  3735 ;; Defined at:
  3736 ;;		line 72 in file "I2C.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;  a               2    0[COMMON] unsigned short 
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;  temp            2    4[COMMON] unsigned short 
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  2    0[COMMON] unsigned short 
  3743 ;; Registers used:
  3744 ;;		wreg, status,2, status,0, pclath, cstack
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3750 ;;      Params:         2       0       0       0       0
  3751 ;;      Locals:         2       0       0       0       0
  3752 ;;      Temps:          2       0       0       0       0
  3753 ;;      Totals:         6       0       0       0       0
  3754 ;;Total ram usage:        6 bytes
  3755 ;; Hardware stack levels used:    1
  3756 ;; Hardware stack levels required when called:    1
  3757 ;; This function calls:
  3758 ;;		_I2C_Master_Wait
  3759 ;; This function is called by:
  3760 ;;		_main
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           
  3765                           ;psect for function _I2C_Master_Read
  3766  020B                     _I2C_Master_Read:	
  3767  020B                     l1728:	
  3768                           ;incstack = 0
  3769                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3770                           
  3771                           
  3772                           ;I2C.c: 72: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 73: {;I2C.c: 74:    
      +                           unsigned short temp;;I2C.c: 75:     I2C_Master_Wait();
  3773  020B  120A  118A  217C  120A  118A  	fcall	_I2C_Master_Wait
  3774  0210                     l1730:	
  3775                           
  3776                           ;I2C.c: 76:     SSPCON2bits.RCEN = 1;
  3777  0210  1683               	bsf	3,5	;RP0=1, select bank1
  3778  0211  1303               	bcf	3,6	;RP1=0, select bank1
  3779  0212  1591               	bsf	17,3	;volatile
  3780                           
  3781                           ;I2C.c: 77:     I2C_Master_Wait();
  3782  0213  120A  118A  217C  120A  118A  	fcall	_I2C_Master_Wait
  3783  0218                     l1732:	
  3784                           
  3785                           ;I2C.c: 78:     temp = SSPBUF;
  3786  0218  1283               	bcf	3,5	;RP0=0, select bank0
  3787  0219  1303               	bcf	3,6	;RP1=0, select bank0
  3788  021A  0813               	movf	19,w	;volatile
  3789  021B  00F2               	movwf	??_I2C_Master_Read
  3790  021C  01F3               	clrf	??_I2C_Master_Read+1
  3791  021D  0872               	movf	??_I2C_Master_Read,w
  3792  021E  00F4               	movwf	I2C_Master_Read@temp
  3793  021F  0873               	movf	??_I2C_Master_Read+1,w
  3794  0220  00F5               	movwf	I2C_Master_Read@temp+1
  3795  0221                     l1734:	
  3796                           
  3797                           ;I2C.c: 79:     I2C_Master_Wait();
  3798  0221  120A  118A  217C  120A  118A  	fcall	_I2C_Master_Wait
  3799  0226                     l1736:	
  3800                           
  3801                           ;I2C.c: 80:     if(a == 1){
  3802  0226  0370               	decf	I2C_Master_Read@a,w
  3803  0227  0471               	iorwf	I2C_Master_Read@a+1,w
  3804  0228  1D03               	btfss	3,2
  3805  0229  2A2B               	goto	u1031
  3806  022A  2A2C               	goto	u1030
  3807  022B                     u1031:	
  3808  022B  2A30               	goto	l168
  3809  022C                     u1030:	
  3810  022C                     l1738:	
  3811                           
  3812                           ;I2C.c: 81:         SSPCON2bits.ACKDT = 0;
  3813  022C  1683               	bsf	3,5	;RP0=1, select bank1
  3814  022D  1303               	bcf	3,6	;RP1=0, select bank1
  3815  022E  1291               	bcf	17,5	;volatile
  3816                           
  3817                           ;I2C.c: 82:     }else{
  3818  022F  2A33               	goto	l169
  3819  0230                     l168:	
  3820                           
  3821                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 1;
  3822  0230  1683               	bsf	3,5	;RP0=1, select bank1
  3823  0231  1303               	bcf	3,6	;RP1=0, select bank1
  3824  0232  1691               	bsf	17,5	;volatile
  3825  0233                     l169:	
  3826                           ;I2C.c: 84:     }
  3827                           
  3828                           
  3829                           ;I2C.c: 85:     SSPCON2bits.ACKEN = 1;
  3830  0233  1611               	bsf	17,4	;volatile
  3831  0234                     l1740:	
  3832                           
  3833                           ;I2C.c: 86:     return temp;
  3834  0234  0875               	movf	I2C_Master_Read@temp+1,w
  3835  0235  00F1               	movwf	?_I2C_Master_Read+1
  3836  0236  0874               	movf	I2C_Master_Read@temp,w
  3837  0237  00F0               	movwf	?_I2C_Master_Read
  3838  0238                     l170:	
  3839  0238  0008               	return
  3840  0239                     __end_of_I2C_Master_Read:	
  3841                           
  3842                           	psect	text20
  3843  017C                     __ptext20:	
  3844 ;; *************** function _I2C_Master_Wait *****************
  3845 ;; Defined at:
  3846 ;;		line 30 in file "I2C.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;		None
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;		None
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  1    wreg      void 
  3853 ;; Registers used:
  3854 ;;		wreg, status,2
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3860 ;;      Params:         0       0       0       0       0
  3861 ;;      Locals:         0       0       0       0       0
  3862 ;;      Temps:          0       0       0       0       0
  3863 ;;      Totals:         0       0       0       0       0
  3864 ;;Total ram usage:        0 bytes
  3865 ;; Hardware stack levels used:    1
  3866 ;; This function calls:
  3867 ;;		Nothing
  3868 ;; This function is called by:
  3869 ;;		_I2C_Master_Start
  3870 ;;		_I2C_Master_Stop
  3871 ;;		_I2C_Master_Write
  3872 ;;		_I2C_Master_Read
  3873 ;;		_I2C_Master_RepeatedStart
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           
  3878                           ;psect for function _I2C_Master_Wait
  3879  017C                     _I2C_Master_Wait:	
  3880  017C                     l1610:	
  3881                           ;incstack = 0
  3882                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3883                           
  3884  017C                     l150:	
  3885                           ;I2C.c: 32:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3886                           
  3887  017C  1683               	bsf	3,5	;RP0=1, select bank1
  3888  017D  1303               	bcf	3,6	;RP1=0, select bank1
  3889  017E  1914               	btfsc	20,2	;volatile
  3890  017F  2981               	goto	u941
  3891  0180  2982               	goto	u940
  3892  0181                     u941:	
  3893  0181  297C               	goto	l150
  3894  0182                     u940:	
  3895  0182                     l1612:	
  3896  0182  0811               	movf	17,w	;volatile
  3897  0183  391F               	andlw	31
  3898  0184  1D03               	btfss	3,2
  3899  0185  2987               	goto	u951
  3900  0186  2988               	goto	u950
  3901  0187                     u951:	
  3902  0187  297C               	goto	l150
  3903  0188                     u950:	
  3904  0188                     l153:	
  3905  0188  0008               	return
  3906  0189                     __end_of_I2C_Master_Wait:	
  3907  007E                     btemp	set	126	;btemp
  3908  007E                     wtemp0	set	126


Data Sizes:
    Strings     19
    Constant    10
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     23      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> writeIntLCD@buffer(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 4
		 -> writeIntLCD@buffer(BANK0[4]), STR_5(CODE[3]), STR_4(CODE[4]), STR_3(CODE[3]), 
		 -> STR_2(CODE[4]), STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _writeStrLCD->_writeCharLCD
    _setCursorLCD->_cmdLCD
    _initLCD->_cmdLCD
    _clcLCD->_cmdLCD
    _I2C_Master_Init->___lldiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_writeIntLCD
    _writeIntLCD->_sprintf
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7010
                                             21 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___awdiv
                             ___wmul
                       _setCursorLCD
                              _setup
                        _writeIntLCD
 ---------------------------------------------------------------------------------
 (1) _writeIntLCD                                          8     8      0    1855
                                             13 BANK0      8     8      0
                            _sprintf
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0    2176
                                              8 BANK0      1     1      0
                    _I2C_Master_Init
                             _clcLCD
                            _initLCD
                       _setCursorLCD
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (2) _writeStrLCD                                          7     5      2     568
                                              2 COMMON     7     5      2
                       _writeCharLCD
 ---------------------------------------------------------------------------------
 (3) _writeCharLCD                                         2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _setCursorLCD                                         3     2      1    1152
                                              3 COMMON     3     2      1
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0      22
                                              3 COMMON     2     2      0
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _clcLCD                                               0     0      0      22
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (3) _cmdLCD                                               3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     402
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     425
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _setCursorLCD
     _cmdLCD
   _setup
     _I2C_Master_Init
       ___lldiv
     _clcLCD
       _cmdLCD
     _initLCD
       _cmdLCD
     _setCursorLCD
       _cmdLCD
     _writeStrLCD
       _writeCharLCD
   _writeIntLCD
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _writeStrLCD
       _writeCharLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      46       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      38       5       70.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      46      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon May 11 17:48:13 2020

                        pc 0002                __CFG_CP$OFF 0000            writeStrLCD@cont 0077  
                       l92 0771                         l87 075C                         l96 0786  
             ___awdiv@sign 0042                         fsr 0004        ___wmul@multiplicand 0072  
                      l100 079B                        l104 07B0                        l203 0326  
                      l212 01AB                        l116 04D5                        l108 07C5  
                      l150 017C                        l206 0197                        l215 01E5  
                      l153 0188                        l209 02AA                        l170 0238  
                      l162 0171                        l147 0270                        l156 0168  
                      l165 017B                        l430 03D0                        l168 0230  
                      l169 0233                        l194 01C7                        l197 0157  
                      l390 05BD                        l394 01F2                        l547 0439  
                      l396 020A                        l666 036A                        l676 02E4  
                      _GIE 005F                        _RD0 0040                        _RD1 0041  
             __CFG_CPD$OFF 0000                        u710 038F                        u711 038E  
                      u800 0352                        u705 0380                        u801 0351  
                      u730 03AA                        u731 03A9                        u900 0250  
                      u820 0366                        u725 0391                        u821 0365  
                      u805 034E                        u750 03C8                        u910 02F2  
                      u830 02B1                        u751 03C7                        u735 03A6  
                      u815 035A                        u831 02B0                        u920 0314  
                      u760 032F                        u745 03BA                        u905 024B  
                      u761 032E                        u690 037B                        u930 0326  
                      u850 02C3                        u691 037A                        u931 0325  
                      u851 02C2                        u940 0182                        u780 0341  
                      u860 02CD                        u941 0181                        u781 0340  
                      u861 02CC                        u845 02B5                        u950 0188  
                      u951 0187                        u775 0333                        u880 02E0  
                      u960 04E4                        u881 02DF                        u865 02C9  
                      u961 04E3                        u890 01B2                        u970 051E  
                      u891 01B1                        u795 0342                        u875 02D4  
                      u971 051D                        u980 0544                        u981 0543  
                      u990 054F                        u991 054E                        u985 0540  
                      _hum 0036                        _var 0034                        _luz 0038  
                      fsr0 0004                        indf 0000               __CFG_LVP$OFF 0000  
                     l1500 0398                       l1502 03AA                       l1510 03C8  
                     l1504 03B8                       l1600 0151                       l1520 0332  
                     l1610 017C                       l1506 03B9                       l1602 02E5  
                     l1530 0358                       l1522 0339                       l1514 0327  
                     l1612 0182                       l1508 03C2                       l1604 02E8  
                     l1700 0470                       l1532 0359                       l1524 033D  
                     l1516 0329                       l1540 02AB                       l1620 04EB  
                     l1606 0304                       l1710 04A2                       l1702 0478  
                     l1534 0360                       l1526 0341                       l1518 032F  
                     l1550 02C3                       l1542 02B1                       l1630 0516  
                     l1622 04F0                       l1614 04D9                       l1720 0160  
                     l1800 042B                       l1480 01A8                       l1608 030A  
                     l1712 04AB                       l1704 0481                       l1528 0352  
                     l1536 0366                       l1552 02CD                       l1544 02B4  
                     l1632 051A                       l1616 04DE                       l1730 0210  
                     l1722 0165                       l1802 0430                       l1490 036B  
                     l1570 0239                       l1474 0199                       l1562 01AD  
                     l1482 018A                       l1714 04B7                       l1706 048D  
                     l1554 02D3                       l1546 02BB                       l1650 054F  
                     l1634 051E                       l1626 04F1                       l1618 04E4  
                     l1810 05C3                       l1740 0234                       l1732 0218  
                     l1724 0172                       l1804 0435                       l1492 037B  
                     l1580 026F                       l1572 023D                       l1476 019C  
                     l1564 01B2                       l1484 018D                       l1716 04C0  
                     l1708 0496                       l1556 02DA                       l1548 02BF  
                     l1660 0593                       l1652 0555                       l1644 0529  
                     l1636 0522                       l1628 050E                       l1900 078C  
                     l1820 05DA                       l1812 05C9                       l1734 0221  
                     l1726 0177                       l1750 01E6                       l1494 037E  
                     l1574 0240                       l1478 019E                       l1590 028C  
                     l1582 0271                       l1566 01BA                       l1486 018F  
                     l1718 04CC                       l1558 02E0                       l1662 059A  
                     l1654 055C                       l1638 0527                       l1902 07A1  
                     l1910 07DA                       l1830 0605                       l1822 05E3  
                     l1814 05CD                       l1736 0226                       l1728 020B  
                     l1744 0169                       l1760 0206                       l1752 01E8  
                     l1496 038B                       l1576 026D                       l1592 0292  
                     l1584 027A                       l1568 01C1                       l1488 0194  
                     l1680 0453                       l1664 059E                       l1656 0560  
                     l1648 0545                       l1904 07B6                       l1840 0630  
                     l1832 060E                       l1824 05F1                       l1816 05D1  
                     l1808 05BE                       l1738 022C                       l1746 016E  
                     l1770 03DD                       l1754 01EC                       l1498 038F  
                     l1578 026E                       l1594 0298                       l1586 0280  
                     l1690 045F                       l1682 0456                       l1658 0565  
                     l1666 05A7                       l1906 07CB                       l1850 065B  
                     l1842 0639                       l1834 061C                       l1826 05F6  
                     l1818 05D5                       l1780 03EE                       l1772 03DF  
                     l1764 03D1                       l1756 01F9                       l1596 029E  
                     l1588 0286                       l1692 0462                       l1684 0457  
                     l1676 043A                       l1668 05B9                       l1748 01CB  
                     l1860 0686                       l1852 0664                       l1844 0647  
                     l1836 0621                       l1828 0600                       l1790 0406  
                     l1782 03F4                       l1774 03E3                       l1766 03D4  
                     l1758 0200                       l1598 02A4                       l1694 0463  
                     l1686 045A                       l1678 0446                       l1870 06CE  
                     l1862 068F                       l1854 0672                       l1846 064C  
                     l1838 062B                       l1792 0417                       l1784 03F7  
                     l1776 03E8                       l1768 03D8                       l1696 0466  
                     l1688 045E                       l1880 0712                       l1872 06EE  
                     l1864 069D                       l1856 0677                       l1848 0656  
                     l1794 041D                       l1786 03FE                       l1778 03EC  
                     l1698 046B                       l1890 0746                       l1882 071E  
                     l1874 06F6                       l1866 06A2                       l1858 0681  
                     l1796 041E                       l1788 0402                       l1980 07DF  
                     l1892 074E                       l1884 0726                       l1876 06FE  
                     l1868 06AC                       l1798 0425                       l1982 0503  
                     l1894 0754                       l1886 0732                       l1878 070A  
                     l1896 0762                       l1888 073A                       l1898 0777  
                     STR_1 002E                       STR_2 0021                       STR_3 002B  
                     STR_4 001D                       STR_5 0028                       STR_6 0025  
                     _BRGH 04C2                       u1000 0555                       _CREN 00C4  
                     u1001 0554                       u1010 05A7                       u1011 05A6  
                     u1100 03F4                       u1020 05B9                       u1101 03F3  
                     u1021 05B8                       u1030 022C                       u1031 022B  
                     u1120 0406                       u1040 01EC                       u1200 0777  
                     u1121 0405                       u1041 01EB                       u1201 0776  
                     u1210 078C                       u1115 03F8                       u1211 078B  
                     u1140 0417                       u1220 07A1                       u1141 0416  
                     u1221 07A0                       u1070 0206                       u1230 07B6  
                     u1135 0407                       u1071 0205                       u1055 01F3  
                     u1231 07B5                       u1160 042B                       u1080 03D8  
                     u1240 07CB                       u1161 042A                       u1145 0413  
                     u1081 03D7                       u1065 01FA                       u1241 07CA  
                     u1170 0430                       u1090 03E3                       u1171 042F  
                     u1155 041F                       u1091 03E2                       u1307 06A8  
                     u1180 0754                       u1317 076C                       u1181 0753  
                     u1190 0762                       u1327 0781                       u1191 0761  
                     u1337 0796                       u1347 07AB                       u1267 05FC  
                     u1357 07C0                       u1277 0627                       u1367 07D5  
                     u1287 0652                       u1377 0192                       u1297 067D  
                     u1387 0275                       u1397 01A3                       _PEIE 005E  
                     _RCIF 0065                       _SPEN 00C7                       _TRMT 04C1  
                     _TXEN 04C5                       _SYNC 04C4               __CFG_WRT$OFF 0000  
        writeStrLCD@string 0072                       _main 05BE                       _luz1 0032  
                     _temp 003C                       _prox 003A                       btemp 007E  
                     start 0000              __CFG_IESO$OFF 0000           ?_I2C_Master_Init 0041  
         ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
              _writeIntLCD 01C8                      ?_main 0070            __end_of___awdiv 043A  
            __CFG_WDTE$OFF 0000                      _ANSEL 0188            __end_of___lldiv 03D1  
          ___awdiv@divisor 0076            __end_of___lwdiv 036B            __end_of___lwmod 02E5  
          ___awdiv@counter 0041                      _RCREG 001A                _writeStrLCD 02E5  
                    _SPBRG 0099                      _PORTB 0006                      _PORTD 0008  
                    _TRISB 0086                      _TRISD 0088                      _SSPIE 0463  
                    _SSPIF 0063                      _TXREG 0019             __CFG_FCMEN$OFF 0000  
          __end_of_initLCD 02AB            __end_of_dpowers 001D                      _temp1 0030  
                    _setup 043A      __size_of_writeCharLCD 000F             __CFG_BOREN$OFF 0000  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 05BE             __CFG_MCLRE$OFF 0000            __initialization 07F3  
             __end_of_main 07F3                     ??_main 0056               _writeCharLCD 0189  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070  
       ??_I2C_Master_Write 0072           ___awdiv@dividend 0078                     ?_setup 0070  
                   _ANSELH 0189                     _SPBRGH 009A                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _TRISC6 043E  
                   _TRISC7 043F                     _SSPCON 0014                     _SSPBUF 0013  
           __CFG_PWRTE$OFF 0000          writeIntLCD@buffer 0051          writeIntLCD@numero 0055  
                   _clcLCD 0151                     _cmdLCD 0198                     ___wmul 01E6  
                ??___awdiv 007A                     _caudal 003E                  ??___lldiv 0078  
                ??___lwdiv 0074                  ??___lwmod 007C                     _cursor 0040  
         ___awdiv@quotient 0043                     _sensor 0024                  ??_initLCD 0073  
                ??_sprintf 0044    __end_of__initialization 07FC             __pcstackCOMMON 0070  
            __end_of_setup 04D6                    ??_setup 0049                 __pbssBANK0 0020  
            ?_setCursorLCD 0073                 __pmaintext 05BE                    ?_clcLCD 0070  
                  ?_cmdLCD 0070                    ?___wmul 0070               ?_writeIntLCD 0070  
             ?_writeStrLCD 0072                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 0003             ??_setCursorLCD 0074              setCursorLCD@x 0073  
            setCursorLCD@y 0075                    ___awdiv 03D1            __size_of_clcLCD 0007  
          __size_of_cmdLCD 0014                    ___lldiv 036B            __size_of___wmul 0025  
                  ___lwdiv 0327                    ___lwmod 02AB                    __ptext1 01C8  
                  __ptext2 04D6                    __ptext3 02AB                    __ptext4 0327  
                  __ptext5 043A                    __ptext6 02E5                    __ptext7 0189  
                  __ptext8 01AC                    __ptext9 0271                    _initLCD 0271  
                  _dpowers 0013                    _sen_dec 0020                    _pot_LCD 002C  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
                  _pot_dec 0028   __size_of_I2C_Master_Stop 0009                    _sprintf 04D6  
                  clrloop0 0159       end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070            ___lldiv@counter 007D  
                _RCSTAbits 0018           I2C_Master_Init@c 0041           I2C_Master_Read@a 0070  
                _TRISCbits 0087                  _TXSTAbits 0098             __end_of_clcLCD 0158  
           __end_of_cmdLCD 01AC             __end_of___wmul 020B       __end_of_setCursorLCD 01C8  
              _BAUDCTLbits 0187       __size_of_writeIntLCD 001E        start_initialization 07F3  
     __size_of_writeStrLCD 0042          ??_I2C_Master_Init 0045          ??_I2C_Master_Read 0072  
        ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070   __CFG_FOSC$INTRC_NOCLKOUT 0000  
                 ??_clcLCD 0073                   ??_cmdLCD 0070                   ??___wmul 0074  
                ___latbits 0002              __pcstackBANK0 0041      writeCharLCD@character 0071  
              sprintf@flag 0048                sprintf@prec 0049           _I2C_Master_Start 0160  
         _I2C_Master_Write 0172           ___lwdiv@dividend 0072                  cmdLCD@cmd 0072  
                 ?___awdiv 0076                   ?___lldiv 0070                   ?___lwdiv 0070  
                 ?___lwmod 0078                  __pstrings 0003                   ?_initLCD 0070  
            ?_writeCharLCD 0070           ___lwdiv@quotient 0075                   ?_sprintf 0041  
           __size_of_setup 009C             ___wmul@product 0074                  clear_ram0 0158  
    __size_of_setCursorLCD 001C                __stringbase 0012          ___wmul@multiplier 0070  
           ??_writeCharLCD 0070        I2C_Master_Read@temp 0074               _setCursorLCD 01AC  
         __size_of___awdiv 0069           __size_of___lldiv 0066           __size_of___lwdiv 0044  
         __size_of___lwmod 003A         __end_of__stringtab 0013                 sprintf@val 004A  
          _I2C_Master_Init 0239            _I2C_Master_Read 020B           __size_of_initLCD 003A  
          _I2C_Master_Wait 017C            _I2C_Master_Stop 0169            ___lwdiv@divisor 0070  
          ___lwdiv@counter 0077                   __ptext10 0151                   __ptext11 0198  
                 __ptext20 017C                   __ptext12 0239                   __ptext13 036B  
                 __ptext14 01E6                   __ptext15 03D1                   __ptext16 0172  
                 __ptext17 0169                   __ptext18 0160                   __ptext19 020B  
        __CFG_BOR4V$BOR40V 0000           __size_of_sprintf 00E8              __size_of_main 0235  
            ??_writeIntLCD 004E              ??_writeStrLCD 0074   __end_of_I2C_Master_Start 0169  
 __end_of_I2C_Master_Write 017C                  sprintf@ap 0047                  sprintf@sp 004C  
         ___lwmod@dividend 007A           ___lldiv@dividend 0074       __end_of_writeCharLCD 0198  
                stringcode 000D    __end_of_I2C_Master_Init 0271    __end_of_I2C_Master_Read 0239  
  __end_of_I2C_Master_Wait 0189    __end_of_I2C_Master_Stop 0172                   sprintf@c 004D  
                 sprintf@f 0041           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
          ___lwmod@divisor 0078            ___lwmod@counter 007D                   stringdir 000D  
                 stringtab 0003        __end_of_writeIntLCD 01E6                _SSPCON2bits 0091  
      __end_of_writeStrLCD 0327  
